

% .L4,	.L4,	.L5 # table_name
% id,	type,	geom # name
% int,	clob,	clob # type
% 3,	15,	22830 # length
[ 242,	"erf",	"<IndexedFaceSet  convex='false' coordIndex='0 1 2 -1 3 4 5 -1 6 7 8 -1 9 10 11 -1 12 13 14 -1 15 16 17 -1 18 19 20 -1 21 22 23'><Coordinate point='93860.33 463921.38 0.923 93860.145 463915.004 0.639 93861.69 463917.14 0.667 93860.33 463921.38 0.923 93855.45 463914.33 0.582 93860.145 463915.004 0.639 93861 463921.52 0.933 93860.33 463921.38 0.923 93861.69 463917.14 0.667 93864.5 463915.63 0.729 93864.13 463917.54 0.686 93861.69 463917.14 0.667 93854.57 463923.95 0.961 93860.33 463921.38 0.923 93858.71 463924.301 1.389 93864.5 463915.63 0.729 93861.69 463917.14 0.667 93860.145 463915.004 0.639 93860.33 463921.38 0.923 93860 463924.41 1.468 93858.71 463924.301 1.389 93854.57 463923.95 0.961 93855.45 463914.33 0.582 93860.33 463921.38 0.923 ' /></IndexedFaceSet>"	]
[ 241,	"onverhard",	"<IndexedFaceSet  convex='false' coordIndex='0 1 2 -1 3 4 5'><Coordinate point='93910.137 463900.664 0.27 93908.489 463901.283 0.424 93908.896 463900.183 0.427 93910.137 463900.664 0.27 93909.738 463901.743 0.352 93908.489 463901.283 0.424 ' /></IndexedFaceSet>"	]
[ 240,	"erf",	"<IndexedFaceSet  convex='false' coordIndex='0 1 2 -1 3 4 5 -1 6 7 8 -1 9 10 11'><Coordinate point='93829.05 463898.574 0.363 93828.202 463902.823 0.363 93828.793 463898.55 0.363 93835.241 463899.143 0.363 93829.481 463902.922 0.363 93829.05 463898.574 0.363 93829.05 463898.574 0.363 93829.481 463902.922 0.363 93828.202 463902.823 0.363 93834.718 463903.326 0.363 93829.481 463902.922 0.363 93835.241 463899.143 0.363 ' /></IndexedFaceSet>"	]
[ 239,	"erf",	"<IndexedFaceSet  convex='false' coordIndex='0 1 2 -1 3 4 5 -1 6 7 8'><Coordinate point='93822.976 463899.976 0.28 93824.036 463902.632 0.28 93822.802 463902.575 0.28 93825.785 463900.207 0.28 93825.691 463902.708 0.28 93824.036 463902.632 0.28 93822.976 463899.976 0.28 93825.785 463900.207 0.28 93824.036 463902.632 0.28 ' /></IndexedFaceSet>"	]
[ 238,	"erf",	"<IndexedFaceSet  convex='false' coordIndex='0 1 2 -1 3 4 5 -1 6 7 8 -1 9 10 11 -1 12 13 14 -1 15 16 17 -1 18 19 20 -1 21 22 23 -1 24 25 26 -1 27 28 29 -1 30 31 32 -1 33 34 35 -1 36 37 38 -1 39 40 41 -1 42 43 44 -1 45 46 47 -1 48 49 50 -1 51 52 53 -1 54 55 56 -1 57 58 59 -1 60 61 62 -1 63 64 65 -1 66 67 68 -1 69 70 71 -1 72 73 74 -1 75 76 77 -1 78 79 80 -1 81 82 83 -1 84 85 86 -1 87 88 89 -1 90 91 92 -1 93 94 95 -1 96 97 98 -1 99 100 101 -1 102 103 104 -1 105 106 107 -1 108 109 110 -1 111 112 113 -1 114 115 116 -1 117 118 119 -1 120 121 122 -1 123 124 125 -1 126 127 128 -1 129 130 131 -1 132 133 134 -1 135 136 137 -1 138 139 140 -1 141 142 143 -1 144 145 146 -1 147 148 149 -1 150 151 152 -1 153 154 155 -1 156 157 158 -1 159 160 161 -1 162 163 164 -1 165 166 167 -1 168 169 170 -1 171 172 173 -1 174 175 176 -1 177 178 179 -1 180 181 182 -1 183 184 185 -1 186 187 188 -1 189 190 191 -1 192 193 194 -1 195 196 197 -1 198 199 200 -1 201 202 203 -1 204 205 206 -1 207 208 209 -1 210 211 212 -1 213 214 215 -1 216 217 218 -1 219 220 221 -1 222 223 224 -1 225 226 227 -1 228 229 230 -1 231 232 233 -1 234 235 236 -1 237 238 239 -1 240 241 242 -1 243 244 245 -1 246 247 248 -1 249 250 251 -1 252 253 254 -1 255 256 257 -1 258 259 260 -1 261 262 263 -1 264 265 266 -1 267 268 269 -1 270 271 272 -1 273 274 275 -1 276 277 278 -1 279 280 281 -1 282 283 284 -1 285 286 287 -1 288 289 290 -1 291 292 293 -1 294 295 296 -1 297 298 299 -1 300 301 302 -1 303 304 305 -1 306 307 308 -1 309 310 311 -1 312 313 314 -1 315 316 317 -1 318 319 320 -1 321 322 323 -1 324 325 326 -1 327 328 329 -1 330 331 332 -1 333 334 335 -1 336 337 338 -1 339 340 341 -1 342 343 344 -1 345 346 347 -1 348 349 350 -1 351 352 353 -1 354 355 356 -1 357 358 359 -1 360 361 362 -1 363 364 365 -1 366 367 368 -1 369 370 371 -1 372 373 374 -1 375 376 377 -1 378 379 380 -1 381 382 383 -1 384 385 386 -1 387 388 389 -1 390 391 392 -1 393 394 395 -1 396 397 398 -1 399 400 401 -1 402 403 404 -1 405 406 407 -1 408 409 410 -1 411 412 413 -1 414 415 416 -1 417 418 419 -1 420 421 422 -1 423 424 425 -1 426 427 428 -1 429 430 431 -1 432 433 434 -1 435 436 437 -1 438 439 440 -1 441 442 443 -1 444 445 446 -1 447 448 449 -1 450 451 452 -1 453 454 455 -1 456 457 458 -1 459 460 461 -1 462 463 464 -1 465 466 467 -1 468 469 470 -1 471 472 473 -1 474 475 476 -1 477 478 479 -1 480 481 482 -1 483 484 485 -1 486 487 488 -1 489 490 491 -1 492 493 494 -1 495 496 497 -1 498 499 500 -1 501 502 503 -1 504 505 506 -1 507 508 509 -1 510 511 512 -1 513 514 515 -1 516 517 518 -1 519 520 521 -1 522 523 524 -1 525 526 527 -1 528 529 530 -1 531 532 533 -1 534 535 536 -1 537 538 539 -1 540 541 542 -1 543 544 545 -1 546 547 548 -1 549 550 551 -1 552 553 554 -1 555 556 557 -1 558 559 560 -1 561 562 563 -1 564 565 566 -1 567 568 569 -1 570 571 572 -1 573 574 575 -1 576 577 578 -1 579 580 581 -1 582 583 584 -1 585 586 587 -1 588 589 590 -1 591 592 593 -1 594 595 596 -1 597 598 599 -1 600 601 602 -1 603 604 605 -1 606 607 608 -1 609 610 611 -1 612 613 614 -1 615 616 617 -1 618 619 620 -1 621 622 623 -1 624 625 626 -1 627 628 629 -1 630 631 632 -1 633 634 635 -1 636 637 638 -1 639 640 641 -1 642 643 644 -1 645 646 647 -1 648 649 650 -1 651 652 653 -1 654 655 656 -1 657 658 659 -1 660 661 662 -1 663 664 665 -1 666 667 668 -1 669 670 671 -1 672 673 674 -1 675 676 677 -1 678 679 680 -1 681 682 683'><Coordinate point='93893.2662 463942.6071 0.646 93892.958 463944.05 0.639 93893.264 463942.594 0.646 93893.2693 463942.6201 0.646 93892.958 463944.05 0.639 93893.2662 463942.6071 0.646 93893.3785 463942.7471 0.646 93893.3908 463942.7521 0.646 93892.958 463944.05 0.639 93893.2733 463942.6328 0.646 93892.958 463944.05 0.639 93893.2693 463942.6201 0.646 93893.2781 463942.6452 0.646 93892.958 463944.05 0.639 93893.2733 463942.6328 0.646 93893.2838 463942.6572 0.646 93892.958 463944.05 0.639 93893.2781 463942.6452 0.646 93893.2902 463942.6689 0.646 93892.958 463944.05 0.639 93893.2838 463942.6572 0.646 93893.2974 463942.68 0.646 93892.958 463944.05 0.639 93893.2902 463942.6689 0.646 93893.3054 463942.6907 0.646 93892.958 463944.05 0.639 93893.2974 463942.68 0.646 93893.3141 463942.7008 0.646 93892.958 463944.05 0.639 93893.3054 463942.6907 0.646 93893.3234 463942.7103 0.646 93892.958 463944.05 0.639 93893.3141 463942.7008 0.646 93893.3334 463942.7191 0.646 93892.958 463944.05 0.639 93893.3234 463942.7103 0.646 93893.3439 463942.7272 0.646 93892.958 463944.05 0.639 93893.3334 463942.7191 0.646 93893.355 463942.7346 0.646 93892.958 463944.05 0.639 93893.3439 463942.7272 0.646 93893.3665 463942.7413 0.646 93892.958 463944.05 0.639 93893.355 463942.7346 0.646 93893.3785 463942.7471 0.646 93892.958 463944.05 0.639 93893.3665 463942.7413 0.646 93893.3908 463942.7521 0.646 93893.4034 463942.7563 0.646 93892.958 463944.05 0.639 93893.4034 463942.7563 0.646 93893.4163 463942.7596 0.646 93892.958 463944.05 0.639 93893.4163 463942.7596 0.646 93893.4294 463942.762 0.646 93892.958 463944.05 0.639 93893.4294 463942.762 0.646 93893.4426 463942.7635 0.646 93892.958 463944.05 0.639 93893.4426 463942.7635 0.646 93893.4559 463942.7642 0.646 93892.958 463944.05 0.639 93893.4559 463942.7642 0.646 93893.4692 463942.7639 0.632 93892.958 463944.05 0.639 93893.4692 463942.7639 0.632 93893.4825 463942.7627 0.632 93892.958 463944.05 0.639 93893.4825 463942.7627 0.632 93893.4956 463942.7607 0.632 93892.958 463944.05 0.639 93893.4956 463942.7607 0.632 93893.5086 463942.7577 0.632 93892.958 463944.05 0.639 93893.5086 463942.7577 0.632 93893.5213 463942.7539 0.632 93892.958 463944.05 0.639 93893.5213 463942.7539 0.632 93894.525 463944.307 0.649 93892.958 463944.05 0.639 93893.5338 463942.7492 0.632 93894.525 463944.307 0.649 93893.5213 463942.7539 0.632 93893.5459 463942.7437 0.632 93894.525 463944.307 0.649 93893.5338 463942.7492 0.632 93893.5576 463942.7373 0.632 93894.525 463944.307 0.649 93893.5459 463942.7437 0.632 93893.5689 463942.7302 0.632 93894.525 463944.307 0.649 93893.5576 463942.7373 0.632 93893.5796 463942.7224 0.632 93894.525 463944.307 0.649 93893.5689 463942.7302 0.632 93893.5898 463942.7138 0.632 93894.525 463944.307 0.649 93893.5796 463942.7224 0.632 93893.5994 463942.7046 0.632 93894.525 463944.307 0.649 93893.5898 463942.7138 0.632 93893.6083 463942.6947 0.632 93894.525 463944.307 0.649 93893.5994 463942.7046 0.632 93893.6166 463942.6843 0.632 93894.525 463944.307 0.649 93893.6083 463942.6947 0.632 93893.6241 463942.6733 0.632 93894.525 463944.307 0.649 93893.6166 463942.6843 0.632 93893.6309 463942.6619 0.684 93894.525 463944.307 0.649 93893.6241 463942.6733 0.632 93893.6369 463942.65 0.684 93894.525 463944.307 0.649 93893.6309 463942.6619 0.684 93893.642 463942.6377 0.684 93894.525 463944.307 0.649 93893.6369 463942.65 0.684 93893.6463 463942.6251 0.684 93894.525 463944.307 0.649 93893.642 463942.6377 0.684 93893.6498 463942.6123 0.684 93894.525 463944.307 0.649 93893.6463 463942.6251 0.684 93893.6523 463942.5992 0.684 93894.525 463944.307 0.649 93893.6498 463942.6123 0.684 93893.654 463942.586 0.684 93894.525 463944.307 0.649 93893.6523 463942.5992 0.684 93893.6551 463942.5724 0.684 93894.525 463944.307 0.649 93893.654 463942.586 0.684 93893.6552 463942.5587 0.684 93894.525 463944.307 0.649 93893.6551 463942.5724 0.684 93893.6544 463942.5451 0.684 93894.525 463944.307 0.649 93893.6552 463942.5587 0.684 93893.6527 463942.5316 0.684 93894.525 463944.307 0.649 93893.6544 463942.5451 0.684 93893.6152 463942.4447 0.684 93893.6066 463942.4341 0.684 93894.1076 463939.9357 0.651 93893.9892 463939.9571 0.662 93894.0027 463939.9584 0.662 93893.516 463942.3757 0.684 93893.9892 463939.9571 0.662 93893.516 463942.3757 0.684 93893.5028 463942.3721 0.684 93893.9892 463939.9571 0.662 93893.5028 463942.3721 0.684 93893.9758 463939.955 0.662 93894.0027 463939.9584 0.662 93893.5289 463942.3801 0.684 93893.516 463942.3757 0.684 93893.4894 463942.3696 0.684 93893.9758 463939.955 0.662 93893.5028 463942.3721 0.684 93893.9626 463939.9519 0.662 93893.9758 463939.955 0.662 93893.4894 463942.3696 0.684 93893.9626 463939.9519 0.662 93893.4894 463942.3696 0.684 93893.4758 463942.3679 0.684 93893.9626 463939.9519 0.662 93893.4758 463942.3679 0.684 93893.9496 463939.948 0.662 93893.4758 463942.3679 0.684 93893.4622 463942.3672 0.684 93893.9496 463939.948 0.662 93893.4622 463942.3672 0.684 93893.9369 463939.9432 0.662 93893.9496 463939.948 0.662 93893.4485 463942.3675 0.684 93893.9369 463939.9432 0.662 93893.4622 463942.3672 0.684 93893.9246 463939.9375 0.662 93893.9369 463939.9432 0.662 93893.4485 463942.3675 0.684 93893.9246 463939.9375 0.662 93893.4485 463942.3675 0.684 93893.4349 463942.3687 0.684 93893.9246 463939.9375 0.662 93893.4349 463942.3687 0.684 93893.9126 463939.9311 0.662 93893.4349 463942.3687 0.684 93893.4214 463942.3708 0.684 93893.9126 463939.9311 0.662 93893.4214 463942.3708 0.684 93893.9012 463939.9238 0.662 93893.9126 463939.9311 0.662 93893.4081 463942.3739 0.684 93893.9012 463939.9238 0.662 93893.4214 463942.3708 0.684 93893.8902 463939.9158 0.662 93893.9012 463939.9238 0.662 93893.4081 463942.3739 0.684 93893.8902 463939.9158 0.662 93893.4081 463942.3739 0.684 93893.3951 463942.3779 0.684 93893.8902 463939.9158 0.662 93893.3951 463942.3779 0.684 93893.8798 463939.907 0.662 93893.3951 463942.3779 0.684 93893.3823 463942.3828 0.684 93893.8798 463939.907 0.662 93893.3823 463942.3828 0.684 93893.8701 463939.8976 0.662 93893.8798 463939.907 0.662 93893.37 463942.3886 0.684 93893.8701 463939.8976 0.662 93893.3823 463942.3828 0.684 93893.861 463939.8876 0.662 93893.8701 463939.8976 0.662 93893.37 463942.3886 0.684 93893.861 463939.8876 0.662 93893.37 463942.3886 0.684 93893.358 463942.3952 0.684 93893.861 463939.8876 0.662 93893.358 463942.3952 0.684 93893.8526 463939.8769 0.662 93893.358 463942.3952 0.684 93893.3466 463942.4026 0.684 93893.8526 463939.8769 0.662 93893.3466 463942.4026 0.684 93893.8449 463939.8657 0.662 93893.8526 463939.8769 0.662 93893.3357 463942.4108 0.684 93893.8449 463939.8657 0.662 93893.3466 463942.4026 0.684 93893.838 463939.854 0.662 93893.8449 463939.8657 0.662 93893.3357 463942.4108 0.684 93893.838 463939.854 0.662 93893.3357 463942.4108 0.684 93893.3253 463942.4198 0.684 93893.838 463939.854 0.662 93893.3253 463942.4198 0.684 93893.3157 463942.4294 0.684 93893.838 463939.854 0.662 93893.3157 463942.4294 0.684 93893.3067 463942.4397 0.684 93893.838 463939.854 0.662 93893.3067 463942.4397 0.684 93893.2985 463942.4506 0.646 93893.838 463939.854 0.662 93893.2985 463942.4506 0.646 93893.291 463942.462 0.646 93894.0163 463939.9587 0.662 93893.5289 463942.3801 0.684 93894.0027 463939.9584 0.662 93893.5415 463942.3854 0.684 93893.5289 463942.3801 0.684 93894.0163 463939.9587 0.662 93893.5415 463942.3854 0.684 93894.0163 463939.9587 0.662 93894.0299 463939.9581 0.662 93893.5415 463942.3854 0.684 93894.0299 463939.9581 0.662 93893.5536 463942.3915 0.684 93894.0299 463939.9581 0.662 93894.0434 463939.9566 0.651 93893.5536 463942.3915 0.684 93894.0434 463939.9566 0.651 93893.5654 463942.3985 0.684 93893.5536 463942.3915 0.684 93894.0567 463939.9542 0.651 93893.5654 463942.3985 0.684 93894.0434 463939.9566 0.651 93893.5766 463942.4063 0.684 93893.5654 463942.3985 0.684 93894.0567 463939.9542 0.651 93893.5766 463942.4063 0.684 93894.0567 463939.9542 0.651 93894.0699 463939.9508 0.651 93893.5766 463942.4063 0.684 93894.0699 463939.9508 0.651 93893.5872 463942.4149 0.684 93894.0699 463939.9508 0.651 93894.0828 463939.9466 0.651 93893.5872 463942.4149 0.684 93894.0828 463939.9466 0.651 93893.5972 463942.4241 0.684 93893.5872 463942.4149 0.684 93894.0954 463939.9416 0.651 93893.5972 463942.4241 0.684 93894.0828 463939.9466 0.651 93893.6066 463942.4341 0.684 93893.5972 463942.4241 0.684 93894.0954 463939.9416 0.651 93893.6066 463942.4341 0.684 93894.0954 463939.9416 0.651 93894.1076 463939.9357 0.651 93893.6152 463942.4447 0.684 93894.1076 463939.9357 0.651 93894.1194 463939.929 0.651 93893.6152 463942.4447 0.684 93894.1194 463939.929 0.651 93893.6231 463942.4558 0.684 93894.1194 463939.929 0.651 93894.1307 463939.9215 0.651 93893.6231 463942.4558 0.684 93894.1307 463939.9215 0.651 93893.6302 463942.4675 0.684 93893.6231 463942.4558 0.684 93894.1415 463939.9132 0.651 93893.6302 463942.4675 0.684 93894.1307 463939.9215 0.651 93893.6365 463942.4796 0.684 93893.6302 463942.4675 0.684 93894.1415 463939.9132 0.651 93893.6365 463942.4796 0.684 93894.1415 463939.9132 0.651 93894.1517 463939.9043 0.651 93893.6365 463942.4796 0.684 93894.1517 463939.9043 0.651 93893.6419 463942.4921 0.684 93894.1517 463939.9043 0.651 93894.1613 463939.8946 0.651 93893.6419 463942.4921 0.684 93894.1613 463939.8946 0.651 93893.6464 463942.505 0.684 93893.6419 463942.4921 0.684 93894.1702 463939.8844 0.651 93893.6464 463942.505 0.684 93894.1613 463939.8946 0.651 93893.65 463942.5182 0.684 93893.6464 463942.505 0.684 93894.1702 463939.8844 0.651 93893.65 463942.5182 0.684 93894.1702 463939.8844 0.651 93894.1784 463939.8735 0.651 93893.65 463942.5182 0.684 93894.1784 463939.8735 0.651 93893.6527 463942.5316 0.684 93894.1784 463939.8735 0.651 93894.1858 463939.8622 0.651 93893.6527 463942.5316 0.684 93894.1858 463939.8622 0.651 93894.525 463944.307 0.649 93893.6527 463942.5316 0.684 93894.1924 463939.8504 0.651 93894.525 463944.307 0.649 93894.1858 463939.8622 0.651 93894.1983 463939.8381 0.651 93894.525 463944.307 0.649 93894.1924 463939.8504 0.651 93894.2033 463939.8255 0.651 93894.525 463944.307 0.649 93894.1983 463939.8381 0.651 93894.2074 463939.8125 0.651 93894.525 463944.307 0.649 93894.2033 463939.8255 0.651 93894.2107 463939.7994 0.651 93894.525 463944.307 0.649 93894.2074 463939.8125 0.651 93894.2124 463939.7322 0.651 93894.21 463939.7189 0.651 93894.7571 463937.0525 0.634 93894.1191 463939.5902 0.676 93894.1073 463939.5835 0.676 93894.6084 463937.1466 0.634 93894.1073 463939.5835 0.676 93894.5944 463937.1476 0.634 93894.6084 463937.1466 0.634 93894.1191 463939.5902 0.676 93894.6084 463937.1466 0.634 93894.6223 463937.1446 0.634 93894.5944 463937.1476 0.634 93894.1073 463939.5835 0.676 93894.0952 463939.5777 0.676 93894.5944 463937.1476 0.634 93894.0952 463939.5777 0.676 93894.5804 463937.1476 0.634 93894.0952 463939.5777 0.676 93894.0827 463939.5726 0.676 93894.5804 463937.1476 0.634 93894.0827 463939.5726 0.676 93894.5664 463937.1467 0.634 93894.5804 463937.1476 0.634 93894.0699 463939.5684 0.676 93894.5664 463937.1467 0.634 93894.0827 463939.5726 0.676 93894.5525 463937.1448 0.634 93894.5664 463937.1467 0.634 93894.0699 463939.5684 0.676 93894.5525 463937.1448 0.634 93894.0699 463939.5684 0.676 93894.0568 463939.565 0.676 93894.5525 463937.1448 0.634 93894.0568 463939.565 0.676 93894.5388 463937.1419 0.634 93894.0568 463939.565 0.676 93894.0436 463939.5626 0.676 93894.5388 463937.1419 0.634 93894.0436 463939.5626 0.676 93894.5254 463937.138 0.634 93894.5388 463937.1419 0.634 93894.0302 463939.561 0.676 93894.5254 463937.138 0.634 93894.0436 463939.5626 0.676 93894.5122 463937.1333 0.629 93894.5254 463937.138 0.634 93894.0302 463939.561 0.676 93894.5122 463937.1333 0.629 93894.0302 463939.561 0.676 93894.0167 463939.5603 0.676 93894.5122 463937.1333 0.629 93894.0167 463939.5603 0.676 93894.4994 463937.1276 0.629 93894.0167 463939.5603 0.676 93894.0032 463939.5606 0.676 93894.4994 463937.1276 0.629 93894.0032 463939.5606 0.676 93893.9898 463939.5617 0.676 93894.4994 463937.1276 0.629 93893.9898 463939.5617 0.676 93894.487 463937.121 0.629 93894.4994 463937.1276 0.629 93894.4763 463937.1146 0.629 93894.487 463937.121 0.629 93893.9898 463939.5617 0.676 93894.4763 463937.1146 0.629 93893.9898 463939.5617 0.676 93893.9764 463939.5638 0.676 93894.4763 463937.1146 0.629 93893.9764 463939.5638 0.676 93894.4661 463937.1075 0.629 93893.9764 463939.5638 0.676 93893.9633 463939.5667 0.676 93894.4661 463937.1075 0.629 93893.9633 463939.5667 0.676 93894.4563 463937.0998 0.629 93894.4661 463937.1075 0.629 93893.9503 463939.5705 0.676 93894.4563 463937.0998 0.629 93893.9633 463939.5667 0.676 93894.4471 463937.0914 0.629 93894.4563 463937.0998 0.629 93893.9503 463939.5705 0.676 93894.4471 463937.0914 0.629 93893.9503 463939.5705 0.676 93893.9377 463939.5752 0.676 93894.4471 463937.0914 0.629 93893.9377 463939.5752 0.676 93894.4385 463937.0825 0.629 93893.9377 463939.5752 0.676 93893.9253 463939.5807 0.676 93894.4385 463937.0825 0.629 93893.9253 463939.5807 0.676 93894.4304 463937.073 0.629 93894.4385 463937.0825 0.629 93893.9134 463939.587 0.676 93894.4304 463937.073 0.629 93893.9253 463939.5807 0.676 93894.423 463937.063 0.629 93894.4304 463937.073 0.629 93893.9134 463939.587 0.676 93894.423 463937.063 0.629 93893.9134 463939.587 0.676 93893.902 463939.5941 0.676 93894.423 463937.063 0.629 93893.902 463939.5941 0.676 93893.891 463939.602 0.676 93894.1191 463939.5902 0.676 93894.6223 463937.1446 0.634 93894.1303 463939.5977 0.676 93894.6223 463937.1446 0.634 93894.636 463937.1416 0.634 93894.1303 463939.5977 0.676 93894.636 463937.1416 0.634 93894.141 463939.6059 0.676 93894.1303 463939.5977 0.676 93894.6494 463937.1377 0.634 93894.141 463939.6059 0.676 93894.636 463937.1416 0.634 93894.1511 463939.6148 0.676 93894.141 463939.6059 0.676 93894.6494 463937.1377 0.634 93894.1511 463939.6148 0.676 93894.6494 463937.1377 0.634 93894.6626 463937.1328 0.634 93894.1511 463939.6148 0.676 93894.6626 463937.1328 0.634 93894.1607 463939.6244 0.676 93894.6626 463937.1328 0.634 93894.6753 463937.1271 0.634 93894.1607 463939.6244 0.676 93894.6753 463937.1271 0.634 93894.1695 463939.6345 0.676 93894.1607 463939.6244 0.676 93894.6877 463937.1204 0.634 93894.1695 463939.6345 0.676 93894.6753 463937.1271 0.634 93894.1777 463939.6453 0.651 93894.1695 463939.6345 0.676 93894.6877 463937.1204 0.634 93894.1777 463939.6453 0.651 93894.6877 463937.1204 0.634 93894.6995 463937.1129 0.634 93894.1777 463939.6453 0.651 93894.6995 463937.1129 0.634 93894.1851 463939.6566 0.651 93894.6995 463937.1129 0.634 93894.7108 463937.1046 0.634 93894.1851 463939.6566 0.651 93894.7108 463937.1046 0.634 93894.1917 463939.6683 0.651 93894.1851 463939.6566 0.651 93894.7215 463937.0955 0.634 93894.1917 463939.6683 0.651 93894.7108 463937.1046 0.634 93894.1976 463939.6805 0.651 93894.1917 463939.6683 0.651 93894.7215 463937.0955 0.634 93894.1976 463939.6805 0.651 93894.7215 463937.0955 0.634 93894.7315 463937.0857 0.634 93894.1976 463939.6805 0.651 93894.7315 463937.0857 0.634 93894.2026 463939.693 0.651 93894.7315 463937.0857 0.634 93894.7408 463937.0753 0.634 93894.2026 463939.693 0.651 93894.7408 463937.0753 0.634 93894.2067 463939.7058 0.651 93894.2026 463939.693 0.651 93894.7493 463937.0641 0.634 93894.2067 463939.7058 0.651 93894.7408 463937.0753 0.634 93894.21 463939.7189 0.651 93894.2067 463939.7058 0.651 93894.7493 463937.0641 0.634 93894.21 463939.7189 0.651 93894.7493 463937.0641 0.634 93894.7571 463937.0525 0.634 93894.2124 463939.7322 0.651 93894.7571 463937.0525 0.634 93894.764 463937.0403 0.634 93894.2124 463939.7322 0.651 93894.764 463937.0403 0.634 93894.2139 463939.7456 0.651 93894.7843 463936.9179 0.634 93894.7817 463936.9041 0.634 93896.459 463934.493 0.634 93894.7817 463936.9041 0.634 93894.7781 463936.8905 0.634 93896.459 463934.493 0.634 93894.7781 463936.8905 0.634 93894.7736 463936.8773 0.634 93896.459 463934.493 0.634 93894.7736 463936.8773 0.634 93894.7682 463936.8643 0.634 93896.459 463934.493 0.634 93894.7682 463936.8643 0.634 93894.7619 463936.8518 0.634 93896.459 463934.493 0.634 93894.7619 463936.8518 0.634 93894.7547 463936.8398 0.634 93896.459 463934.493 0.634 93894.7547 463936.8398 0.634 93894.7467 463936.8283 0.653 93896.459 463934.493 0.634 93894.7467 463936.8283 0.653 93894.7379 463936.8174 0.653 93896.459 463934.493 0.634 93894.7379 463936.8174 0.653 93894.7284 463936.8071 0.653 93896.459 463934.493 0.634 93894.7284 463936.8071 0.653 93894.7182 463936.7975 0.648 93896.459 463934.493 0.634 93894.7182 463936.7975 0.648 93894.7073 463936.7887 0.648 93896.459 463934.493 0.634 93894.7073 463936.7887 0.648 93894.6958 463936.7806 0.648 93896.459 463934.493 0.634 93896.459 463934.493 0.634 93898.549 463932.51 0.582 93898.038 463934.8 0.596 93894.6838 463936.7734 0.648 93896.459 463934.493 0.634 93894.6958 463936.7806 0.648 93894.6714 463936.767 0.648 93896.459 463934.493 0.634 93894.6838 463936.7734 0.648 93894.6585 463936.7615 0.648 93896.459 463934.493 0.634 93894.6714 463936.767 0.648 93894.6317 463936.7534 0.648 93896.459 463934.493 0.634 93894.6452 463936.757 0.648 93894.6179 463936.7507 0.653 93896.459 463934.493 0.634 93894.6317 463936.7534 0.648 93894.604 463936.749 0.653 93896.459 463934.493 0.634 93894.6179 463936.7507 0.653 93894.59 463936.7482 0.653 93896.459 463934.493 0.634 93894.604 463936.749 0.653 93894.5759 463936.7484 0.653 93896.459 463934.493 0.634 93894.59 463936.7482 0.653 93894.562 463936.7495 0.653 93896.459 463934.493 0.634 93894.5759 463936.7484 0.653 93894.5481 463936.7517 0.653 93896.459 463934.493 0.634 93894.562 463936.7495 0.653 93894.5344 463936.7549 0.653 93896.459 463934.493 0.634 93894.5481 463936.7517 0.653 93894.521 463936.759 0.653 93896.459 463934.493 0.634 93894.5344 463936.7549 0.653 93895.52 463931.834 0.577 93896.459 463934.493 0.634 93894.521 463936.759 0.653 93895.52 463931.834 0.577 93894.521 463936.759 0.653 93894.5079 463936.7641 0.653 93895.52 463931.834 0.577 93894.5079 463936.7641 0.653 93894.4952 463936.7701 0.653 93895.52 463931.834 0.577 93894.4952 463936.7701 0.653 93894.483 463936.777 0.653 93894.6452 463936.757 0.648 93896.459 463934.493 0.634 93894.6585 463936.7615 0.648 93895.52 463931.834 0.577 93898.549 463932.51 0.582 93896.459 463934.493 0.634 93896.459 463934.493 0.634 93894.7859 463936.9318 0.634 93894.7843 463936.9179 0.634 93896.459 463934.493 0.634 93894.7866 463936.9458 0.634 93894.7859 463936.9318 0.634 93896.459 463934.493 0.634 93894.7862 463936.9598 0.634 93894.7866 463936.9458 0.634 93896.459 463934.493 0.634 93894.7849 463936.9738 0.634 93894.7862 463936.9598 0.634 93896.459 463934.493 0.634 93894.7826 463936.9876 0.634 93894.7849 463936.9738 0.634 93896.459 463934.493 0.634 93894.7794 463937.0012 0.634 93894.7826 463936.9876 0.634 93896.459 463934.493 0.634 93894.7752 463937.0146 0.634 93894.7794 463937.0012 0.634 93896.459 463934.493 0.634 93894.77 463937.0276 0.634 93894.7752 463937.0146 0.634 93896.459 463934.493 0.634 93894.2145 463939.7591 0.651 93894.77 463937.0276 0.634 93894.77 463937.0276 0.634 93894.2145 463939.7591 0.651 93894.764 463937.0403 0.634 93894.764 463937.0403 0.634 93894.2145 463939.7591 0.651 93894.2139 463939.7456 0.651 93896.459 463934.493 0.634 93894.2142 463939.7726 0.651 93894.2145 463939.7591 0.651 93896.459 463934.493 0.634 93894.213 463939.786 0.651 93894.2142 463939.7726 0.651 93896.459 463934.493 0.634 93894.525 463944.307 0.649 93894.213 463939.786 0.651 93894.213 463939.786 0.651 93894.525 463944.307 0.649 93894.2107 463939.7994 0.651 ' /></IndexedFaceSet>"	]
[ 237,	"erf",	"<IndexedFaceSet  convex='false' coordIndex='0 1 2 -1 3 4 5'><Coordinate point='93873.451 463909.766 0.468 93871.007 463910.77 0.468 93871.231 463909.402 0.469 93873.451 463909.766 0.468 93873.242 463911.136 0.468 93871.007 463910.77 0.468 ' /></IndexedFaceSet>"	]
[ 236,	"onverhard",	"<IndexedFaceSet  convex='false' coordIndex='0 1 2 -1 3 4 5'><Coordinate point='93889.702 463896.171 0.341 93888.431 463895.923 0.271 93888.683 463894.739 0.236 93889.982 463895.002 0.245 93889.702 463896.171 0.341 93888.683 463894.739 0.236 ' /></IndexedFaceSet>"	]
[ 235,	"erf",	"<IndexedFaceSet  convex='false' coordIndex='0 1 2 -1 3 4 5 -1 6 7 8 -1 9 10 11'><Coordinate point='93817.676 463899.754 0.177 93816.346 463899.639 0.177 93816.854 463895.967 0.455 93820.212 463896.42 0.559 93817.676 463899.754 0.177 93817.977 463896.118 0.455 93817.977 463896.118 0.455 93817.676 463899.754 0.177 93816.854 463895.967 0.455 93819.954 463899.95 0.28 93817.676 463899.754 0.177 93820.212 463896.42 0.559 ' /></IndexedFaceSet>"	]
[ 234,	"open verharding",	"<IndexedFaceSet  convex='false' coordIndex='0 1 2'><Coordinate point='93861.8653 463891 -0.048 93865.2358 463891 -0.015 93865.133 463891.575 -0.059 ' /></IndexedFaceSet>"	]
[ 233,	"erf",	"<IndexedFaceSet  convex='false' coordIndex='0 1 2 -1 3 4 5 -1 6 7 8 -1 9 10 11 -1 12 13 14 -1 15 16 17 -1 18 19 20 -1 21 22 23 -1 24 25 26 -1 27 28 29 -1 30 31 32 -1 33 34 35'><Coordinate point='93907.97 463919.32 0.469 93907.89 463920.29 0.469 93907.21 463919.21 0.469 93916 463921.1732 0.46 93916 463926.1988 0.456 93912.88 463925.45 0.457 93911.8 463928.74 0.473 93908.752 463925.575 0.455 93912.88 463925.45 0.457 93911.8 463928.74 0.473 93908.34 463927.97 0.418 93908.752 463925.575 0.455 93912.88 463925.45 0.457 93908.752 463925.575 0.455 93908.96 463924.37 0.477 93912.88 463925.45 0.457 93908.96 463924.37 0.477 93910.08 463921.02 0.443 93907.89 463920.29 0.469 93906.08 463923.69 0.477 93907.21 463919.21 0.469 93908.96 463924.37 0.477 93906.08 463923.69 0.477 93907.89 463920.29 0.469 93912.88 463925.45 0.457 93910.08 463921.02 0.443 93916 463921.1732 0.46 93908.96 463924.37 0.477 93907.89 463920.29 0.469 93910.08 463921.02 0.443 93910.08 463921.02 0.443 93910.974 463919.745 0.452 93916 463921.1732 0.46 93910.08 463921.02 0.443 93910.5 463919.61 0.452 93910.974 463919.745 0.452 ' /></IndexedFaceSet>"	]
[ 232,	"onverhard",	"<IndexedFaceSet  convex='false' coordIndex='0 1 2 -1 3 4 5'><Coordinate point='93877.652 463893.774 -0.01 93876.326 463893.535 0.035 93876.604 463892.334 -0.135 93877.882 463892.56 -0.111 93877.652 463893.774 -0.01 93876.604 463892.334 -0.135 ' /></IndexedFaceSet>"	]
[ 231,	"erf",	"<IndexedFaceSet  convex='false' coordIndex='0 1 2 -1 3 4 5 -1 6 7 8 -1 9 10 11 -1 12 13 14 -1 15 16 17 -1 18 19 20 -1 21 22 23 -1 24 25 26'><Coordinate point='93839.476 463913.174 0.595 93833.748 463917.314 0.577 93834.59 463912.516 0.576 93840.139 463908.882 0.57 93841.5 463909.038 0.57 93839.476 463913.174 0.595 93839.476 463913.174 0.595 93844.32 463918.451 0.595 93833.748 463917.314 0.577 93841.5 463909.038 0.57 93844.32 463918.451 0.595 93839.476 463913.174 0.595 93842.756 463901.581 0.473 93844.71 463901.842 0.458 93841.5 463909.038 0.57 93844.71 463901.842 0.458 93844.451 463918.465 0.595 93841.5 463909.038 0.57 93845.209 463896.982 0.366 93846.836 463897.163 0.364 93844.71 463901.842 0.458 93846.836 463897.163 0.364 93844.451 463918.465 0.595 93844.71 463901.842 0.458 93844.451 463918.465 0.595 93844.32 463918.451 0.595 93841.5 463909.038 0.57 ' /></IndexedFaceSet>"	]
[ 230,	"open verharding",	"<IndexedFaceSet  convex='false' coordIndex='0 1 2 -1 3 4 5 -1 6 7 8'><Coordinate point='93876.326 463893.535 0.035 93869.0143 463891 -0.143 93876.604 463892.334 -0.135 93866.454 463891.813 -0.016 93866.6015 463891 -0.077 93869.0143 463891 -0.143 93876.326 463893.535 0.035 93866.454 463891.813 -0.016 93869.0143 463891 -0.143 ' /></IndexedFaceSet>"	]
[ 229,	"onverhard",	"<IndexedFaceSet  convex='false' coordIndex='0 1 2 -1 3 4 5 -1 6 7 8'><Coordinate point='93866 463891 -0.015 93866.6015 463891 -0.077 93866.454 463891.813 -0.016 93865.133 463891.575 -0.059 93866 463891 -0.015 93866.454 463891.813 -0.016 93865.133 463891.575 -0.059 93865.2358 463891 -0.015 93866 463891 -0.015 ' /></IndexedFaceSet>"	]
[ 228,	"open verharding",	"<IndexedFaceSet  convex='false' coordIndex='0 1 2 -1 3 4 5'><Coordinate point='93877.882 463892.56 -0.111 93888.431 463895.923 0.271 93877.652 463893.774 -0.01 93877.882 463892.56 -0.111 93888.683 463894.739 0.236 93888.431 463895.923 0.271 ' /></IndexedFaceSet>"	]
% .trace,	.trace # table_name
% usec,	statement # name
% bigint,	clob # type
% 8,	6668 # length
[ 7,	"X_630=\"trace with\\nbounds as (\\n select st_segmentize(st_makeenvelope(_west, _south, _east, _north, 28992), _segmentlength) as geom\\n),\\nplantcover as (\\n select ogc_fid, \\\\'plantcover\\\\' as class, bgt_fysiekvoorkomen as type, st_intersection(wkt, geom) as geom \\n from bgt_begroeidterreindeel a, bounds b\\n where \\n eindregistratie is null and\\n \\n (not\\n ((a.col_ymax < _south) or\\n (a.col_ymin > _north) or\\n (a.col_xmax < _west) or\\n (a.col_xmin > _east))\\n ) and\\n [geom] intersects [wkt] and\\n \\n col_type = \\\\'ST_Polygon\\\\'\\n \\n),\\nbare as (\\n select ogc_fid, \\\\'bare\\\\' as class, bgt_fysiekvoorkomen as type, st_intersection(wkt, geom) as geom\\n from bgt_onbegroeidterreindeel a, bounds b\\n where\\n eindregistratie is null and\\n \\n (not\\n ((a.col_ymax < _south) or\\n (a.col_ymin > _north) or\\n (a.col_xmax < _west) or\\n (a.col_xmin > _east))\\n ) and\\n [geom] intersects [wkt] and\\n \\n \\n col_type = \\\\'ST_Polygon\\\\'\\n),\\npointcloud_ground as (\\n select x, y, z\\n from ahn3, bounds\\n \\n where\\n c = 2 and\\n x between _west and _east and\\n y between _south and _north and\\n \\n \\n [geom] contains [x, y, z, 28992]\\n),\\npolygons_ as (\\n select next value for \\\"counter\\\" as id, ogc_fid as fid, coalesce(type,\\\\'transitie\\\\') as type, class, geom\\n from plantcover\\n union all\\n select next value for \\\"counter\\\" as id, ogc_fid as fid, coalesce(type,\\\\'transitie\\\\') as type, class, geom\\n from bare\\n),\\npolygons_dump as (\\n select parent as id, polygonwkb as geom\\n from st_dump((select geom, id from polygons_)) d\\n),\\npolygons as (\\n select a.*\\n from polygons_ a\\n left join polygons_dump b\\n on a.id = b.id\\n),\\npolygonsz as (\\n \\n select id, fid, type, class, st_exteriorring(geom) as geom\\n from polygons a\\n left join pointcloud_ground b\\n \\n on [geom] intersects [x, y, z, 28992]\\n group by id, fid, type, class, geom\\n),\\nedge_points as (\\n select parent as polygon_id, cast(path as int) as path, st_setsrid(pointg, 28992) as geom from st_dumppoints((select geom, id from polygonsz)) d\\n),\\nemptyz as (\\n \\n \\n select polygon_id, a.path as path, a.geom as geom , b.z as z, st_distance(a.geom, x, y, z, 28992) as dist from edge_points a, pointcloud_ground b where [a.geom] dwithin [x, y, z, 28992, 10]\\n),\\nranktest as (\\n select polygon_id, path, geom, z, dist, rank() over (partition by polygon_id, path order by polygon_id, path, dist asc) as rank from emptyz\\n),\\nfilledz as (\\n select polygon_id, path, st_makepoint(st_x(geom), st_y(geom), z) as geom from ranktest where rank = 1\\n),\\nline_z as (\\n select polygon_id, st_makeline(geom) as geom from filledz group by polygon_id\\n),\\nbasepoints as (\\n \\n select polygon_id as id, st_triangulate2dz(st_collect(geom), 0) as geom from line_z\\n where\\n \\n [geom] isvalidd [st_makepoint(1.0, 1.0, 1.0)]\\n group by id\\n),\\ntriangles as (\\n \\n select parent as id, st_makepolygon(st_exteriorring( a.polygonwkb)) as geom from st_dump((select geom, id from basepoints)) a\\n),\\nassign_triags as (\\n select a.*, b.type, b.class\\n from triangles a\\n inner join polygons b\\n \\n on [st_setsrid(b.geom, 28992)] contains [st_setsrid(a.geom, 28992)]\\n , bounds c\\n where\\n \\n [st_centroid(b.geom)] intersects [c.geom]\\n and a.id = b.id\\n)\\nselect p.id as id, p.type as type, st_asx3d(st_collect(p.geom),4.0, 0) as geom from assign_triags p group by id, type;\":void := querylog.define(\"trace with\\nbounds as (\\n select st_segmentize(st_makeenvelope(_west, _south, _east, _north, 28992), _segmentlength) as geom\\n),\\nplantcover as (\\n select ogc_fid, \\\\'plantcover\\\\' as class, bgt_fysiekvoorkomen as type, st_intersection(wkt, geom) as geom \\n from bgt_begroeidterreindeel a, bounds b\\n where \\n eindregistratie is null and\\n \\n (not\\n ((a.col_ymax < _south) or\\n (a.col_ymin > _north) or\\n (a.col_xmax < _west) or\\n (a.col_xmin > _east))\\n ) and\\n [geom] intersects [wkt] and\\n \\n col_type = \\\\'ST_Polygon\\\\'\\n \\n),\\nbare as (\\n select ogc_fid, \\\\'bare\\\\' as class, bgt_fysiekvoorkomen as type, st_intersection(wkt, geom) as geom\\n from bgt_onbegroeidterreindeel a, bounds b\\n where\\n eindregistratie is null and\\n \\n (not\\n ((a.col_ymax < _south) or\\n (a.col_ymin > _north) or\\n (a.col_xmax < _west) or\\n (a.col_xmin > _east))\\n ) and\\n [geom] intersects [wkt] and\\n \\n \\n col_type = \\\\'ST_Polygon\\\\'\\n),\\npointcloud_ground as (\\n select x, y, z\\n from ahn3, bounds\\n \\n where\\n c = 2 and\\n x between _west and _east and\\n y between _south and _north and\\n \\n \\n [geom] contains [x, y, z, 28992]\\n),\\npolygons_ as (\\n select next value for \\\"counter\\\" as id, ogc_fid as fid, coalesce(type,\\\\'transitie\\\\') as type, class, geom\\n from plantcover\\n union all\\n select next value for \\\"counter\\\" as id, ogc_fid as fid, coalesce(type,\\\\'transitie\\\\') as type, class, geom\\n from bare\\n),\\npolygons_dump as (\\n select parent as id, polygonwkb as geom\\n from st_dump((select geom, id from polygons_)) d\\n),\\npolygons as (\\n select a.*\\n from polygons_ a\\n left join polygons_dump b\\n on a.id = b.id\\n),\\npolygonsz as (\\n \\n select id, fid, type, class, st_exteriorring(geom) as geom\\n from polygons a\\n left join pointcloud_ground b\\n \\n on [geom] intersects [x, y, z, 28992]\\n group by id, fid, type, class, geom\\n),\\nedge_points as (\\n select parent as polygon_id, cast(path as int) as path, st_setsrid(pointg, 28992) as geom from st_dumppoints((select geom, id from polygonsz)) d\\n),\\nemptyz as (\\n \\n \\n select polygon_id, a.path as path, a.geom as geom , b.z as z, st_distance(a.geom, x, y, z, 28992) as dist from edge_points a, pointcloud_ground b where [a.geom] dwithin [x, y, z, 28992, 10]\\n),\\nranktest as (\\n select polygon_id, path, geom, z, dist, rank() over (partition by polygon_id, path order by polygon_id, path, dist asc) as rank from emptyz\\n),\\nfilledz as (\\n select polygon_id, path, st_makepoint(st_x(geom), st_y(geom), z) as geom from ranktest where rank = 1\\n),\\nline_z as (\\n select polygon_id, st_makeline(geom) as geom from filledz group by polygon_id\\n),\\nbasepoints as (\\n \\n select polygon_id as id, st_triangulate2dz(st_collect(geom), 0) as geom from line_z\\n where\\n \\n [geom] isvalidd [st_makepoint(1.0, 1.0, 1.0)]\\n group by id\\n),\\ntriangles as (\\n \\n select parent as id, st_makepolygon(st_exteriorring( a.polygonwkb)) as geom from st_dump((select geom, id from basepoints)) a\\n),\\nassign_triags as (\\n select a.*, b.type, b.class\\n from triangles a\\n inner join polygons b\\n \\n on [st_setsrid(b.geom, 28992)] contains [st_setsrid(a.geom, 28992)]\\n , bounds c\\n where\\n \\n [st_centroid(b.geom)] intersects [c.geom]\\n and a.id = b.id\\n)\\nselect p.id as id, p.type as type, st_asx3d(st_collect(p.geom),4.0, 0) as geom from assign_triags p group by id, type;\":str,\"default_pipe\":str,783:int);"	]
[ 7,	"X_0=0:int := sql.mvc();"	]
[ 35,	"X_3=<tmp_1726>[0]:bat[:wkb] := bat.new(nil:wkb);"	]
[ 25,	"X_1=<tmp_2737>[0]:bat[:wkb] := bat.new(nil:wkb);"	]
[ 25,	"X_4=<tmp_3173>[0]:bat[:lng] := bat.new(nil:lng);"	]
[ 1802,	"barrier X_1193=false:bit := language.dataflow();"	]
[ 6,	"X_8=938160:int := sql.getVariable(X_0=0:int,\"_west\":str);"	]
[ 5,	"X_9=93816:dbl := calc.dbl(1:int,X_8=938160:int);"	]
[ 7,	"X_13=4638910:int := sql.getVariable(X_0=0:int,\"_south\":str);"	]
[ 2,	"X_14=463891:dbl := calc.dbl(1:int,X_13=4638910:int);"	]
[ 2,	"X_17=939160:int := sql.getVariable(X_0=0:int,\"_east\":str);"	]
[ 1,	"X_18=93916:dbl := calc.dbl(1:int,X_17=939160:int);"	]
[ 7,	"X_21=4639910:int := sql.getVariable(X_0=0:int,\"_north\":str);"	]
[ 8,	"X_22=463991:dbl := calc.dbl(1:int,X_21=4639910:int);"	]
[ 75,	"x=\"\"POLYGON ((93816 463891, 93816 463991, 93916 463991, 93916 463891, 93816 463891))\"\":wkb := geom.EnvelopeFromCoordinates(xmin=93816:dbl,ymin=463891:dbl,xmax=93916:dbl,ymax=463991:dbl,srid=28992:int);"	]
[ 395,	"function geom.MakeEnvelope(xmin:dbl,ymin:dbl,xmax:dbl,ymax:dbl,srid:int):wkb;"	]
[ 495,	"X_24=\"\"POLYGON ((93816 463891, 93816 463991, 93916 463991, 93916 463891, 93816 463891))\"\":wkb := geom.MakeEnvelope(X_9=93816:dbl,X_14=463891:dbl,X_18=93916:dbl,X_22=463991:dbl,A0=28992:int);"	]
[ 2185,	"barrier X_1196=false:bit := language.dataflow();"	]
[ 9,	"X_27=100:int := sql.getVariable(X_0=0:int,\"_segmentlength\":str);"	]
[ 260,	"X_690=<tmp_1164>[298931]:bat[:int] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"col_ymax\":str,0:int,7:int,8:int);"	]
[ 9,	"X_28=10:dbl := calc.dbl(1:int,X_27=100:int);"	]
[ 57,	"C_643=<tmp_1616>[298930]:bat[:oid] := sql.tid(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,0:int,8:int);"	]
[ 23,	"C_645=<tmp_1055>[298930]:bat[:oid] := sql.tid(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,1:int,8:int);"	]
[ 13,	"C_647=<tmp_4323>[298930]:bat[:oid] := sql.tid(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,2:int,8:int);"	]
[ 70,	"X_678=<tmp_1255>[298930]:bat[:int] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"col_ymax\":str,0:int,1:int,8:int);"	]
[ 9,	"C_649=<tmp_2176>[298930]:bat[:oid] := sql.tid(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,3:int,8:int);"	]
[ 8,	"C_651=<tmp_2740>[298930]:bat[:oid] := sql.tid(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,4:int,8:int);"	]
[ 47,	"X_676=<tmp_1615>[298930]:bat[:int] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"col_ymax\":str,0:int,0:int,8:int);"	]
[ 8,	"C_653=<tmp_1633>[298930]:bat[:oid] := sql.tid(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,5:int,8:int);"	]
[ 107,	"X_29=\"\"POLYGON ((93816 463891, 93816 463901, 93816 463911, 93816 463921, 93816 463931, 93816 463941, 93816 463951, 93816 463961, 93816 463971, 93816 463981, 93816 463991, 93826 463991, 93836 463991, 93846 463991, 93856 463991, 93866 463991, 93876 463991, 93886 463991, 93896 463991, 93906 463991, 93916 463991, 93916 463981, 93916 463971, 93916 463961, 93916 463951, 93916 463941, 93916 463931, 93916 463921, 93916 463911, 93916 463901, 93916 463891, 93906 463891, 93896 463891, 93886 463891, 93876 463891, 93866 463891, 93856 463891, 93846 463891, 93836 463891, 93826 463891, 93816 463891))\"\":wkb := geom.Segmentize(X_24=\"\"POLYGON ((93816 463891, 93816 463991, 93916 463991, 93916 463891, 93816 463891))\"\":wkb,X_28=10:dbl);"	]
[ 9,	"C_655=<tmp_1405>[298930]:bat[:oid] := sql.tid(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,6:int,8:int);"	]
[ 84,	"X_673=<tmp_2036>[298931]:bat[:str] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"col_type\":str,0:int,7:int,8:int);"	]
[ 8,	"C_657=<tmp_3300>[298931]:bat[:oid] := sql.tid(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,7:int,8:int);"	]
[ 70,	"X_672=<tmp_2266>[298930]:bat[:str] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"col_type\":str,0:int,6:int,8:int);"	]
[ 64,	"X_772=<tmp_2504>[298930]:bat[:str] := algebra.projection(C_655=<tmp_1405>[298930]:bat[:oid],X_672=<tmp_2266>[298930]:bat[:str]);"	]
[ 21,	"X_30=<tmp_2375>[1]:bat[:wkb] := sql.single(X_29=\"\"POLYGON ((93816 463891, 93816 463901, 93816 463911, 93816 463921, 93816 463931, 93816 463941, 93816 463951, 93816 463961, 93816 463971, 93816 463981, 93816 463991, 93826 463991, 93836 463991, 93846 463991, 93856 463991, 93866 463991, 93876 463991, 93886 463991, 93896 463991, 93906 463991, 93916 463991, 93916 463981, 93916 463971, 93916 463961, 93916 463951, 93916 463941, 93916 463931, 93916 463921, 93916 463911, 93916 463901, 93916 463891, 93906 463891, 93896 463891, 93886 463891, 93876 463891, 93866 463891, 93856 463891, 93846 463891, 93836 463891, 93826 463891, 93816 463891))\"\":wkb);"	]
[ 16,	"X_671=<tmp_1061>[298930]:bat[:str] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"col_type\":str,0:int,5:int,8:int);"	]
[ 10,	"X_771=<tmp_2041>[298930]:bat[:str] := algebra.projection(C_653=<tmp_1633>[298930]:bat[:oid],X_671=<tmp_1061>[298930]:bat[:str]);"	]
[ 4183,	"X_684=<tmp_507>[298930]:bat[:int] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"col_ymax\":str,0:int,4:int,8:int);"	]
[ 13,	"X_670=<tmp_433>[298930]:bat[:str] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"col_type\":str,0:int,4:int,8:int);"	]
[ 10,	"X_770=<tmp_4454>[298930]:bat[:str] := algebra.projection(C_651=<tmp_2740>[298930]:bat[:oid],X_670=<tmp_433>[298930]:bat[:str]);"	]
[ 4088,	"X_680=<tmp_4431>[298930]:bat[:int] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"col_ymax\":str,0:int,2:int,8:int);"	]
[ 11,	"X_669=<tmp_1522>[298930]:bat[:str] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"col_type\":str,0:int,3:int,8:int);"	]
[ 8,	"X_769=<tmp_5112>[298930]:bat[:str] := algebra.projection(C_649=<tmp_2176>[298930]:bat[:oid],X_669=<tmp_1522>[298930]:bat[:str]);"	]
[ 4076,	"X_773=<tmp_735>[298931]:bat[:str] := algebra.projection(C_657=<tmp_3300>[298931]:bat[:oid],X_673=<tmp_2036>[298931]:bat[:str]);"	]
[ 67,	"X_658=<tmp_2036>[298930]:bat[:timestamp] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"eindregistratie\":str,0:int,0:int,8:int);"	]
[ 46,	"X_758=<tmp_736>[298930]:bat[:timestamp] := algebra.projection(C_643=<tmp_1616>[298930]:bat[:oid],X_658=<tmp_2036>[298930]:bat[:timestamp]);"	]
[ 45,	"X_659=<tmp_2036>[298930]:bat[:timestamp] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"eindregistratie\":str,0:int,1:int,8:int);"	]
[ 38,	"X_759=<tmp_2507>[298930]:bat[:timestamp] := algebra.projection(C_645=<tmp_1055>[298930]:bat[:oid],X_659=<tmp_2036>[298930]:bat[:timestamp]);"	]
[ 39,	"X_660=<tmp_2036>[298930]:bat[:timestamp] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"eindregistratie\":str,0:int,2:int,8:int);"	]
[ 36,	"X_760=<tmp_1411>[298930]:bat[:timestamp] := algebra.projection(C_647=<tmp_4323>[298930]:bat[:oid],X_660=<tmp_2036>[298930]:bat[:timestamp]);"	]
[ 39,	"X_661=<tmp_2036>[298930]:bat[:timestamp] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"eindregistratie\":str,0:int,3:int,8:int);"	]
[ 43,	"X_761=<tmp_2405>[298930]:bat[:timestamp] := algebra.projection(C_649=<tmp_2176>[298930]:bat[:oid],X_661=<tmp_2036>[298930]:bat[:timestamp]);"	]
[ 39,	"X_662=<tmp_2036>[298930]:bat[:timestamp] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"eindregistratie\":str,0:int,4:int,8:int);"	]
[ 42,	"X_762=<tmp_563>[298930]:bat[:timestamp] := algebra.projection(C_651=<tmp_2740>[298930]:bat[:oid],X_662=<tmp_2036>[298930]:bat[:timestamp]);"	]
[ 40,	"X_663=<tmp_2036>[298930]:bat[:timestamp] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"eindregistratie\":str,0:int,5:int,8:int);"	]
[ 41,	"X_763=<tmp_1500>[298930]:bat[:timestamp] := algebra.projection(C_653=<tmp_1633>[298930]:bat[:oid],X_663=<tmp_2036>[298930]:bat[:timestamp]);"	]
[ 61,	"X_664=<tmp_2036>[298930]:bat[:timestamp] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"eindregistratie\":str,0:int,6:int,8:int);"	]
[ 37,	"X_764=<tmp_3527>[298930]:bat[:timestamp] := algebra.projection(C_655=<tmp_1405>[298930]:bat[:oid],X_664=<tmp_2036>[298930]:bat[:timestamp]);"	]
[ 42,	"X_665=<tmp_2036>[298931]:bat[:timestamp] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"eindregistratie\":str,0:int,7:int,8:int);"	]
[ 8197,	"X_688=<tmp_2040>[298930]:bat[:int] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"col_ymax\":str,0:int,6:int,8:int);"	]
[ 8282,	"X_686=<tmp_3754>[298930]:bat[:int] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"col_ymax\":str,0:int,5:int,8:int);"	]
[ 77,	"X_765=<tmp_4206>[298931]:bat[:timestamp] := algebra.projection(C_657=<tmp_3300>[298931]:bat[:oid],X_665=<tmp_2036>[298931]:bat[:timestamp]);"	]
[ 11,	"X_668=<tmp_4076>[298930]:bat[:str] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"col_type\":str,0:int,2:int,8:int);"	]
[ 11,	"X_667=<tmp_3416>[298930]:bat[:str] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"col_type\":str,0:int,1:int,8:int);"	]
[ 8,	"X_768=<tmp_15526>[298930]:bat[:str] := algebra.projection(C_647=<tmp_4323>[298930]:bat[:oid],X_668=<tmp_4076>[298930]:bat[:str]);"	]
[ 8,	"X_767=<tmp_3077>[298930]:bat[:str] := algebra.projection(C_645=<tmp_1055>[298930]:bat[:oid],X_667=<tmp_3416>[298930]:bat[:str]);"	]
[ 10,	"X_666=<tmp_2036>[298930]:bat[:str] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"col_type\":str,0:int,0:int,8:int);"	]
[ 8,	"X_766=<tmp_4230>[298930]:bat[:str] := algebra.projection(C_643=<tmp_1616>[298930]:bat[:oid],X_666=<tmp_2036>[298930]:bat[:str]);"	]
[ 7418,	"C_780=<tmp_2266>[298930]:bat[:oid] := algebra.subselect(X_772=<tmp_2504>[298930]:bat[:str],A2=\"ST_Polygon\":str,A2=\"ST_Polygon\":str,true:bit,false:bit,false:bit);"	]
[ 11729,	"C_777=<tmp_1522>[298930]:bat[:oid] := algebra.subselect(X_769=<tmp_5112>[298930]:bat[:str],A2=\"ST_Polygon\":str,A2=\"ST_Polygon\":str,true:bit,false:bit,false:bit);"	]
[ 12396,	"X_682=<tmp_1751>[298930]:bat[:int] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"col_ymax\":str,0:int,3:int,8:int);"	]
[ 10633,	"C_774=<tmp_2036>[298930]:bat[:oid] := algebra.subselect(X_766=<tmp_4230>[298930]:bat[:str],A2=\"ST_Polygon\":str,A2=\"ST_Polygon\":str,true:bit,false:bit,false:bit);"	]
[ 6734,	"C_776=<tmp_4076>[298930]:bat[:oid] := algebra.subselect(X_768=<tmp_15526>[298930]:bat[:str],A2=\"ST_Polygon\":str,A2=\"ST_Polygon\":str,true:bit,false:bit,false:bit);"	]
[ 6749,	"C_775=<tmp_3416>[298930]:bat[:oid] := algebra.subselect(X_767=<tmp_3077>[298930]:bat[:str],A2=\"ST_Polygon\":str,A2=\"ST_Polygon\":str,true:bit,false:bit,false:bit);"	]
[ 7099,	"C_779=<tmp_1061>[298930]:bat[:oid] := algebra.subselect(X_771=<tmp_2041>[298930]:bat[:str],A2=\"ST_Polygon\":str,A2=\"ST_Polygon\":str,true:bit,false:bit,false:bit);"	]
[ 6852,	"C_778=<tmp_433>[298930]:bat[:oid] := algebra.subselect(X_770=<tmp_4454>[298930]:bat[:str],A2=\"ST_Polygon\":str,A2=\"ST_Polygon\":str,true:bit,false:bit,false:bit);"	]
[ 5173,	"C_788=<tmp_2504>[273813]:bat[:oid] := algebra.subselect(X_764=<tmp_3527>[298930]:bat[:timestamp],C_780=<tmp_2266>[298930]:bat[:oid],nil:timestamp,nil:timestamp,true:bit,true:bit,false:bit);"	]
[ 6563,	"C_782=<tmp_4230>[296934]:bat[:oid] := algebra.subselect(X_758=<tmp_736>[298930]:bat[:timestamp],C_774=<tmp_2036>[298930]:bat[:oid],nil:timestamp,nil:timestamp,true:bit,true:bit,false:bit);"	]
[ 5854,	"C_786=<tmp_4454>[285782]:bat[:oid] := algebra.subselect(X_762=<tmp_563>[298930]:bat[:timestamp],C_778=<tmp_433>[298930]:bat[:oid],nil:timestamp,nil:timestamp,true:bit,true:bit,false:bit);"	]
[ 5875,	"C_787=<tmp_2041>[290388]:bat[:oid] := algebra.subselect(X_763=<tmp_1500>[298930]:bat[:timestamp],C_779=<tmp_1061>[298930]:bat[:oid],nil:timestamp,nil:timestamp,true:bit,true:bit,false:bit);"	]
[ 5962,	"C_783=<tmp_3077>[291610]:bat[:oid] := algebra.subselect(X_759=<tmp_2507>[298930]:bat[:timestamp],C_775=<tmp_3416>[298930]:bat[:oid],nil:timestamp,nil:timestamp,true:bit,true:bit,false:bit);"	]
[ 6933,	"C_784=<tmp_15526>[291155]:bat[:oid] := algebra.subselect(X_760=<tmp_1411>[298930]:bat[:timestamp],C_776=<tmp_4076>[298930]:bat[:oid],nil:timestamp,nil:timestamp,true:bit,true:bit,false:bit);"	]
[ 4721,	"X_804=<tmp_2266>[273813]:bat[:int] := algebra.projectionpath(C_788=<tmp_2504>[273813]:bat[:oid],C_655=<tmp_1405>[298930]:bat[:oid],X_688=<tmp_2040>[298930]:bat[:int]);"	]
[ 3578,	"X_803=<tmp_1061>[290388]:bat[:int] := algebra.projectionpath(C_787=<tmp_2041>[290388]:bat[:oid],C_653=<tmp_1633>[298930]:bat[:oid],X_686=<tmp_3754>[298930]:bat[:int]);"	]
[ 3695,	"X_802=<tmp_433>[285782]:bat[:int] := algebra.projectionpath(C_786=<tmp_4454>[285782]:bat[:oid],C_651=<tmp_2740>[298930]:bat[:oid],X_684=<tmp_507>[298930]:bat[:int]);"	]
[ 2898,	"X_799=<tmp_3416>[291610]:bat[:int] := algebra.projectionpath(C_783=<tmp_3077>[291610]:bat[:oid],C_645=<tmp_1055>[298930]:bat[:oid],X_678=<tmp_1255>[298930]:bat[:int]);"	]
[ 2708,	"X_800=<tmp_4076>[291155]:bat[:int] := algebra.projectionpath(C_784=<tmp_15526>[291155]:bat[:oid],C_647=<tmp_4323>[298930]:bat[:oid],X_680=<tmp_4431>[298930]:bat[:int]);"	]
[ 12879,	"C_785=<tmp_5112>[288697]:bat[:oid] := algebra.subselect(X_761=<tmp_2405>[298930]:bat[:timestamp],C_777=<tmp_1522>[298930]:bat[:oid],nil:timestamp,nil:timestamp,true:bit,true:bit,false:bit);"	]
[ 6229,	"X_798=<tmp_2036>[296934]:bat[:int] := algebra.projectionpath(C_782=<tmp_4230>[296934]:bat[:oid],C_643=<tmp_1616>[298930]:bat[:oid],X_676=<tmp_1615>[298930]:bat[:int]);"	]
[ 11482,	"C_781=<tmp_5330>[298931]:bat[:oid] := algebra.subselect(X_773=<tmp_735>[298931]:bat[:str],A2=\"ST_Polygon\":str,A2=\"ST_Polygon\":str,true:bit,false:bit,false:bit);"	]
[ 2602,	"X_801=<tmp_1522>[288697]:bat[:int] := algebra.projectionpath(C_785=<tmp_5112>[288697]:bat[:oid],C_649=<tmp_2176>[298930]:bat[:oid],X_682=<tmp_1751>[298930]:bat[:int]);"	]
[ 5485,	"C_789=<tmp_735>[291573]:bat[:oid] := algebra.subselect(X_765=<tmp_4206>[298931]:bat[:timestamp],C_781=<tmp_5330>[298931]:bat[:oid],nil:timestamp,nil:timestamp,true:bit,true:bit,false:bit);"	]
[ 2818,	"X_805=<tmp_5330>[291573]:bat[:int] := algebra.projectionpath(C_789=<tmp_735>[291573]:bat[:oid],C_657=<tmp_3300>[298931]:bat[:oid],X_690=<tmp_1164>[298931]:bat[:int]);"	]
[ 42913,	"barrier X_1199=false:bit := language.dataflow();"	]
[ 8,	"X_57=4638910:int := sql.getVariable(X_0=0:int,\"_south\":str);"	]
[ 102,	"X_698=<tmp_3754>[298931]:bat[:int] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"col_ymin\":str,0:int,7:int,8:int);"	]
[ 1545,	"X_807=<tmp_2040>[291610]:bat[:bit] := batcalc.<(X_799=<tmp_3416>[291610]:bat[:int],X_57=4638910:int);"	]
[ 2693,	"X_829=<tmp_1500>[291573]:bat[:int] := algebra.projectionpath(C_789=<tmp_735>[291573]:bat[:oid],C_657=<tmp_3300>[298931]:bat[:oid],X_698=<tmp_3754>[298931]:bat[:int]);"	]
[ 2158,	"X_806=<tmp_1615>[296934]:bat[:bit] := batcalc.<(X_798=<tmp_2036>[296934]:bat[:int],X_57=4638910:int);"	]
[ 68,	"X_692=<tmp_3754>[298930]:bat[:int] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"col_ymin\":str,0:int,1:int,8:int);"	]
[ 14,	"X_691=<tmp_2036>[298930]:bat[:int] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"col_ymin\":str,0:int,0:int,8:int);"	]
[ 4102,	"X_696=<tmp_4431>[298930]:bat[:int] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"col_ymin\":str,0:int,5:int,8:int);"	]
[ 4100,	"X_694=<tmp_507>[298930]:bat[:int] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"col_ymin\":str,0:int,3:int,8:int);"	]
[ 4108,	"X_695=<tmp_1255>[298930]:bat[:int] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"col_ymin\":str,0:int,4:int,8:int);"	]
[ 4141,	"X_693=<tmp_1164>[298930]:bat[:int] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"col_ymin\":str,0:int,2:int,8:int);"	]
[ 4153,	"X_697=<tmp_1751>[298930]:bat[:int] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"col_ymin\":str,0:int,6:int,8:int);"	]
[ 3049,	"X_808=<tmp_3416>[291155]:bat[:bit] := batcalc.<(X_800=<tmp_4076>[291155]:bat[:int],X_57=4638910:int);"	]
[ 3967,	"X_823=<tmp_432>[291610]:bat[:int] := algebra.projectionpath(C_783=<tmp_3077>[291610]:bat[:oid],C_645=<tmp_1055>[298930]:bat[:oid],X_692=<tmp_3754>[298930]:bat[:int]);"	]
[ 3832,	"X_825=<tmp_563>[288697]:bat[:int] := algebra.projectionpath(C_785=<tmp_5112>[288697]:bat[:oid],C_649=<tmp_2176>[298930]:bat[:oid],X_694=<tmp_507>[298930]:bat[:int]);"	]
[ 3840,	"X_827=<tmp_1411>[290388]:bat[:int] := algebra.projectionpath(C_787=<tmp_2041>[290388]:bat[:oid],C_653=<tmp_1633>[298930]:bat[:oid],X_696=<tmp_4431>[298930]:bat[:int]);"	]
[ 3802,	"X_826=<tmp_2507>[285782]:bat[:int] := algebra.projectionpath(C_786=<tmp_4454>[285782]:bat[:oid],C_651=<tmp_2740>[298930]:bat[:oid],X_695=<tmp_1255>[298930]:bat[:int]);"	]
[ 3675,	"X_828=<tmp_2405>[273813]:bat[:int] := algebra.projectionpath(C_788=<tmp_2504>[273813]:bat[:oid],C_655=<tmp_1405>[298930]:bat[:oid],X_697=<tmp_1751>[298930]:bat[:int]);"	]
[ 4335,	"X_824=<tmp_4206>[291155]:bat[:int] := algebra.projectionpath(C_784=<tmp_15526>[291155]:bat[:oid],C_647=<tmp_4323>[298930]:bat[:oid],X_693=<tmp_1164>[298930]:bat[:int]);"	]
[ 2015,	"X_809=<tmp_4076>[288697]:bat[:bit] := batcalc.<(X_801=<tmp_1522>[288697]:bat[:int],X_57=4638910:int);"	]
[ 5256,	"X_822=<tmp_736>[296934]:bat[:int] := algebra.projectionpath(C_782=<tmp_4230>[296934]:bat[:oid],C_643=<tmp_1616>[298930]:bat[:oid],X_691=<tmp_2036>[298930]:bat[:int]);"	]
[ 1969,	"X_812=<tmp_3754>[273813]:bat[:bit] := batcalc.<(X_804=<tmp_2266>[273813]:bat[:int],X_57=4638910:int);"	]
[ 2239,	"X_811=<tmp_507>[290388]:bat[:bit] := batcalc.<(X_803=<tmp_1061>[290388]:bat[:int],X_57=4638910:int);"	]
[ 2275,	"X_810=<tmp_4431>[285782]:bat[:bit] := batcalc.<(X_802=<tmp_433>[285782]:bat[:int],X_57=4638910:int);"	]
[ 1162,	"X_813=<tmp_433>[291573]:bat[:bit] := batcalc.<(X_805=<tmp_5330>[291573]:bat[:int],X_57=4638910:int);"	]
[ 13561,	"barrier X_1202=false:bit := language.dataflow();"	]
[ 10,	"X_67=4639910:int := sql.getVariable(X_0=0:int,\"_north\":str);"	]
[ 266,	"X_701=<tmp_2036>[298930]:bat[:int] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"col_xmax\":str,0:int,2:int,8:int);"	]
[ 1749,	"X_836=<tmp_2266>[273813]:bat[:bit] := batcalc.>(X_828=<tmp_2405>[273813]:bat[:int],X_67=4639910:int);"	]
[ 12,	"X_702=<tmp_2405>[298930]:bat[:int] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"col_xmax\":str,0:int,3:int,8:int);"	]
[ 2761,	"X_830=<tmp_1255>[296934]:bat[:bit] := batcalc.>(X_822=<tmp_736>[296934]:bat[:int],X_67=4639910:int);"	]
[ 2821,	"X_831=<tmp_1522>[291610]:bat[:bit] := batcalc.>(X_823=<tmp_432>[291610]:bat[:int],X_67=4639910:int);"	]
[ 4105,	"X_704=<tmp_1061>[298930]:bat[:int] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"col_xmax\":str,0:int,5:int,8:int);"	]
[ 4089,	"X_703=<tmp_5330>[298930]:bat[:int] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"col_xmax\":str,0:int,4:int,8:int);"	]
[ 4136,	"X_706=<tmp_1751>[298931]:bat[:int] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"col_xmax\":str,0:int,7:int,8:int);"	]
[ 4124,	"X_705=<tmp_1164>[298930]:bat[:int] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"col_xmax\":str,0:int,6:int,8:int);"	]
[ 16,	"X_700=<tmp_432>[298930]:bat[:int] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"col_xmax\":str,0:int,1:int,8:int);"	]
[ 4918,	"X_848=<tmp_646>[291155]:bat[:int] := algebra.projectionpath(C_784=<tmp_15526>[291155]:bat[:oid],C_647=<tmp_4323>[298930]:bat[:oid],X_701=<tmp_2036>[298930]:bat[:int]);"	]
[ 3304,	"X_849=<tmp_1163>[288697]:bat[:int] := algebra.projectionpath(C_785=<tmp_5112>[288697]:bat[:oid],C_649=<tmp_2176>[298930]:bat[:oid],X_702=<tmp_2405>[298930]:bat[:int]);"	]
[ 17,	"X_699=<tmp_2036>[298930]:bat[:int] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"col_xmax\":str,0:int,0:int,8:int);"	]
[ 2712,	"X_832=<tmp_736>[291155]:bat[:bit] := batcalc.>(X_824=<tmp_4206>[291155]:bat[:int],X_67=4639910:int);"	]
[ 3427,	"X_851=<tmp_1746>[290388]:bat[:int] := algebra.projectionpath(C_787=<tmp_2041>[290388]:bat[:oid],C_653=<tmp_1633>[298930]:bat[:oid],X_704=<tmp_1061>[298930]:bat[:int]);"	]
[ 3467,	"X_850=<tmp_1407>[285782]:bat[:int] := algebra.projectionpath(C_786=<tmp_4454>[285782]:bat[:oid],C_651=<tmp_2740>[298930]:bat[:oid],X_703=<tmp_5330>[298930]:bat[:int]);"	]
[ 1902,	"X_835=<tmp_2405>[290388]:bat[:bit] := batcalc.>(X_827=<tmp_1411>[290388]:bat[:int],X_67=4639910:int);"	]
[ 4826,	"X_852=<tmp_2043>[273813]:bat[:int] := algebra.projectionpath(C_788=<tmp_2504>[273813]:bat[:oid],C_655=<tmp_1405>[298930]:bat[:oid],X_705=<tmp_1164>[298930]:bat[:int]);"	]
[ 4954,	"X_853=<tmp_642>[291573]:bat[:int] := algebra.projectionpath(C_789=<tmp_735>[291573]:bat[:oid],C_657=<tmp_3300>[298931]:bat[:oid],X_706=<tmp_1751>[298931]:bat[:int]);"	]
[ 4974,	"X_847=<tmp_3527>[291610]:bat[:int] := algebra.projectionpath(C_783=<tmp_3077>[291610]:bat[:oid],C_645=<tmp_1055>[298930]:bat[:oid],X_700=<tmp_432>[298930]:bat[:int]);"	]
[ 1567,	"X_834=<tmp_1061>[285782]:bat[:bit] := batcalc.>(X_826=<tmp_2507>[285782]:bat[:int],X_67=4639910:int);"	]
[ 2326,	"X_833=<tmp_4206>[288697]:bat[:bit] := batcalc.>(X_825=<tmp_563>[288697]:bat[:int],X_67=4639910:int);"	]
[ 5547,	"X_846=<tmp_5557>[296934]:bat[:int] := algebra.projectionpath(C_782=<tmp_4230>[296934]:bat[:oid],C_643=<tmp_1616>[298930]:bat[:oid],X_699=<tmp_2036>[298930]:bat[:int]);"	]
[ 1826,	"X_837=<tmp_563>[291573]:bat[:bit] := batcalc.>(X_829=<tmp_1500>[291573]:bat[:int],X_67=4639910:int);"	]
[ 13506,	"barrier X_1205=false:bit := language.dataflow();"	]
[ 25,	"X_76=938160:int := sql.getVariable(X_0=0:int,\"_west\":str);"	]
[ 116,	"X_713=<tmp_2036>[298930]:bat[:int] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"col_xmin\":str,0:int,2:int,8:int);"	]
[ 1965,	"X_860=<tmp_1411>[273813]:bat[:bit] := batcalc.<(X_852=<tmp_2043>[273813]:bat[:int],X_76=938160:int);"	]
[ 13,	"X_715=<tmp_2043>[298930]:bat[:int] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"col_xmin\":str,0:int,3:int,8:int);"	]
[ 2779,	"X_854=<tmp_1500>[296934]:bat[:bit] := batcalc.<(X_846=<tmp_5557>[296934]:bat[:int],X_76=938160:int);"	]
[ 2860,	"X_855=<tmp_5330>[291610]:bat[:bit] := batcalc.<(X_847=<tmp_3527>[291610]:bat[:int],X_76=938160:int);"	]
[ 14,	"X_711=<tmp_5557>[298930]:bat[:int] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"col_xmin\":str,0:int,1:int,8:int);"	]
[ 4083,	"X_721=<tmp_2507>[298930]:bat[:int] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"col_xmin\":str,0:int,6:int,8:int);"	]
[ 4120,	"X_723=<tmp_1164>[298931]:bat[:int] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"col_xmin\":str,0:int,7:int,8:int);"	]
[ 4113,	"X_719=<tmp_1751>[298930]:bat[:int] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"col_xmin\":str,0:int,5:int,8:int);"	]
[ 4115,	"X_717=<tmp_432>[298930]:bat[:int] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"col_xmin\":str,0:int,4:int,8:int);"	]
[ 4878,	"X_872=<tmp_430>[291155]:bat[:int] := algebra.projectionpath(C_784=<tmp_15526>[291155]:bat[:oid],C_647=<tmp_4323>[298930]:bat[:oid],X_713=<tmp_2036>[298930]:bat[:int]);"	]
[ 3202,	"X_873=<tmp_1051>[288697]:bat[:int] := algebra.projectionpath(C_785=<tmp_5112>[288697]:bat[:oid],C_649=<tmp_2176>[298930]:bat[:oid],X_715=<tmp_2043>[298930]:bat[:int]);"	]
[ 20,	"X_709=<tmp_2036>[298930]:bat[:int] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"col_xmin\":str,0:int,0:int,8:int);"	]
[ 2250,	"X_856=<tmp_3527>[291155]:bat[:bit] := batcalc.<(X_848=<tmp_646>[291155]:bat[:int],X_76=938160:int);"	]
[ 3976,	"X_876=<tmp_2156>[273813]:bat[:int] := algebra.projectionpath(C_788=<tmp_2504>[273813]:bat[:oid],C_655=<tmp_1405>[298930]:bat[:oid],X_721=<tmp_2507>[298930]:bat[:int]);"	]
[ 2218,	"X_859=<tmp_2043>[290388]:bat[:bit] := batcalc.<(X_851=<tmp_1746>[290388]:bat[:int],X_76=938160:int);"	]
[ 4824,	"X_877=<tmp_2630>[291573]:bat[:int] := algebra.projectionpath(C_789=<tmp_735>[291573]:bat[:oid],C_657=<tmp_3300>[298931]:bat[:oid],X_723=<tmp_1164>[298931]:bat[:int]);"	]
[ 4805,	"X_874=<tmp_2736>[285782]:bat[:int] := algebra.projectionpath(C_786=<tmp_4454>[285782]:bat[:oid],C_651=<tmp_2740>[298930]:bat[:oid],X_717=<tmp_432>[298930]:bat[:int]);"	]
[ 4875,	"X_875=<tmp_651>[290388]:bat[:int] := algebra.projectionpath(C_787=<tmp_2041>[290388]:bat[:oid],C_653=<tmp_1633>[298930]:bat[:oid],X_719=<tmp_1751>[298930]:bat[:int]);"	]
[ 5370,	"X_871=<tmp_1165>[291610]:bat[:int] := algebra.projectionpath(C_783=<tmp_3077>[291610]:bat[:oid],C_645=<tmp_1055>[298930]:bat[:oid],X_711=<tmp_5557>[298930]:bat[:int]);"	]
[ 1568,	"X_858=<tmp_2507>[285782]:bat[:bit] := batcalc.<(X_850=<tmp_1407>[285782]:bat[:int],X_76=938160:int);"	]
[ 2284,	"X_857=<tmp_646>[288697]:bat[:bit] := batcalc.<(X_849=<tmp_1163>[288697]:bat[:int],X_76=938160:int);"	]
[ 4955,	"X_870=<tmp_1167>[296934]:bat[:int] := algebra.projectionpath(C_782=<tmp_4230>[296934]:bat[:oid],C_643=<tmp_1616>[298930]:bat[:oid],X_709=<tmp_2036>[298930]:bat[:int]);"	]
[ 1453,	"X_861=<tmp_1163>[291573]:bat[:bit] := batcalc.<(X_853=<tmp_642>[291573]:bat[:int],X_76=938160:int);"	]
[ 13403,	"barrier X_1208=false:bit := language.dataflow();"	]
[ 17,	"X_84=939160:int := sql.getVariable(X_0=0:int,\"_east\":str);"	]
[ 83,	"X_733=<tmp_2036>[298930]:bat[:int] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"ogc_fid\":str,0:int,1:int,8:int);"	]
[ 112,	"X_724=<tmp_5557>[298930]:bat[:wkb] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"wkt\":str,0:int,0:int,8:int);"	]
[ 206,	"X_138=<tmp_11034>[1583115]:bat[:int] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_onbegroeidterreindeel\":str,\"col_ymax\":str,0:int);"	]
[ 184,	"X_130=<tmp_3422>[1583115]:bat[:str] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_onbegroeidterreindeel\":str,\"col_type\":str,0:int);"	]
[ 102,	"X_124=<tmp_20644>[1583115]:bat[:timestamp] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_onbegroeidterreindeel\":str,\"eindregistratie\":str,0:int);"	]
[ 9,	"C_122=<tmp_564>[1583115]:bat[:oid] := sql.tid(X_0=0:int,\"sys\":str,\"bgt_onbegroeidterreindeel\":str);"	]
[ 13,	"X_739=<tmp_3053>[298931]:bat[:int] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"ogc_fid\":str,0:int,7:int,8:int);"	]
[ 10,	"X_125=<tmp_723>[1583115]:bat[:timestamp] := algebra.projection(C_122=<tmp_564>[1583115]:bat[:oid],X_124=<tmp_20644>[1583115]:bat[:timestamp]);"	]
[ 9,	"X_738=<tmp_4000>[298930]:bat[:int] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"ogc_fid\":str,0:int,6:int,8:int);"	]
[ 15,	"X_131=<tmp_2272>[1583115]:bat[:str] := algebra.projection(C_122=<tmp_564>[1583115]:bat[:oid],X_130=<tmp_3422>[1583115]:bat[:str]);"	]
[ 8,	"X_737=<tmp_3552>[298930]:bat[:int] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"ogc_fid\":str,0:int,5:int,8:int);"	]
[ 8,	"X_736=<tmp_472>[298930]:bat[:int] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"ogc_fid\":str,0:int,4:int,8:int);"	]
[ 8,	"X_735=<tmp_567>[298930]:bat[:int] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"ogc_fid\":str,0:int,3:int,8:int);"	]
[ 8,	"X_732=<tmp_425>[298930]:bat[:int] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"ogc_fid\":str,0:int,0:int,8:int);"	]
[ 169,	"X_731=<tmp_565>[298931]:bat[:wkb] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"wkt\":str,0:int,7:int,8:int);"	]
[ 2280,	"X_884=<tmp_1164>[273813]:bat[:bit] := batcalc.>(X_876=<tmp_2156>[273813]:bat[:int],X_84=939160:int);"	]
[ 2336,	"X_878=<tmp_642>[296934]:bat[:bit] := batcalc.>(X_870=<tmp_1167>[296934]:bat[:int],X_84=939160:int);"	]
[ 73,	"X_728=<tmp_1273>[298930]:bat[:wkb] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"wkt\":str,0:int,4:int,8:int);"	]
[ 78,	"X_727=<tmp_4551>[298930]:bat[:wkb] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"wkt\":str,0:int,3:int,8:int);"	]
[ 79,	"X_726=<tmp_4775>[298930]:bat[:wkb] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"wkt\":str,0:int,2:int,8:int);"	]
[ 3266,	"X_879=<tmp_1746>[291610]:bat[:bit] := batcalc.>(X_871=<tmp_1165>[291610]:bat[:int],X_84=939160:int);"	]
[ 77,	"X_725=<tmp_5216>[298930]:bat[:wkb] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"wkt\":str,0:int,1:int,8:int);"	]
[ 4131,	"X_734=<tmp_1407>[298930]:bat[:int] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"ogc_fid\":str,0:int,2:int,8:int);"	]
[ 4383,	"X_730=<tmp_1751>[298930]:bat[:wkb] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"wkt\":str,0:int,6:int,8:int);"	]
[ 1712,	"X_892=<tmp_2156>[273813]:bat[:bit] := batcalc.or(X_860=<tmp_1411>[273813]:bat[:bit],X_884=<tmp_1164>[273813]:bat[:bit]);"	]
[ 2226,	"X_886=<tmp_1167>[296934]:bat[:bit] := batcalc.or(X_854=<tmp_1500>[296934]:bat[:bit],X_878=<tmp_642>[296934]:bat[:bit]);"	]
[ 2185,	"X_883=<tmp_5442>[290388]:bat[:bit] := batcalc.>(X_875=<tmp_651>[290388]:bat[:int],X_84=939160:int);"	]
[ 2257,	"X_882=<tmp_2401>[285782]:bat[:bit] := batcalc.>(X_874=<tmp_2736>[285782]:bat[:int],X_84=939160:int);"	]
[ 2735,	"X_881=<tmp_5765>[288697]:bat[:bit] := batcalc.>(X_873=<tmp_1051>[288697]:bat[:int],X_84=939160:int);"	]
[ 3264,	"X_887=<tmp_1165>[291610]:bat[:bit] := batcalc.or(X_855=<tmp_5330>[291610]:bat[:bit],X_879=<tmp_1746>[291610]:bat[:bit]);"	]
[ 2508,	"X_900=<tmp_1164>[273813]:bat[:bit] := batcalc.or(X_836=<tmp_2266>[273813]:bat[:bit],X_892=<tmp_2156>[273813]:bat[:bit]);"	]
[ 8211,	"X_729=<tmp_432>[298930]:bat[:wkb] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"wkt\":str,0:int,5:int,8:int);"	]
[ 2680,	"X_894=<tmp_642>[296934]:bat[:bit] := batcalc.or(X_830=<tmp_1255>[296934]:bat[:bit],X_886=<tmp_1167>[296934]:bat[:bit]);"	]
[ 2898,	"X_891=<tmp_651>[290388]:bat[:bit] := batcalc.or(X_859=<tmp_2043>[290388]:bat[:bit],X_883=<tmp_5442>[290388]:bat[:bit]);"	]
[ 2459,	"X_890=<tmp_2736>[285782]:bat[:bit] := batcalc.or(X_858=<tmp_2507>[285782]:bat[:bit],X_882=<tmp_2401>[285782]:bat[:bit]);"	]
[ 2525,	"X_889=<tmp_1051>[288697]:bat[:bit] := batcalc.or(X_857=<tmp_646>[288697]:bat[:bit],X_881=<tmp_5765>[288697]:bat[:bit]);"	]
[ 2017,	"X_908=<tmp_2156>[273813]:bat[:bit] := batcalc.or(X_812=<tmp_3754>[273813]:bat[:bit],X_900=<tmp_1164>[273813]:bat[:bit]);"	]
[ 1596,	"X_902=<tmp_1167>[296934]:bat[:bit] := batcalc.or(X_806=<tmp_1615>[296934]:bat[:bit],X_894=<tmp_642>[296934]:bat[:bit]);"	]
[ 1887,	"X_880=<tmp_3170>[291155]:bat[:bit] := batcalc.>(X_872=<tmp_430>[291155]:bat[:int],X_84=939160:int);"	]
[ 3582,	"X_895=<tmp_1746>[291610]:bat[:bit] := batcalc.or(X_831=<tmp_1522>[291610]:bat[:bit],X_887=<tmp_1165>[291610]:bat[:bit]);"	]
[ 1536,	"X_899=<tmp_5442>[290388]:bat[:bit] := batcalc.or(X_835=<tmp_2405>[290388]:bat[:bit],X_891=<tmp_651>[290388]:bat[:bit]);"	]
[ 1767,	"X_898=<tmp_2401>[285782]:bat[:bit] := batcalc.or(X_834=<tmp_1061>[285782]:bat[:bit],X_890=<tmp_2736>[285782]:bat[:bit]);"	]
[ 1818,	"X_897=<tmp_5765>[288697]:bat[:bit] := batcalc.or(X_833=<tmp_4206>[288697]:bat[:bit],X_889=<tmp_1051>[288697]:bat[:bit]);"	]
[ 1620,	"X_885=<tmp_430>[291573]:bat[:bit] := batcalc.>(X_877=<tmp_2630>[291573]:bat[:int],X_84=939160:int);"	]
[ 1211,	"X_907=<tmp_651>[290388]:bat[:bit] := batcalc.or(X_811=<tmp_507>[290388]:bat[:bit],X_899=<tmp_5442>[290388]:bat[:bit]);"	]
[ 2747,	"C_916=<tmp_1164>[0]:bat[:oid] := algebra.subselect(X_908=<tmp_2156>[273813]:bat[:bit],false:bit,false:bit,true:bit,false:bit,false:bit);"	]
[ 1258,	"X_906=<tmp_2736>[285782]:bat[:bit] := batcalc.or(X_810=<tmp_4431>[285782]:bat[:bit],X_898=<tmp_2401>[285782]:bat[:bit]);"	]
[ 167,	"X_940=<tmp_2156>[0]:bat[:wkb] := algebra.projectionpath(C_916=<tmp_1164>[0]:bat[:oid],C_788=<tmp_2504>[273813]:bat[:oid],C_655=<tmp_1405>[298930]:bat[:oid],X_730=<tmp_1751>[298930]:bat[:wkb]);"	]
[ 14,	"(X_954=<tmp_1751>[0]:bat[:oid],X_955=<tmp_3754>[0]:bat[:oid]) := geom.Intersectssubjoin(X_30=<tmp_2375>[1]:bat[:wkb],X_940=<tmp_2156>[0]:bat[:wkb],nil:BAT,nil:BAT,true:bit,nil:lng);"	]
[ 2933,	"C_910=<tmp_642>[0]:bat[:oid] := algebra.subselect(X_902=<tmp_1167>[296934]:bat[:bit],false:bit,false:bit,true:bit,false:bit,false:bit);"	]
[ 99,	"X_988=<tmp_2266>[0]:bat[:int] := algebra.projectionpath(X_955=<tmp_3754>[0]:bat[:oid],C_916=<tmp_1164>[0]:bat[:oid],C_788=<tmp_2504>[273813]:bat[:oid],C_655=<tmp_1405>[298930]:bat[:oid],X_738=<tmp_4000>[298930]:bat[:int]);"	]
[ 11,	"X_996=<tmp_4000>[0]:bat[:str] := algebra.project(X_988=<tmp_2266>[0]:bat[:int],\"sys\":str);"	]
[ 11,	"X_1004=<tmp_1411>[0]:bat[:lng] := batsql.next_value(X_996=<tmp_4000>[0]:bat[:str],\"counter\":str);"	]
[ 2518,	"X_903=<tmp_1165>[291610]:bat[:bit] := batcalc.or(X_807=<tmp_2040>[291610]:bat[:bit],X_895=<tmp_1746>[291610]:bat[:bit]);"	]
[ 128,	"X_934=<tmp_1167>[0]:bat[:wkb] := algebra.projectionpath(C_910=<tmp_642>[0]:bat[:oid],C_782=<tmp_4230>[296934]:bat[:oid],C_643=<tmp_1616>[298930]:bat[:oid],X_724=<tmp_5557>[298930]:bat[:wkb]);"	]
[ 12,	"(X_942=<tmp_5557>[0]:bat[:oid],X_943=<tmp_1615>[0]:bat[:oid]) := geom.Intersectssubjoin(X_30=<tmp_2375>[1]:bat[:wkb],X_934=<tmp_1167>[0]:bat[:wkb],nil:BAT,nil:BAT,true:bit,nil:lng);"	]
[ 92,	"X_982=<tmp_1255>[0]:bat[:int] := algebra.projectionpath(X_943=<tmp_1615>[0]:bat[:oid],C_910=<tmp_642>[0]:bat[:oid],C_782=<tmp_4230>[296934]:bat[:oid],C_643=<tmp_1616>[298930]:bat[:oid],X_732=<tmp_425>[298930]:bat[:int]);"	]
[ 1899,	"X_905=<tmp_1051>[288697]:bat[:bit] := batcalc.or(X_809=<tmp_4076>[288697]:bat[:bit],X_897=<tmp_5765>[288697]:bat[:bit]);"	]
[ 12,	"X_990=<tmp_425>[0]:bat[:str] := algebra.project(X_982=<tmp_1255>[0]:bat[:int],\"sys\":str);"	]
[ 9,	"X_998=<tmp_1500>[0]:bat[:lng] := batsql.next_value(X_990=<tmp_425>[0]:bat[:str],\"counter\":str);"	]
[ 1461,	"X_893=<tmp_2630>[291573]:bat[:bit] := batcalc.or(X_861=<tmp_1163>[291573]:bat[:bit],X_885=<tmp_430>[291573]:bat[:bit]);"	]
[ 12,	"X_1134=<tmp_425>[0]:bat[:lng] := mat.packIncrement(X_998=<tmp_1500>[0]:bat[:lng],8:int);"	]
[ 1415,	"X_888=<tmp_4000>[291155]:bat[:bit] := batcalc.or(X_856=<tmp_3527>[291155]:bat[:bit],X_880=<tmp_3170>[291155]:bat[:bit]);"	]
[ 2728,	"C_915=<tmp_5442>[0]:bat[:oid] := algebra.subselect(X_907=<tmp_651>[290388]:bat[:bit],false:bit,false:bit,true:bit,false:bit,false:bit);"	]
[ 2686,	"C_914=<tmp_2401>[0]:bat[:oid] := algebra.subselect(X_906=<tmp_2736>[285782]:bat[:bit],false:bit,false:bit,true:bit,false:bit,false:bit);"	]
[ 80,	"X_939=<tmp_651>[0]:bat[:wkb] := algebra.projectionpath(C_915=<tmp_5442>[0]:bat[:oid],C_787=<tmp_2041>[290388]:bat[:oid],C_653=<tmp_1633>[298930]:bat[:oid],X_729=<tmp_432>[298930]:bat[:wkb]);"	]
[ 1361,	"X_901=<tmp_430>[291573]:bat[:bit] := batcalc.or(X_837=<tmp_563>[291573]:bat[:bit],X_893=<tmp_2630>[291573]:bat[:bit]);"	]
[ 105,	"X_938=<tmp_2736>[0]:bat[:wkb] := algebra.projectionpath(C_914=<tmp_2401>[0]:bat[:oid],C_786=<tmp_4454>[285782]:bat[:oid],C_651=<tmp_2740>[298930]:bat[:oid],X_728=<tmp_1273>[298930]:bat[:wkb]);"	]
[ 17,	"(X_950=<tmp_1273>[0]:bat[:oid],X_951=<tmp_4431>[0]:bat[:oid]) := geom.Intersectssubjoin(X_30=<tmp_2375>[1]:bat[:wkb],X_938=<tmp_2736>[0]:bat[:wkb],nil:BAT,nil:BAT,true:bit,nil:lng);"	]
[ 85,	"X_986=<tmp_1061>[0]:bat[:int] := algebra.projectionpath(X_951=<tmp_4431>[0]:bat[:oid],C_914=<tmp_2401>[0]:bat[:oid],C_786=<tmp_4454>[285782]:bat[:oid],C_651=<tmp_2740>[298930]:bat[:oid],X_736=<tmp_472>[298930]:bat[:int]);"	]
[ 11,	"X_994=<tmp_472>[0]:bat[:str] := algebra.project(X_986=<tmp_1061>[0]:bat[:int],\"sys\":str);"	]
[ 9,	"X_1002=<tmp_2507>[0]:bat[:lng] := batsql.next_value(X_994=<tmp_472>[0]:bat[:str],\"counter\":str);"	]
[ 1392,	"X_896=<tmp_3170>[291155]:bat[:bit] := batcalc.or(X_832=<tmp_736>[291155]:bat[:bit],X_888=<tmp_4000>[291155]:bat[:bit]);"	]
[ 2868,	"C_913=<tmp_5765>[0]:bat[:oid] := algebra.subselect(X_905=<tmp_1051>[288697]:bat[:bit],false:bit,false:bit,true:bit,false:bit,false:bit);"	]
[ 123,	"X_937=<tmp_1051>[0]:bat[:wkb] := algebra.projectionpath(C_913=<tmp_5765>[0]:bat[:oid],C_785=<tmp_5112>[288697]:bat[:oid],C_649=<tmp_2176>[298930]:bat[:oid],X_727=<tmp_4551>[298930]:bat[:wkb]);"	]
[ 14,	"(X_948=<tmp_4551>[0]:bat[:oid],X_949=<tmp_4076>[0]:bat[:oid]) := geom.Intersectssubjoin(X_30=<tmp_2375>[1]:bat[:wkb],X_937=<tmp_1051>[0]:bat[:wkb],nil:BAT,nil:BAT,true:bit,nil:lng);"	]
[ 1336,	"X_909=<tmp_2630>[291573]:bat[:bit] := batcalc.or(X_813=<tmp_433>[291573]:bat[:bit],X_901=<tmp_430>[291573]:bat[:bit]);"	]
[ 54,	"X_985=<tmp_4206>[0]:bat[:int] := algebra.projectionpath(X_949=<tmp_4076>[0]:bat[:oid],C_913=<tmp_5765>[0]:bat[:oid],C_785=<tmp_5112>[288697]:bat[:oid],C_649=<tmp_2176>[298930]:bat[:oid],X_735=<tmp_567>[298930]:bat[:int]);"	]
[ 16,	"X_993=<tmp_567>[0]:bat[:str] := algebra.project(X_985=<tmp_4206>[0]:bat[:int],\"sys\":str);"	]
[ 21,	"X_1001=<tmp_646>[0]:bat[:lng] := batsql.next_value(X_993=<tmp_567>[0]:bat[:str],\"counter\":str);"	]
[ 1303,	"X_904=<tmp_4000>[291155]:bat[:bit] := batcalc.or(X_808=<tmp_3416>[291155]:bat[:bit],X_896=<tmp_3170>[291155]:bat[:bit]);"	]
[ 5146,	"C_911=<tmp_1746>[0]:bat[:oid] := algebra.subselect(X_903=<tmp_1165>[291610]:bat[:bit],false:bit,false:bit,true:bit,false:bit,false:bit);"	]
[ 94,	"X_935=<tmp_1165>[0]:bat[:wkb] := algebra.projectionpath(C_911=<tmp_1746>[0]:bat[:oid],C_783=<tmp_3077>[291610]:bat[:oid],C_645=<tmp_1055>[298930]:bat[:oid],X_725=<tmp_5216>[298930]:bat[:wkb]);"	]
[ 16,	"(X_944=<tmp_5216>[0]:bat[:oid],X_945=<tmp_2040>[0]:bat[:oid]) := geom.Intersectssubjoin(X_30=<tmp_2375>[1]:bat[:wkb],X_935=<tmp_1165>[0]:bat[:wkb],nil:BAT,nil:BAT,true:bit,nil:lng);"	]
[ 59,	"X_983=<tmp_1522>[0]:bat[:int] := algebra.projectionpath(X_945=<tmp_2040>[0]:bat[:oid],C_911=<tmp_1746>[0]:bat[:oid],C_783=<tmp_3077>[291610]:bat[:oid],C_645=<tmp_1055>[298930]:bat[:oid],X_733=<tmp_2036>[298930]:bat[:int]);"	]
[ 19,	"X_991=<tmp_2036>[0]:bat[:str] := algebra.project(X_983=<tmp_1522>[0]:bat[:int],\"sys\":str);"	]
[ 12,	"(X_952=<tmp_432>[0]:bat[:oid],X_953=<tmp_507>[0]:bat[:oid]) := geom.Intersectssubjoin(X_30=<tmp_2375>[1]:bat[:wkb],X_939=<tmp_651>[0]:bat[:wkb],nil:BAT,nil:BAT,true:bit,nil:lng);"	]
[ 10,	"X_999=<tmp_5330>[0]:bat[:lng] := batsql.next_value(X_991=<tmp_2036>[0]:bat[:str],\"counter\":str);"	]
[ 45,	"X_987=<tmp_2405>[0]:bat[:int] := algebra.projectionpath(X_953=<tmp_507>[0]:bat[:oid],C_915=<tmp_5442>[0]:bat[:oid],C_787=<tmp_2041>[290388]:bat[:oid],C_653=<tmp_1633>[298930]:bat[:oid],X_737=<tmp_3552>[298930]:bat[:int]);"	]
[ 6,	"X_1136=<tmp_425>[0]:bat[:lng] := mat.packIncrement(X_1134=<tmp_425>[0]:bat[:lng],X_999=<tmp_5330>[0]:bat[:lng]);"	]
[ 48,	"X_995=<tmp_3552>[0]:bat[:str] := algebra.project(X_987=<tmp_2405>[0]:bat[:int],\"sys\":str);"	]
[ 8,	"X_1003=<tmp_2043>[0]:bat[:lng] := batsql.next_value(X_995=<tmp_3552>[0]:bat[:str],\"counter\":str);"	]
[ 2729,	"C_917=<tmp_430>[0]:bat[:oid] := algebra.subselect(X_909=<tmp_2630>[291573]:bat[:bit],false:bit,false:bit,true:bit,false:bit,false:bit);"	]
[ 73,	"X_941=<tmp_2630>[0]:bat[:wkb] := algebra.projectionpath(C_917=<tmp_430>[0]:bat[:oid],C_789=<tmp_735>[291573]:bat[:oid],C_657=<tmp_3300>[298931]:bat[:oid],X_731=<tmp_565>[298931]:bat[:wkb]);"	]
[ 14,	"(X_956=<tmp_565>[0]:bat[:oid],X_957=<tmp_433>[0]:bat[:oid]) := geom.Intersectssubjoin(X_30=<tmp_2375>[1]:bat[:wkb],X_941=<tmp_2630>[0]:bat[:wkb],nil:BAT,nil:BAT,true:bit,nil:lng);"	]
[ 44,	"X_989=<tmp_563>[0]:bat[:int] := algebra.projectionpath(X_957=<tmp_433>[0]:bat[:oid],C_917=<tmp_430>[0]:bat[:oid],C_789=<tmp_735>[291573]:bat[:oid],C_657=<tmp_3300>[298931]:bat[:oid],X_739=<tmp_3053>[298931]:bat[:int]);"	]
[ 15,	"X_997=<tmp_3053>[0]:bat[:str] := algebra.project(X_989=<tmp_563>[0]:bat[:int],\"sys\":str);"	]
[ 2699,	"C_912=<tmp_3170>[0]:bat[:oid] := algebra.subselect(X_904=<tmp_4000>[291155]:bat[:bit],false:bit,false:bit,true:bit,false:bit,false:bit);"	]
[ 8,	"X_1005=<tmp_1163>[0]:bat[:lng] := batsql.next_value(X_997=<tmp_3053>[0]:bat[:str],\"counter\":str);"	]
[ 65,	"X_936=<tmp_4000>[0]:bat[:wkb] := algebra.projectionpath(C_912=<tmp_3170>[0]:bat[:oid],C_784=<tmp_15526>[291155]:bat[:oid],C_647=<tmp_4323>[298930]:bat[:oid],X_726=<tmp_4775>[298930]:bat[:wkb]);"	]
[ 12,	"(X_946=<tmp_4775>[0]:bat[:oid],X_947=<tmp_3416>[0]:bat[:oid]) := geom.Intersectssubjoin(X_30=<tmp_2375>[1]:bat[:wkb],X_936=<tmp_4000>[0]:bat[:wkb],nil:BAT,nil:BAT,true:bit,nil:lng);"	]
[ 40,	"X_984=<tmp_736>[0]:bat[:int] := algebra.projectionpath(X_947=<tmp_3416>[0]:bat[:oid],C_912=<tmp_3170>[0]:bat[:oid],C_784=<tmp_15526>[291155]:bat[:oid],C_647=<tmp_4323>[298930]:bat[:oid],X_734=<tmp_1407>[298930]:bat[:int]);"	]
[ 13,	"X_992=<tmp_1407>[0]:bat[:str] := algebra.project(X_984=<tmp_736>[0]:bat[:int],\"sys\":str);"	]
[ 8,	"X_1000=<tmp_3527>[0]:bat[:lng] := batsql.next_value(X_992=<tmp_1407>[0]:bat[:str],\"counter\":str);"	]
[ 5,	"X_1137=<tmp_425>[0]:bat[:lng] := mat.packIncrement(X_1136=<tmp_425>[0]:bat[:lng],X_1000=<tmp_3527>[0]:bat[:lng]);"	]
[ 4,	"X_1138=<tmp_425>[0]:bat[:lng] := mat.packIncrement(X_1137=<tmp_425>[0]:bat[:lng],X_1001=<tmp_646>[0]:bat[:lng]);"	]
[ 4,	"X_1139=<tmp_425>[0]:bat[:lng] := mat.packIncrement(X_1138=<tmp_425>[0]:bat[:lng],X_1002=<tmp_2507>[0]:bat[:lng]);"	]
[ 4,	"X_1140=<tmp_425>[0]:bat[:lng] := mat.packIncrement(X_1139=<tmp_425>[0]:bat[:lng],X_1003=<tmp_2043>[0]:bat[:lng]);"	]
[ 4,	"X_1141=<tmp_425>[0]:bat[:lng] := mat.packIncrement(X_1140=<tmp_425>[0]:bat[:lng],X_1004=<tmp_1411>[0]:bat[:lng]);"	]
[ 6,	"X_117=<tmp_425>[0]:bat[:lng] := mat.packIncrement(X_1141=<tmp_425>[0]:bat[:lng],X_1005=<tmp_1163>[0]:bat[:lng]);"	]
[ 5,	"X_120=<tmp_3173>[0]:bat[:lng] := bat.append(X_4=<tmp_3173>[0]:bat[:lng],X_117=<tmp_425>[0]:bat[:lng],true:bit);"	]
[ 43362,	"C_133=<tmp_2510>[1583115]:bat[:oid] := algebra.subselect(X_131=<tmp_2272>[1583115]:bat[:str],A4=\"ST_Polygon\":str,A4=\"ST_Polygon\":str,true:bit,false:bit,false:bit);"	]
[ 18660,	"C_137=<tmp_2272>[1527982]:bat[:oid] := algebra.subselect(X_125=<tmp_723>[1583115]:bat[:timestamp],C_133=<tmp_2510>[1583115]:bat[:oid],nil:timestamp,nil:timestamp,true:bit,true:bit,false:bit);"	]
[ 11232,	"X_140=<tmp_2510>[1527982]:bat[:int] := algebra.projectionpath(C_137=<tmp_2272>[1527982]:bat[:oid],C_122=<tmp_564>[1583115]:bat[:oid],X_138=<tmp_11034>[1583115]:bat[:int]);"	]
[ 75594,	"barrier X_1211=false:bit := language.dataflow();"	]
[ 11,	"X_143=4638910:int := sql.getVariable(X_0=0:int,\"_south\":str);"	]
[ 55,	"X_147=<tmp_10404>[1583115]:bat[:int] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_onbegroeidterreindeel\":str,\"col_ymin\":str,0:int);"	]
[ 5706,	"X_144=<tmp_567>[1527982]:bat[:bit] := batcalc.<(X_140=<tmp_2510>[1527982]:bat[:int],X_143=4638910:int);"	]
[ 12292,	"X_149=<tmp_472>[1527982]:bat[:int] := algebra.projectionpath(C_137=<tmp_2272>[1527982]:bat[:oid],C_122=<tmp_564>[1583115]:bat[:oid],X_147=<tmp_10404>[1583115]:bat[:int]);"	]
[ 12704,	"barrier X_1214=false:bit := language.dataflow();"	]
[ 6,	"X_152=4639910:int := sql.getVariable(X_0=0:int,\"_north\":str);"	]
[ 68,	"X_155=<tmp_7756>[1583115]:bat[:int] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_onbegroeidterreindeel\":str,\"col_xmax\":str,0:int);"	]
[ 5915,	"X_153=<tmp_425>[1527982]:bat[:bit] := batcalc.>(X_149=<tmp_472>[1527982]:bat[:int],X_152=4639910:int);"	]
[ 13484,	"X_157=<tmp_3053>[1527982]:bat[:int] := algebra.projectionpath(C_137=<tmp_2272>[1527982]:bat[:oid],C_122=<tmp_564>[1583115]:bat[:oid],X_155=<tmp_7756>[1583115]:bat[:int]);"	]
[ 13903,	"barrier X_1217=false:bit := language.dataflow();"	]
[ 12,	"X_160=938160:int := sql.getVariable(X_0=0:int,\"_west\":str);"	]
[ 83,	"X_162=<tmp_7326>[1583115]:bat[:int] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_onbegroeidterreindeel\":str,\"col_xmin\":str,0:int);"	]
[ 5866,	"X_161=<tmp_1500>[1527982]:bat[:bit] := batcalc.<(X_157=<tmp_3053>[1527982]:bat[:int],X_160=938160:int);"	]
[ 12956,	"X_164=<tmp_2510>[1527982]:bat[:int] := algebra.projectionpath(C_137=<tmp_2272>[1527982]:bat[:oid],C_122=<tmp_564>[1583115]:bat[:oid],X_162=<tmp_7326>[1583115]:bat[:int]);"	]
[ 13511,	"barrier X_1220=false:bit := language.dataflow();"	]
[ 14,	"X_167=939160:int := sql.getVariable(X_0=0:int,\"_east\":str);"	]
[ 174,	"X_188=<tmp_20524>[1583115]:bat[:int] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_onbegroeidterreindeel\":str,\"ogc_fid\":str,0:int);"	]
[ 59,	"X_1019=<tmp_3053>[0]:bat[:wkb] := algebra.projection(X_952=<tmp_432>[0]:bat[:oid],X_30=<tmp_2375>[1]:bat[:wkb]);"	]
[ 62,	"X_1020=<tmp_472>[0]:bat[:wkb] := algebra.projection(X_954=<tmp_1751>[0]:bat[:oid],X_30=<tmp_2375>[1]:bat[:wkb]);"	]
[ 63,	"X_1021=<tmp_5330>[0]:bat[:wkb] := algebra.projection(X_956=<tmp_565>[0]:bat[:oid],X_30=<tmp_2375>[1]:bat[:wkb]);"	]
[ 290,	"X_177=<tmp_20636>[1583115]:bat[:wkb] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_onbegroeidterreindeel\":str,\"wkt\":str,0:int);"	]
[ 27,	"X_1016=<tmp_723>[0]:bat[:wkb] := algebra.projection(X_946=<tmp_4775>[0]:bat[:oid],X_30=<tmp_2375>[1]:bat[:wkb]);"	]
[ 23,	"X_1015=<tmp_432>[0]:bat[:wkb] := algebra.projection(X_944=<tmp_5216>[0]:bat[:oid],X_30=<tmp_2375>[1]:bat[:wkb]);"	]
[ 29,	"X_1014=<tmp_1751>[0]:bat[:wkb] := algebra.projection(X_942=<tmp_5557>[0]:bat[:oid],X_30=<tmp_2375>[1]:bat[:wkb]);"	]
[ 44,	"X_1013=<tmp_565>[0]:bat[:wkb] := algebra.projection(X_957=<tmp_433>[0]:bat[:oid],X_941=<tmp_2630>[0]:bat[:wkb]);"	]
[ 29,	"X_1012=<tmp_4775>[0]:bat[:wkb] := algebra.projection(X_955=<tmp_3754>[0]:bat[:oid],X_940=<tmp_2156>[0]:bat[:wkb]);"	]
[ 31,	"X_202=<tmp_2624>[0]:bat[:wkb] := bat.new(nil:wkb);"	]
[ 17,	"X_1011=<tmp_5216>[0]:bat[:wkb] := algebra.projection(X_953=<tmp_507>[0]:bat[:oid],X_939=<tmp_651>[0]:bat[:wkb]);"	]
[ 24,	"X_1010=<tmp_5557>[0]:bat[:wkb] := algebra.projection(X_951=<tmp_4431>[0]:bat[:oid],X_938=<tmp_2736>[0]:bat[:wkb]);"	]
[ 28,	"X_1029=<tmp_2630>[0]:bat[:wkb] := batgeom.Intersection(X_1013=<tmp_565>[0]:bat[:wkb],X_1021=<tmp_5330>[0]:bat[:wkb]);"	]
[ 33,	"X_1006=<tmp_3060>[0]:bat[:wkb] := algebra.projection(X_943=<tmp_1615>[0]:bat[:oid],X_934=<tmp_1167>[0]:bat[:wkb]);"	]
[ 17,	"X_1027=<tmp_651>[0]:bat[:wkb] := batgeom.Intersection(X_1011=<tmp_5216>[0]:bat[:wkb],X_1019=<tmp_3053>[0]:bat[:wkb]);"	]
[ 18,	"X_1028=<tmp_2156>[0]:bat[:wkb] := batgeom.Intersection(X_1012=<tmp_4775>[0]:bat[:wkb],X_1020=<tmp_472>[0]:bat[:wkb]);"	]
[ 23,	"X_1009=<tmp_2736>[0]:bat[:wkb] := algebra.projection(X_949=<tmp_4076>[0]:bat[:oid],X_937=<tmp_1051>[0]:bat[:wkb]);"	]
[ 44,	"X_1017=<tmp_3171>[0]:bat[:wkb] := algebra.projection(X_948=<tmp_4551>[0]:bat[:oid],X_30=<tmp_2375>[1]:bat[:wkb]);"	]
[ 32,	"X_1008=<tmp_5330>[0]:bat[:wkb] := algebra.projection(X_947=<tmp_3416>[0]:bat[:oid],X_936=<tmp_4000>[0]:bat[:wkb]);"	]
[ 17,	"X_1007=<tmp_1051>[0]:bat[:wkb] := algebra.projection(X_945=<tmp_2040>[0]:bat[:oid],X_935=<tmp_1165>[0]:bat[:wkb]);"	]
[ 63,	"X_1018=<tmp_3413>[0]:bat[:wkb] := algebra.projection(X_950=<tmp_1273>[0]:bat[:oid],X_30=<tmp_2375>[1]:bat[:wkb]);"	]
[ 52,	"X_1022=<tmp_1167>[0]:bat[:wkb] := batgeom.Intersection(X_1006=<tmp_3060>[0]:bat[:wkb],X_1014=<tmp_1751>[0]:bat[:wkb]);"	]
[ 19,	"X_1023=<tmp_1165>[0]:bat[:wkb] := batgeom.Intersection(X_1007=<tmp_1051>[0]:bat[:wkb],X_1015=<tmp_432>[0]:bat[:wkb]);"	]
[ 32,	"X_1025=<tmp_4551>[0]:bat[:wkb] := batgeom.Intersection(X_1009=<tmp_2736>[0]:bat[:wkb],X_1017=<tmp_3171>[0]:bat[:wkb]);"	]
[ 23,	"X_1024=<tmp_4000>[0]:bat[:wkb] := batgeom.Intersection(X_1008=<tmp_5330>[0]:bat[:wkb],X_1016=<tmp_723>[0]:bat[:wkb]);"	]
[ 24,	"X_1026=<tmp_1273>[0]:bat[:wkb] := batgeom.Intersection(X_1010=<tmp_5557>[0]:bat[:wkb],X_1018=<tmp_3413>[0]:bat[:wkb]);"	]
[ 19,	"X_1143=<tmp_1751>[0]:bat[:wkb] := mat.packIncrement(X_1022=<tmp_1167>[0]:bat[:wkb],8:int);"	]
[ 27,	"X_1151=<tmp_432>[0]:bat[:wkb] := mat.packIncrement(X_1022=<tmp_1167>[0]:bat[:wkb],8:int);"	]
[ 5,	"X_1144=<tmp_1751>[0]:bat[:wkb] := mat.packIncrement(X_1143=<tmp_1751>[0]:bat[:wkb],X_1023=<tmp_1165>[0]:bat[:wkb]);"	]
[ 5,	"language.pass(X_1022=<tmp_1167>[0]:bat[:wkb]);"	]
[ 5,	"X_1145=<tmp_1751>[0]:bat[:wkb] := mat.packIncrement(X_1144=<tmp_1751>[0]:bat[:wkb],X_1024=<tmp_4000>[0]:bat[:wkb]);"	]
[ 24,	"X_1152=<tmp_432>[0]:bat[:wkb] := mat.packIncrement(X_1151=<tmp_432>[0]:bat[:wkb],X_1023=<tmp_1165>[0]:bat[:wkb]);"	]
[ 5,	"X_1146=<tmp_1751>[0]:bat[:wkb] := mat.packIncrement(X_1145=<tmp_1751>[0]:bat[:wkb],X_1025=<tmp_4551>[0]:bat[:wkb]);"	]
[ 5,	"X_1147=<tmp_1751>[0]:bat[:wkb] := mat.packIncrement(X_1146=<tmp_1751>[0]:bat[:wkb],X_1026=<tmp_1273>[0]:bat[:wkb]);"	]
[ 4,	"language.pass(X_1023=<tmp_1165>[0]:bat[:wkb]);"	]
[ 4,	"X_1148=<tmp_1751>[0]:bat[:wkb] := mat.packIncrement(X_1147=<tmp_1751>[0]:bat[:wkb],X_1027=<tmp_651>[0]:bat[:wkb]);"	]
[ 17,	"X_1153=<tmp_432>[0]:bat[:wkb] := mat.packIncrement(X_1152=<tmp_432>[0]:bat[:wkb],X_1024=<tmp_4000>[0]:bat[:wkb]);"	]
[ 5,	"X_1149=<tmp_1751>[0]:bat[:wkb] := mat.packIncrement(X_1148=<tmp_1751>[0]:bat[:wkb],X_1028=<tmp_2156>[0]:bat[:wkb]);"	]
[ 6,	"X_206=<tmp_1751>[0]:bat[:wkb] := mat.packIncrement(X_1149=<tmp_1751>[0]:bat[:wkb],X_1029=<tmp_2630>[0]:bat[:wkb]);"	]
[ 5,	"language.pass(X_1024=<tmp_4000>[0]:bat[:wkb]);"	]
[ 18,	"X_1154=<tmp_432>[0]:bat[:wkb] := mat.packIncrement(X_1153=<tmp_432>[0]:bat[:wkb],X_1025=<tmp_4551>[0]:bat[:wkb]);"	]
[ 5,	"language.pass(X_1025=<tmp_4551>[0]:bat[:wkb]);"	]
[ 13,	"X_1155=<tmp_432>[0]:bat[:wkb] := mat.packIncrement(X_1154=<tmp_432>[0]:bat[:wkb],X_1026=<tmp_1273>[0]:bat[:wkb]);"	]
[ 5,	"language.pass(X_1026=<tmp_1273>[0]:bat[:wkb]);"	]
[ 14,	"X_1156=<tmp_432>[0]:bat[:wkb] := mat.packIncrement(X_1155=<tmp_432>[0]:bat[:wkb],X_1027=<tmp_651>[0]:bat[:wkb]);"	]
[ 5,	"language.pass(X_1027=<tmp_651>[0]:bat[:wkb]);"	]
[ 13,	"X_1157=<tmp_432>[0]:bat[:wkb] := mat.packIncrement(X_1156=<tmp_432>[0]:bat[:wkb],X_1028=<tmp_2156>[0]:bat[:wkb]);"	]
[ 5,	"language.pass(X_1028=<tmp_2156>[0]:bat[:wkb]);"	]
[ 10633,	"X_168=<tmp_3552>[1527982]:bat[:bit] := batcalc.>(X_164=<tmp_2510>[1527982]:bat[:int],X_167=939160:int);"	]
[ 8879,	"X_169=<tmp_2510>[1527982]:bat[:bit] := batcalc.or(X_161=<tmp_1500>[1527982]:bat[:bit],X_168=<tmp_3552>[1527982]:bat[:bit]);"	]
[ 7503,	"X_171=<tmp_3552>[1527982]:bat[:bit] := batcalc.or(X_153=<tmp_425>[1527982]:bat[:bit],X_169=<tmp_2510>[1527982]:bat[:bit]);"	]
[ 6790,	"X_172=<tmp_2510>[1527982]:bat[:bit] := batcalc.or(X_144=<tmp_567>[1527982]:bat[:bit],X_171=<tmp_3552>[1527982]:bat[:bit]);"	]
[ 16096,	"C_175=<tmp_3552>[15]:bat[:oid] := algebra.subselect(X_172=<tmp_2510>[1527982]:bat[:bit],false:bit,false:bit,true:bit,false:bit,false:bit);"	]
[ 237,	"X_180=<tmp_2510>[15]:bat[:wkb] := algebra.projectionpath(C_175=<tmp_3552>[15]:bat[:oid],C_137=<tmp_2272>[1527982]:bat[:oid],C_122=<tmp_564>[1583115]:bat[:oid],X_177=<tmp_20636>[1583115]:bat[:wkb]);"	]
[ 905,	"(X_181=<tmp_567>[15]:bat[:oid],X_182=<tmp_425>[15]:bat[:oid]) := geom.Intersectssubjoin(X_30=<tmp_2375>[1]:bat[:wkb],X_180=<tmp_2510>[15]:bat[:wkb],nil:BAT,nil:BAT,true:bit,nil:lng);"	]
[ 58,	"X_192=<tmp_1500>[15]:bat[:int] := algebra.projectionpath(X_182=<tmp_425>[15]:bat[:oid],C_175=<tmp_3552>[15]:bat[:oid],C_137=<tmp_2272>[1527982]:bat[:oid],C_122=<tmp_564>[1583115]:bat[:oid],X_188=<tmp_20524>[1583115]:bat[:int]);"	]
[ 39,	"X_195=<tmp_5651>[15]:bat[:str] := algebra.project(X_192=<tmp_1500>[15]:bat[:int],\"sys\":str);"	]
[ 8873,	"X_198=<tmp_6070>[15]:bat[:lng] := batsql.next_value(X_195=<tmp_5651>[15]:bat[:str],\"counter\":str);"	]
[ 12,	"X_201=<tmp_3173>[15]:bat[:lng] := bat.append(X_120=<tmp_3173>[15]:bat[:lng],X_198=<tmp_6070>[15]:bat[:lng],true:bit);"	]
[ 71253,	"barrier X_1230=false:bit := language.dataflow();"	]
[ 27,	"X_206=<tmp_432>[0]:bat[:wkb] := mat.packIncrement(X_1157=<tmp_432>[0]:bat[:wkb],X_1029=<tmp_2630>[0]:bat[:wkb]);"	]
[ 38,	"X_229=<tmp_3171>[15]:bat[:oid] := bat.mirror(X_201=<tmp_3173>[15]:bat[:lng]);"	]
[ 42,	"C_234=<tmp_651>[689177299]:bat[:oid] := sql.tid(X_0=0:int,\"sys\":str,\"c_30fz1\":str);"	]
[ 41,	"X_215=<tmp_1273>[15]:bat[:int] := batcalc.int(X_201=<tmp_3173>[15]:bat[:lng]);"	]
[ 46,	"X_212=<tmp_6070>[15]:bat[:wkb] := algebra.projection(X_181=<tmp_567>[15]:bat[:oid],X_30=<tmp_2375>[1]:bat[:wkb]);"	]
[ 91,	"X_236=<tmp_20476>[689177299]:bat[:int] := sql.bind(X_0=0:int,\"sys\":str,\"c_30fz1\":str,\"y\":str,0:int);"	]
[ 58,	"X_211=<tmp_1165>[15]:bat[:wkb] := algebra.projection(X_182=<tmp_425>[15]:bat[:oid],X_180=<tmp_2510>[15]:bat[:wkb]);"	]
[ 8,	"X_209=<tmp_2624>[0]:bat[:wkb] := bat.append(X_202=<tmp_2624>[0]:bat[:wkb],X_206=<tmp_432>[0]:bat[:wkb],true:bit);"	]
[ 32,	"X_238=<tmp_4551>[689177299]:bat[:int] := algebra.projection(C_234=<tmp_651>[689177299]:bat[:oid],X_236=<tmp_20476>[689177299]:bat[:int]);"	]
[ 4558,	"X_213=<tmp_2510>[15]:bat[:wkb] := batgeom.Intersection(X_211=<tmp_1165>[15]:bat[:wkb],X_212=<tmp_6070>[15]:bat[:wkb]);"	]
[ 22,	"X_214=<tmp_2624>[15]:bat[:wkb] := bat.append(X_209=<tmp_2624>[15]:bat[:wkb],X_213=<tmp_2510>[15]:bat[:wkb],true:bit);"	]
[ 352,	"(X_216=<tmp_1165>[15]:bat[:int],X_218=<tmp_2510>[15]:bat[:str],X_219=<tmp_6070>[15]:bat[:wkb]) := batgeom.DumpP(X_214=<tmp_2624>[15]:bat[:wkb],X_215=<tmp_1273>[15]:bat[:int]);"	]
[ 15,	"X_220=<tmp_1273>[15]:bat[:lng] := batcalc.lng(X_216=<tmp_1165>[15]:bat[:int]);"	]
[ 25,	"(X_221=<tmp_1165>[15]:bat[:oid],r1_245=<tmp_6070>[15]:bat[:oid]) := algebra.subjoin(X_201=<tmp_3173>[15]:bat[:lng],X_220=<tmp_1273>[15]:bat[:lng],nil:BAT,nil:BAT,false:bit,nil:lng);"	]
[ 23,	"X_227=<tmp_1273>[15]:bat[:wkb] := algebra.projection(X_221=<tmp_1165>[15]:bat[:oid],X_214=<tmp_2624>[15]:bat[:wkb]);"	]
[ 18,	"X_228=<tmp_1726>[15]:bat[:wkb] := bat.append(X_3=<tmp_1726>[15]:bat[:wkb],X_227=<tmp_1273>[15]:bat[:wkb],true:bit);"	]
[ 59,	"X_230=<tmp_2156>[0]:bat[:oid] := algebra.subdiff(X_229=<tmp_3171>[15]:bat[:oid],X_221=<tmp_1165>[15]:bat[:oid],nil:BAT,nil:BAT,false:bit,nil:lng);"	]
[ 21,	"X_231=<tmp_3171>[0]:bat[:wkb] := algebra.projection(X_230=<tmp_2156>[0]:bat[:oid],X_214=<tmp_2624>[15]:bat[:wkb]);"	]
[ 4,	"language.pass(X_214=<tmp_2624>[15]:bat[:wkb]);"	]
[ 10,	"X_232=<tmp_1726>[15]:bat[:wkb] := bat.append(X_228=<tmp_1726>[15]:bat[:wkb],X_231=<tmp_3171>[0]:bat[:wkb],true:bit);"	]
[ 7339,	"barrier X_1234=false:bit := language.dataflow();"	]
[ 11,	"X_241=4638910:int := sql.getVariable(X_0=0:int,\"_south\":str);"	]
[ 3,	"X_242=463891000:int := calc.int(1:int,X_241=4638910:int,9:int,3:int);"	]
[ 2,	"X_248=4639910:int := sql.getVariable(X_0=0:int,\"_north\":str);"	]
[ 1,	"X_249=463991000:int := calc.int(1:int,X_248=4639910:int,9:int,3:int);"	]
[ 68,	"X_250=<tmp_46>[689177299]:bat[:int] := sql.bind(X_0=0:int,\"sys\":str,\"c_30fz1\":str,\"x\":str,0:int);"	]
[ 15,	"X_252=<tmp_4031>[689177299]:bat[:int] := algebra.projection(C_234=<tmp_651>[689177299]:bat[:oid],X_250=<tmp_46>[689177299]:bat[:int]);"	]
[ 3,	"X_255=938160:int := sql.getVariable(X_0=0:int,\"_west\":str);"	]
[ 2,	"X_256=93816000:int := calc.int(1:int,X_255=938160:int,9:int,3:int);"	]
[ 1,	"X_259=939160:int := sql.getVariable(X_0=0:int,\"_east\":str);"	]
[ 45,	"X_1031=<tmp_472>[0]:bat[:str] := algebra.project(X_983=<tmp_1522>[0]:bat[:int],A1=\"plantcover\":str);"	]
[ 212,	"X_756=<tmp_567>[298931]:bat[:str] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"bgt_fysiekvoorkomen\":str,0:int,7:int,8:int);"	]
[ 103,	"X_261=<tmp_20500>[689177299]:bat[:bte] := sql.bind(X_0=0:int,\"sys\":str,\"c_30fz1\":str,\"c\":str,0:int);"	]
[ 9,	"X_260=93916000:int := calc.int(1:int,X_259=939160:int,9:int,3:int);"	]
[ 25,	"X_263=<tmp_1273>[689177299]:bat[:bte] := algebra.projection(C_234=<tmp_651>[689177299]:bat[:oid],X_261=<tmp_20500>[689177299]:bat[:bte]);"	]
[ 147,	"X_746=<tmp_4775>[298930]:bat[:str] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"bgt_fysiekvoorkomen\":str,0:int,2:int,8:int);"	]
[ 86,	"X_277=<tmp_15>[689177299]:bat[:int] := sql.bind(X_0=0:int,\"sys\":str,\"c_30fz1\":str,\"z\":str,0:int);"	]
[ 15,	"X_303=<tmp_3413>[0]:bat[:lng] := bat.new(nil:lng);"	]
[ 17,	"X_304=<tmp_5557>[15]:bat[:lng] := algebra.projection(X_221=<tmp_1165>[15]:bat[:oid],X_201=<tmp_3173>[15]:bat[:lng]);"	]
[ 1315,	"X_1064=<tmp_2742>[0]:bat[:str] := algebra.projectionpath(X_947=<tmp_3416>[0]:bat[:oid],C_912=<tmp_3170>[0]:bat[:oid],C_784=<tmp_15526>[291155]:bat[:oid],C_647=<tmp_4323>[298930]:bat[:oid],X_746=<tmp_4775>[298930]:bat[:str]);"	]
[ 13,	"X_305=<tmp_3413>[15]:bat[:lng] := bat.append(X_303=<tmp_3413>[15]:bat[:lng],X_304=<tmp_5557>[15]:bat[:lng],true:bit);"	]
[ 19,	"X_306=<tmp_5557>[0]:bat[:lng] := algebra.projection(X_230=<tmp_2156>[0]:bat[:oid],X_201=<tmp_3173>[15]:bat[:lng]);"	]
[ 5,	"language.pass(X_201=<tmp_3173>[15]:bat[:lng]);"	]
[ 7,	"X_307=<tmp_3413>[15]:bat[:lng] := bat.append(X_305=<tmp_3413>[15]:bat[:lng],X_306=<tmp_5557>[0]:bat[:lng],true:bit);"	]
[ 19,	"X_308=<tmp_3173>[15]:bat[:oid] := bat.mirror(X_307=<tmp_3413>[15]:bat[:lng]);"	]
[ 19,	"X_1072=<tmp_4775>[0]:bat[:bit] := batcalc.isnil(X_1064=<tmp_2742>[0]:bat[:str]);"	]
[ 16,	"X_313=<tmp_5557>[0]:bat[:str] := bat.new(nil:str);"	]
[ 17,	"X_1080=<tmp_4323>[0]:bat[:bit] := batcalc.not(X_1072=<tmp_4775>[0]:bat[:bit]);"	]
[ 22,	"X_315=<tmp_3644>[0]:bat[:str] := bat.new(nil:str);"	]
[ 18,	"X_1088=<tmp_4775>[0]:bat[:bit] := batcalc.isnil(X_1080=<tmp_4323>[0]:bat[:bit]);"	]
[ 41,	"X_316=<tmp_4073>[0]:bat[:str] := bat.new(nil:str);"	]
[ 19,	"X_1112=<tmp_15526>[0]:bat[:bit] := batcalc.ifthenelse(X_1088=<tmp_4775>[0]:bat[:bit],false:bit,X_1080=<tmp_4323>[0]:bat[:bit]);"	]
[ 4264,	"X_754=<tmp_723>[298930]:bat[:str] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"bgt_fysiekvoorkomen\":str,0:int,6:int,8:int);"	]
[ 3,	"language.pass(X_1080=<tmp_4323>[0]:bat[:bit]);"	]
[ 29,	"X_1030=<tmp_4316>[0]:bat[:str] := algebra.project(X_982=<tmp_1255>[0]:bat[:int],A1=\"plantcover\":str);"	]
[ 22,	"X_1069=<tmp_5651>[0]:bat[:str] := algebra.projectionpath(X_957=<tmp_433>[0]:bat[:oid],C_917=<tmp_430>[0]:bat[:oid],C_789=<tmp_735>[291573]:bat[:oid],C_657=<tmp_3300>[298931]:bat[:oid],X_756=<tmp_567>[298931]:bat[:str]);"	]
[ 15,	"X_1120=<tmp_4323>[0]:bat[:str] := batcalc.ifthenelse(X_1112=<tmp_15526>[0]:bat[:bit],X_1064=<tmp_2742>[0]:bat[:str],A7=\"transitie\":str);"	]
[ 48,	"X_1068=<tmp_5330>[0]:bat[:str] := algebra.projectionpath(X_955=<tmp_3754>[0]:bat[:oid],C_916=<tmp_1164>[0]:bat[:oid],C_788=<tmp_2504>[273813]:bat[:oid],C_655=<tmp_1405>[298930]:bat[:oid],X_754=<tmp_723>[298930]:bat[:str]);"	]
[ 5,	"language.pass(X_1064=<tmp_2742>[0]:bat[:str]);"	]
[ 150,	"X_1159=<tmp_4546>[0]:bat[:str] := mat.packIncrement(X_1030=<tmp_4316>[0]:bat[:str],8:int);"	]
[ 14,	"X_744=<tmp_2742>[298930]:bat[:str] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"bgt_fysiekvoorkomen\":str,0:int,1:int,8:int);"	]
[ 14,	"X_1160=<tmp_4546>[0]:bat[:str] := mat.packIncrement(X_1159=<tmp_4546>[0]:bat[:str],X_1031=<tmp_472>[0]:bat[:str]);"	]
[ 17,	"X_1063=<tmp_15526>[0]:bat[:str] := algebra.projectionpath(X_945=<tmp_2040>[0]:bat[:oid],C_911=<tmp_1746>[0]:bat[:oid],C_783=<tmp_3077>[291610]:bat[:oid],C_645=<tmp_1055>[298930]:bat[:oid],X_744=<tmp_2742>[298930]:bat[:str]);"	]
[ 12,	"X_1077=<tmp_567>[0]:bat[:bit] := batcalc.isnil(X_1069=<tmp_5651>[0]:bat[:str]);"	]
[ 18,	"X_1076=<tmp_723>[0]:bat[:bit] := batcalc.isnil(X_1068=<tmp_5330>[0]:bat[:str]);"	]
[ 16,	"X_1032=<tmp_472>[0]:bat[:str] := algebra.project(X_984=<tmp_736>[0]:bat[:int],A1=\"plantcover\":str);"	]
[ 13,	"X_1085=<tmp_3300>[0]:bat[:bit] := batcalc.not(X_1077=<tmp_567>[0]:bat[:bit]);"	]
[ 14,	"X_1084=<tmp_1405>[0]:bat[:bit] := batcalc.not(X_1076=<tmp_723>[0]:bat[:bit]);"	]
[ 9,	"X_1161=<tmp_4546>[0]:bat[:str] := mat.packIncrement(X_1160=<tmp_4546>[0]:bat[:str],X_1032=<tmp_472>[0]:bat[:str]);"	]
[ 9,	"X_1093=<tmp_567>[0]:bat[:bit] := batcalc.isnil(X_1085=<tmp_3300>[0]:bat[:bit]);"	]
[ 8,	"X_1092=<tmp_723>[0]:bat[:bit] := batcalc.isnil(X_1084=<tmp_1405>[0]:bat[:bit]);"	]
[ 10,	"X_1117=<tmp_735>[0]:bat[:bit] := batcalc.ifthenelse(X_1093=<tmp_567>[0]:bat[:bit],false:bit,X_1085=<tmp_3300>[0]:bat[:bit]);"	]
[ 15,	"X_1116=<tmp_2504>[0]:bat[:bit] := batcalc.ifthenelse(X_1092=<tmp_723>[0]:bat[:bit],false:bit,X_1084=<tmp_1405>[0]:bat[:bit]);"	]
[ 18,	"X_1033=<tmp_472>[0]:bat[:str] := algebra.project(X_985=<tmp_4206>[0]:bat[:int],A1=\"plantcover\":str);"	]
[ 3,	"language.pass(X_1085=<tmp_3300>[0]:bat[:bit]);"	]
[ 5,	"language.pass(X_1084=<tmp_1405>[0]:bat[:bit]);"	]
[ 11,	"X_1124=<tmp_3300>[0]:bat[:str] := batcalc.ifthenelse(X_1116=<tmp_2504>[0]:bat[:bit],X_1068=<tmp_5330>[0]:bat[:str],A7=\"transitie\":str);"	]
[ 5,	"X_1162=<tmp_4546>[0]:bat[:str] := mat.packIncrement(X_1161=<tmp_4546>[0]:bat[:str],X_1033=<tmp_472>[0]:bat[:str]);"	]
[ 8199,	"X_752=<tmp_432>[298930]:bat[:str] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"bgt_fysiekvoorkomen\":str,0:int,5:int,8:int);"	]
[ 9758,	"X_748=<tmp_3171>[298930]:bat[:str] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"bgt_fysiekvoorkomen\":str,0:int,3:int,8:int);"	]
[ 5,	"language.pass(X_1068=<tmp_5330>[0]:bat[:str]);"	]
[ 14,	"X_1071=<tmp_2742>[0]:bat[:bit] := batcalc.isnil(X_1063=<tmp_15526>[0]:bat[:str]);"	]
[ 128,	"X_742=<tmp_1405>[298930]:bat[:str] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"bgt_fysiekvoorkomen\":str,0:int,0:int,8:int);"	]
[ 9,	"X_1079=<tmp_1055>[0]:bat[:bit] := batcalc.not(X_1071=<tmp_2742>[0]:bat[:bit]);"	]
[ 12,	"X_342=<tmp_5330>[0]:bat[:str] := bat.new(nil:str);"	]
[ 21,	"X_1034=<tmp_472>[0]:bat[:str] := algebra.project(X_986=<tmp_1061>[0]:bat[:int],A1=\"plantcover\":str);"	]
[ 10,	"X_1087=<tmp_2742>[0]:bat[:bit] := batcalc.isnil(X_1079=<tmp_1055>[0]:bat[:bit]);"	]
[ 45,	"X_341=<tmp_2504>[0]:bat[:str] := bat.new(nil:str);"	]
[ 10,	"X_1111=<tmp_3077>[0]:bat[:bit] := batcalc.ifthenelse(X_1087=<tmp_2742>[0]:bat[:bit],false:bit,X_1079=<tmp_1055>[0]:bat[:bit]);"	]
[ 8,	"X_1163=<tmp_4546>[0]:bat[:str] := mat.packIncrement(X_1162=<tmp_4546>[0]:bat[:str],X_1034=<tmp_472>[0]:bat[:str]);"	]
[ 5,	"language.pass(X_1079=<tmp_1055>[0]:bat[:bit]);"	]
[ 81,	"X_1062=<tmp_723>[0]:bat[:str] := algebra.projectionpath(X_943=<tmp_1615>[0]:bat[:oid],C_910=<tmp_642>[0]:bat[:oid],C_782=<tmp_4230>[296934]:bat[:oid],C_643=<tmp_1616>[298930]:bat[:oid],X_742=<tmp_1405>[298930]:bat[:str]);"	]
[ 29,	"X_340=<tmp_567>[0]:bat[:str] := bat.new(nil:str);"	]
[ 12,	"X_321=<tmp_1055>[15]:bat[:str] := algebra.project(X_192=<tmp_1500>[15]:bat[:int],A3=\"bare\":str);"	]
[ 14,	"X_1035=<tmp_472>[0]:bat[:str] := algebra.project(X_987=<tmp_2405>[0]:bat[:int],A1=\"plantcover\":str);"	]
[ 569,	"X_1119=<tmp_430>[0]:bat[:str] := batcalc.ifthenelse(X_1111=<tmp_3077>[0]:bat[:bit],X_1063=<tmp_15526>[0]:bat[:str],A7=\"transitie\":str);"	]
[ 47,	"X_322=<tmp_2742>[15]:bat[:str] := batcalc.str(3:int,4:int,0:int,0:int,X_321=<tmp_1055>[15]:bat[:str],10:int);"	]
[ 9,	"X_1164=<tmp_4546>[0]:bat[:str] := mat.packIncrement(X_1163=<tmp_4546>[0]:bat[:str],X_1035=<tmp_472>[0]:bat[:str]);"	]
[ 5,	"language.pass(X_1063=<tmp_15526>[0]:bat[:str]);"	]
[ 11,	"X_1036=<tmp_1055>[0]:bat[:str] := algebra.project(X_988=<tmp_2266>[0]:bat[:int],A1=\"plantcover\":str);"	]
[ 29,	"X_1037=<tmp_1746>[0]:bat[:str] := algebra.project(X_989=<tmp_563>[0]:bat[:int],A1=\"plantcover\":str);"	]
[ 25,	"X_1165=<tmp_4546>[0]:bat[:str] := mat.packIncrement(X_1164=<tmp_4546>[0]:bat[:str],X_1036=<tmp_1055>[0]:bat[:str]);"	]
[ 7,	"X_318=<tmp_4546>[0]:bat[:str] := mat.packIncrement(X_1165=<tmp_4546>[0]:bat[:str],X_1037=<tmp_1746>[0]:bat[:str]);"	]
[ 15,	"X_1070=<tmp_1405>[0]:bat[:bit] := batcalc.isnil(X_1062=<tmp_723>[0]:bat[:str]);"	]
[ 5,	"X_319=<tmp_4073>[0]:bat[:str] := bat.append(X_316=<tmp_4073>[0]:bat[:str],X_318=<tmp_4546>[0]:bat[:str],true:bit);"	]
[ 11,	"X_1078=<tmp_1616>[0]:bat[:bit] := batcalc.not(X_1070=<tmp_1405>[0]:bat[:bit]);"	]
[ 10,	"X_330=<tmp_4073>[15]:bat[:str] := bat.append(X_319=<tmp_4073>[15]:bat[:str],X_322=<tmp_2742>[15]:bat[:str],true:bit);"	]
[ 8,	"X_1086=<tmp_1405>[0]:bat[:bit] := batcalc.isnil(X_1078=<tmp_1616>[0]:bat[:bit]);"	]
[ 11,	"X_1110=<tmp_4230>[0]:bat[:bit] := batcalc.ifthenelse(X_1086=<tmp_1405>[0]:bat[:bit],false:bit,X_1078=<tmp_1616>[0]:bat[:bit]);"	]
[ 24,	"X_331=<tmp_2742>[15]:bat[:str] := algebra.projection(X_221=<tmp_1165>[15]:bat[:oid],X_330=<tmp_4073>[15]:bat[:str]);"	]
[ 3,	"language.pass(X_1078=<tmp_1616>[0]:bat[:bit]);"	]
[ 47,	"X_334=<tmp_15526>[0]:bat[:str] := algebra.projection(X_230=<tmp_2156>[0]:bat[:oid],X_330=<tmp_4073>[15]:bat[:str]);"	]
[ 26,	"X_1118=<tmp_2040>[0]:bat[:str] := batcalc.ifthenelse(X_1110=<tmp_4230>[0]:bat[:bit],X_1062=<tmp_723>[0]:bat[:str],A7=\"transitie\":str);"	]
[ 5,	"language.pass(X_330=<tmp_4073>[15]:bat[:str]);"	]
[ 9,	"X_332=<tmp_3644>[15]:bat[:str] := bat.append(X_315=<tmp_3644>[15]:bat[:str],X_331=<tmp_2742>[15]:bat[:str],true:bit);"	]
[ 12595,	"X_750=<tmp_2624>[298930]:bat[:str] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_begroeidterreindeel\":str,\"bgt_fysiekvoorkomen\":str,0:int,4:int,8:int);"	]
[ 5,	"language.pass(X_1062=<tmp_723>[0]:bat[:str]);"	]
[ 17,	"X_1176=<tmp_1616>[0]:bat[:str] := mat.packIncrement(X_1118=<tmp_2040>[0]:bat[:str],8:int);"	]
[ 22,	"X_1167=<tmp_4073>[0]:bat[:str] := mat.packIncrement(X_1118=<tmp_2040>[0]:bat[:str],8:int);"	]
[ 5,	"X_1177=<tmp_1616>[0]:bat[:str] := mat.packIncrement(X_1176=<tmp_1616>[0]:bat[:str],X_1119=<tmp_430>[0]:bat[:str]);"	]
[ 10,	"X_335=<tmp_3644>[15]:bat[:str] := bat.append(X_332=<tmp_3644>[15]:bat[:str],X_334=<tmp_15526>[0]:bat[:str],true:bit);"	]
[ 4,	"language.pass(X_1118=<tmp_2040>[0]:bat[:str]);"	]
[ 5,	"X_1178=<tmp_1616>[0]:bat[:str] := mat.packIncrement(X_1177=<tmp_1616>[0]:bat[:str],X_1120=<tmp_4323>[0]:bat[:str]);"	]
[ 9,	"X_1169=<tmp_4073>[0]:bat[:str] := mat.packIncrement(X_1167=<tmp_4073>[0]:bat[:str],X_1119=<tmp_430>[0]:bat[:str]);"	]
[ 114,	"X_1066=<tmp_1167>[0]:bat[:str] := algebra.projectionpath(X_951=<tmp_4431>[0]:bat[:oid],C_914=<tmp_2401>[0]:bat[:oid],C_786=<tmp_4454>[285782]:bat[:oid],C_651=<tmp_2740>[298930]:bat[:oid],X_750=<tmp_2624>[298930]:bat[:str]);"	]
[ 9,	"X_1170=<tmp_4073>[0]:bat[:str] := mat.packIncrement(X_1169=<tmp_4073>[0]:bat[:str],X_1120=<tmp_4323>[0]:bat[:str]);"	]
[ 3,	"language.pass(X_1119=<tmp_430>[0]:bat[:str]);"	]
[ 7,	"language.pass(X_1120=<tmp_4323>[0]:bat[:str]);"	]
[ 10,	"X_1074=<tmp_2624>[0]:bat[:bit] := batcalc.isnil(X_1066=<tmp_1167>[0]:bat[:str]);"	]
[ 10,	"X_1082=<tmp_2740>[0]:bat[:bit] := batcalc.not(X_1074=<tmp_2624>[0]:bat[:bit]);"	]
[ 8,	"X_1090=<tmp_2624>[0]:bat[:bit] := batcalc.isnil(X_1082=<tmp_2740>[0]:bat[:bit]);"	]
[ 112,	"X_1067=<tmp_2630>[0]:bat[:str] := algebra.projectionpath(X_953=<tmp_507>[0]:bat[:oid],C_915=<tmp_5442>[0]:bat[:oid],C_787=<tmp_2041>[290388]:bat[:oid],C_653=<tmp_1633>[298930]:bat[:oid],X_752=<tmp_432>[298930]:bat[:str]);"	]
[ 13,	"X_1114=<tmp_4454>[0]:bat[:bit] := batcalc.ifthenelse(X_1090=<tmp_2624>[0]:bat[:bit],false:bit,X_1082=<tmp_2740>[0]:bat[:bit]);"	]
[ 3,	"language.pass(X_1082=<tmp_2740>[0]:bat[:bit]);"	]
[ 25,	"X_1122=<tmp_1405>[0]:bat[:str] := batcalc.ifthenelse(X_1114=<tmp_4454>[0]:bat[:bit],X_1066=<tmp_1167>[0]:bat[:str],A7=\"transitie\":str);"	]
[ 3,	"language.pass(X_1066=<tmp_1167>[0]:bat[:str]);"	]
[ 10,	"X_1075=<tmp_432>[0]:bat[:bit] := batcalc.isnil(X_1067=<tmp_2630>[0]:bat[:str]);"	]
[ 10,	"X_1083=<tmp_1633>[0]:bat[:bit] := batcalc.not(X_1075=<tmp_432>[0]:bat[:bit]);"	]
[ 7,	"X_1091=<tmp_432>[0]:bat[:bit] := batcalc.isnil(X_1083=<tmp_1633>[0]:bat[:bit]);"	]
[ 10,	"X_1115=<tmp_2041>[0]:bat[:bit] := batcalc.ifthenelse(X_1091=<tmp_432>[0]:bat[:bit],false:bit,X_1083=<tmp_1633>[0]:bat[:bit]);"	]
[ 3,	"language.pass(X_1083=<tmp_1633>[0]:bat[:bit]);"	]
[ 16,	"X_1123=<tmp_2040>[0]:bat[:str] := batcalc.ifthenelse(X_1115=<tmp_2041>[0]:bat[:bit],X_1067=<tmp_2630>[0]:bat[:str],A7=\"transitie\":str);"	]
[ 3,	"language.pass(X_1067=<tmp_2630>[0]:bat[:str]);"	]
[ 91,	"X_1065=<tmp_4000>[0]:bat[:str] := algebra.projectionpath(X_949=<tmp_4076>[0]:bat[:oid],C_913=<tmp_5765>[0]:bat[:oid],C_785=<tmp_5112>[288697]:bat[:oid],C_649=<tmp_2176>[298930]:bat[:oid],X_748=<tmp_3171>[298930]:bat[:str]);"	]
[ 10,	"X_1073=<tmp_3171>[0]:bat[:bit] := batcalc.isnil(X_1065=<tmp_4000>[0]:bat[:str]);"	]
[ 9,	"X_1081=<tmp_2176>[0]:bat[:bit] := batcalc.not(X_1073=<tmp_3171>[0]:bat[:bit]);"	]
[ 7,	"X_1089=<tmp_3171>[0]:bat[:bit] := batcalc.isnil(X_1081=<tmp_2176>[0]:bat[:bit]);"	]
[ 12,	"X_1113=<tmp_5112>[0]:bat[:bit] := batcalc.ifthenelse(X_1089=<tmp_3171>[0]:bat[:bit],false:bit,X_1081=<tmp_2176>[0]:bat[:bit]);"	]
[ 3,	"language.pass(X_1081=<tmp_2176>[0]:bat[:bit]);"	]
[ 26,	"X_1121=<tmp_430>[0]:bat[:str] := batcalc.ifthenelse(X_1113=<tmp_5112>[0]:bat[:bit],X_1065=<tmp_4000>[0]:bat[:str],A7=\"transitie\":str);"	]
[ 3,	"language.pass(X_1065=<tmp_4000>[0]:bat[:str]);"	]
[ 21,	"X_1179=<tmp_1616>[0]:bat[:str] := mat.packIncrement(X_1178=<tmp_1616>[0]:bat[:str],X_1121=<tmp_430>[0]:bat[:str]);"	]
[ 37,	"X_1125=<tmp_4323>[0]:bat[:str] := batcalc.ifthenelse(X_1117=<tmp_735>[0]:bat[:bit],X_1069=<tmp_5651>[0]:bat[:str],A7=\"transitie\":str);"	]
[ 21,	"X_1171=<tmp_4073>[0]:bat[:str] := mat.packIncrement(X_1170=<tmp_4073>[0]:bat[:str],X_1121=<tmp_430>[0]:bat[:str]);"	]
[ 4,	"X_1180=<tmp_1616>[0]:bat[:str] := mat.packIncrement(X_1179=<tmp_1616>[0]:bat[:str],X_1122=<tmp_1405>[0]:bat[:str]);"	]
[ 3,	"language.pass(X_1121=<tmp_430>[0]:bat[:str]);"	]
[ 4,	"language.pass(X_1069=<tmp_5651>[0]:bat[:str]);"	]
[ 4,	"X_1181=<tmp_1616>[0]:bat[:str] := mat.packIncrement(X_1180=<tmp_1616>[0]:bat[:str],X_1123=<tmp_2040>[0]:bat[:str]);"	]
[ 8,	"X_1172=<tmp_4073>[0]:bat[:str] := mat.packIncrement(X_1171=<tmp_4073>[0]:bat[:str],X_1122=<tmp_1405>[0]:bat[:str]);"	]
[ 3,	"X_1182=<tmp_1616>[0]:bat[:str] := mat.packIncrement(X_1181=<tmp_1616>[0]:bat[:str],X_1124=<tmp_3300>[0]:bat[:str]);"	]
[ 3,	"language.pass(X_1122=<tmp_1405>[0]:bat[:str]);"	]
[ 5,	"X_1173=<tmp_4073>[0]:bat[:str] := mat.packIncrement(X_1172=<tmp_4073>[0]:bat[:str],X_1123=<tmp_2040>[0]:bat[:str]);"	]
[ 2,	"language.pass(X_1123=<tmp_2040>[0]:bat[:str]);"	]
[ 11,	"X_1174=<tmp_4073>[0]:bat[:str] := mat.packIncrement(X_1173=<tmp_4073>[0]:bat[:str],X_1124=<tmp_3300>[0]:bat[:str]);"	]
[ 3,	"language.pass(X_1124=<tmp_3300>[0]:bat[:str]);"	]
[ 11,	"X_362=<tmp_4073>[0]:bat[:str] := mat.packIncrement(X_1174=<tmp_4073>[0]:bat[:str],X_1125=<tmp_4323>[0]:bat[:str]);"	]
[ 4504736,	"C_265=<tmp_6070>[335484851]:bat[:oid] := algebra.subselect(X_263=<tmp_1273>[689177299]:bat[:bte],A5=2:bte,A5=2:bte,true:bit,false:bit,false:bit);"	]
[ 1617484,	"C_269=<tmp_1273>[6078848]:bat[:oid] := algebra.subselect(X_252=<tmp_4031>[689177299]:bat[:int],C_265=<tmp_6070>[335484851]:bat[:oid],X_256=93816000:int,X_260=93916000:int,true:bit,true:bit,false:bit);"	]
[ 31527,	"C_270=<tmp_6070>[46296]:bat[:oid] := algebra.subselect(X_238=<tmp_4551>[689177299]:bat[:int],C_269=<tmp_1273>[6078848]:bat[:oid],X_242=463891000:int,X_249=463991000:int,true:bit,true:bit,false:bit);"	]
[ 338,	"X_271=<tmp_1273>[46296]:bat[:int] := algebra.projection(C_270=<tmp_6070>[46296]:bat[:oid],X_252=<tmp_4031>[689177299]:bat[:int]);"	]
[ 3,	"language.pass(X_252=<tmp_4031>[689177299]:bat[:int]);"	]
[ 830,	"X_275=<tmp_5651>[46296]:bat[:int] := algebra.projection(C_270=<tmp_6070>[46296]:bat[:oid],X_238=<tmp_4551>[689177299]:bat[:int]);"	]
[ 6,	"language.pass(X_238=<tmp_4551>[689177299]:bat[:int]);"	]
[ 1072,	"X_272=<tmp_4031>[46296]:bat[:dbl] := batcalc.dbl(3:int,X_271=<tmp_1273>[46296]:bat[:int]);"	]
[ 1553,	"X_280=<tmp_430>[46296]:bat[:int] := algebra.projectionpath(C_270=<tmp_6070>[46296]:bat[:oid],C_234=<tmp_651>[689177299]:bat[:oid],X_277=<tmp_15>[689177299]:bat[:int]);"	]
[ 5,	"language.pass(C_270=<tmp_6070>[46296]:bat[:oid]);"	]
[ 5,	"language.pass(C_234=<tmp_651>[689177299]:bat[:oid]);"	]
[ 1120,	"X_276=<tmp_4551>[46296]:bat[:dbl] := batcalc.dbl(3:int,X_275=<tmp_5651>[46296]:bat[:int]);"	]
[ 1564,	"X_281=<tmp_2040>[46296]:bat[:dbl] := batcalc.dbl(3:int,X_280=<tmp_430>[46296]:bat[:int]);"	]
[ 13408,	"(X_284=<tmp_2630>[46296]:bat[:oid],X_285=<tmp_2041>[46296]:bat[:oid]) := geom.Containssubjoin(X_30=<tmp_2375>[1]:bat[:wkb],X_272=<tmp_4031>[46296]:bat[:dbl],X_276=<tmp_4551>[46296]:bat[:dbl],X_281=<tmp_2040>[46296]:bat[:dbl],A6=28992:int,nil:BAT,nil:BAT,true:bit,nil:lng);"	]
[ 56,	"X_291=<tmp_2040>[46296]:bat[:int] := algebra.projection(X_285=<tmp_2041>[46296]:bat[:oid],X_271=<tmp_1273>[46296]:bat[:int]);"	]
[ 4,	"language.pass(X_271=<tmp_1273>[46296]:bat[:int]);"	]
[ 310,	"X_295=<tmp_4000>[46296]:bat[:int] := algebra.projection(X_285=<tmp_2041>[46296]:bat[:oid],X_280=<tmp_430>[46296]:bat[:int]);"	]
[ 297,	"X_293=<tmp_2740>[46296]:bat[:int] := algebra.projection(X_285=<tmp_2041>[46296]:bat[:oid],X_275=<tmp_5651>[46296]:bat[:int]);"	]
[ 6,	"language.pass(X_280=<tmp_430>[46296]:bat[:int]);"	]
[ 4,	"language.pass(X_275=<tmp_5651>[46296]:bat[:int]);"	]
[ 5,	"language.pass(X_285=<tmp_2041>[46296]:bat[:oid]);"	]
[ 991,	"X_292=<tmp_1405>[46296]:bat[:dbl] := batcalc.dbl(3:int,X_291=<tmp_2040>[46296]:bat[:int]);"	]
[ 969,	"X_294=<tmp_735>[46296]:bat[:dbl] := batcalc.dbl(3:int,X_293=<tmp_2740>[46296]:bat[:int]);"	]
[ 1375,	"X_296=<tmp_2510>[46296]:bat[:dbl] := batcalc.dbl(3:int,X_295=<tmp_4000>[46296]:bat[:int]);"	]
[ 162939,	"(X_298=<tmp_3053>[2796]:bat[:oid],r1_322=<tmp_5216>[2796]:bat[:oid]) := geom.Intersectssubjoin(X_232=<tmp_1726>[15]:bat[:wkb],X_292=<tmp_1405>[46296]:bat[:dbl],X_294=<tmp_735>[46296]:bat[:dbl],X_296=<tmp_2510>[46296]:bat[:dbl],A9=28992:int,nil:BAT,nil:BAT,true:bit,nil:lng);"	]
[ 49,	"X_309=<tmp_6070>[2]:bat[:oid] := algebra.subdiff(X_308=<tmp_3173>[15]:bat[:oid],X_298=<tmp_3053>[2796]:bat[:oid],nil:BAT,nil:BAT,false:bit,nil:lng);"	]
[ 64,	"X_336=<tmp_1273>[2796]:bat[:str] := algebra.projection(X_298=<tmp_3053>[2796]:bat[:oid],X_335=<tmp_3644>[15]:bat[:str]);"	]
[ 14,	"X_311=<tmp_3173>[2]:bat[:wkb] := algebra.projection(X_309=<tmp_6070>[2]:bat[:oid],X_232=<tmp_1726>[15]:bat[:wkb]);"	]
[ 171,	"X_337=<tmp_5557>[2796]:bat[:str] := bat.append(X_313=<tmp_5557>[2796]:bat[:str],X_336=<tmp_1273>[2796]:bat[:str],true:bit);"	]
[ 52,	"X_338=<tmp_430>[2]:bat[:str] := algebra.projection(X_309=<tmp_6070>[2]:bat[:oid],X_335=<tmp_3644>[15]:bat[:str]);"	]
[ 3,	"language.pass(X_335=<tmp_3644>[15]:bat[:str]);"	]
[ 14,	"X_339=<tmp_5557>[2798]:bat[:str] := bat.append(X_337=<tmp_5557>[2798]:bat[:str],X_338=<tmp_430>[2]:bat[:str],true:bit);"	]
[ 1708,	"X_301=<tmp_5216>[2796]:bat[:wkb] := algebra.projection(X_298=<tmp_3053>[2796]:bat[:oid],X_232=<tmp_1726>[15]:bat[:wkb]);"	]
[ 1361,	"X_302=<tmp_2737>[2796]:bat[:wkb] := bat.append(X_1=<tmp_2737>[2796]:bat[:wkb],X_301=<tmp_5216>[2796]:bat[:wkb],true:bit);"	]
[ 9,	"X_312=<tmp_2737>[2798]:bat[:wkb] := bat.append(X_302=<tmp_2737>[2798]:bat[:wkb],X_311=<tmp_3173>[2]:bat[:wkb],true:bit);"	]
[ 6895280,	"barrier X_1271=false:bit := language.dataflow();"	]
[ 10,	"X_362=<tmp_1616>[0]:bat[:str] := mat.packIncrement(X_1182=<tmp_1616>[0]:bat[:str],X_1125=<tmp_4323>[0]:bat[:str]);"	]
[ 18,	"X_605=<tmp_1273>[0]:bat[:int] := bat.new(nil:int);"	]
[ 17,	"X_603=<tmp_1633>[0]:bat[:int] := bat.new(nil:int);"	]
[ 102,	"X_364=<tmp_20653>[1583115]:bat[:str] := sql.bind(X_0=0:int,\"sys\":str,\"bgt_onbegroeidterreindeel\":str,\"bgt_fysiekvoorkomen\":str,0:int);"	]
[ 17,	"X_602=<tmp_3173>[0]:bat[:str] := bat.new(nil:str);"	]
[ 23,	"X_599=<tmp_3644>[0]:bat[:str] := bat.new(nil:str);"	]
[ 17,	"X_601=<tmp_430>[0]:bat[:str] := bat.new(nil:str);"	]
[ 6,	"X_593=4:int := calc.int(1:int,A21=40:bte);"	]
[ 7,	"X_614=<tmp_1273>[1]:bat[:int] := bat.append(X_605=<tmp_1273>[1]:bat[:int],0:int);"	]
[ 5,	"X_612=<tmp_1633>[1]:bat[:int] := bat.append(X_603=<tmp_1633>[1]:bat[:int],32:int);"	]
[ 5,	"X_363=<tmp_5330>[0]:bat[:str] := bat.append(X_342=<tmp_5330>[0]:bat[:str],X_362=<tmp_1616>[0]:bat[:str],true:bit);"	]
[ 9,	"X_610=<tmp_3173>[1]:bat[:str] := bat.append(X_602=<tmp_3173>[1]:bat[:str],\"int\":str);"	]
[ 7,	"X_606=<tmp_3644>[1]:bat[:str] := bat.append(X_599=<tmp_3644>[1]:bat[:str],\".L4\":str);"	]
[ 9,	"X_608=<tmp_430>[1]:bat[:str] := bat.append(X_601=<tmp_430>[1]:bat[:str],\"id\":str);"	]
[ 5,	"X_622=<tmp_1273>[2]:bat[:int] := bat.append(X_614=<tmp_1273>[2]:bat[:int],0:int);"	]
[ 6,	"X_621=<tmp_1633>[2]:bat[:int] := bat.append(X_612=<tmp_1633>[2]:bat[:int],0:int);"	]
[ 10,	"X_406=<tmp_1616>[2]:bat[:lng] := algebra.projection(X_309=<tmp_6070>[2]:bat[:oid],X_307=<tmp_3413>[15]:bat[:lng]);"	]
[ 4,	"X_619=<tmp_3173>[2]:bat[:str] := bat.append(X_610=<tmp_3173>[2]:bat[:str],\"clob\":str);"	]
[ 4,	"X_617=<tmp_430>[2]:bat[:str] := bat.append(X_608=<tmp_430>[2]:bat[:str],\"type\":str);"	]
[ 6,	"X_616=<tmp_3644>[2]:bat[:str] := bat.append(X_606=<tmp_3644>[2]:bat[:str],\".L4\":str);"	]
[ 29,	"p=\"\"POINT Z (1 1 1)\"\":wkb := geom.MakePointXYZM(x=1:dbl,y=1:dbl,z=1:dbl,0:dbl,10:int);"	]
[ 122,	"X_368=<tmp_2041>[15]:bat[:str] := algebra.projectionpath(X_182=<tmp_425>[15]:bat[:oid],C_175=<tmp_3552>[15]:bat[:oid],C_137=<tmp_2272>[1527982]:bat[:oid],C_122=<tmp_564>[1583115]:bat[:oid],X_364=<tmp_20653>[1583115]:bat[:str]);"	]
[ 15,	"X_404=<tmp_4323>[2796]:bat[:lng] := algebra.projection(X_298=<tmp_3053>[2796]:bat[:oid],X_307=<tmp_3413>[15]:bat[:lng]);"	]
[ 5,	"X_628=<tmp_1633>[3]:bat[:int] := bat.append(X_621=<tmp_1633>[3]:bat[:int],0:int);"	]
[ 5,	"X_629=<tmp_1273>[3]:bat[:int] := bat.append(X_622=<tmp_1273>[3]:bat[:int],0:int);"	]
[ 4,	"X_623=<tmp_3644>[3]:bat[:str] := bat.append(X_616=<tmp_3644>[3]:bat[:str],\".L5\":str);"	]
[ 6,	"X_627=<tmp_3173>[3]:bat[:str] := bat.append(X_619=<tmp_3173>[3]:bat[:str],\"clob\":str);"	]
[ 5,	"X_625=<tmp_430>[3]:bat[:str] := bat.append(X_617=<tmp_430>[3]:bat[:str],\"geom\":str);"	]
[ 244,	"function geom.MakePoint(x:dbl,y:dbl,z:dbl):wkb;"	]
[ 9,	"X_402=<tmp_4073>[0]:bat[:lng] := bat.new(nil:lng);"	]
[ 9,	"X_390=<tmp_5112>[0]:bat[:int] := bat.new(nil:int);"	]
[ 9,	"X_388=<tmp_5216>[0]:bat[:int] := bat.new(nil:int);"	]
[ 10,	"X_391=<tmp_4551>[0]:bat[:int] := bat.new(nil:int);"	]
[ 56,	"X_1184=<tmp_432>[0]:bat[:int] := mat.packIncrement(X_982=<tmp_1255>[0]:bat[:int],8:int);"	]
[ 471,	"X_518=\"\"POINT Z (1 1 1)\"\":wkb := geom.MakePoint(A16=1:dbl,A17=1:dbl,A18=1:dbl);"	]
[ 18,	"X_405=<tmp_4073>[2796]:bat[:lng] := bat.append(X_402=<tmp_4073>[2796]:bat[:lng],X_404=<tmp_4323>[2796]:bat[:lng],true:bit);"	]
[ 11,	"X_1185=<tmp_432>[0]:bat[:int] := mat.packIncrement(X_1184=<tmp_432>[0]:bat[:int],X_983=<tmp_1522>[0]:bat[:int]);"	]
[ 7,	"X_407=<tmp_4073>[2798]:bat[:lng] := bat.append(X_405=<tmp_4073>[2798]:bat[:lng],X_406=<tmp_1616>[2]:bat[:lng],true:bit);"	]
[ 4,	"X_1186=<tmp_432>[0]:bat[:int] := mat.packIncrement(X_1185=<tmp_432>[0]:bat[:int],X_984=<tmp_736>[0]:bat[:int]);"	]
[ 4,	"X_1187=<tmp_432>[0]:bat[:int] := mat.packIncrement(X_1186=<tmp_432>[0]:bat[:int],X_985=<tmp_4206>[0]:bat[:int]);"	]
[ 4,	"X_1188=<tmp_432>[0]:bat[:int] := mat.packIncrement(X_1187=<tmp_432>[0]:bat[:int],X_986=<tmp_1061>[0]:bat[:int]);"	]
[ 988,	"(X_408=<tmp_1616>[2798]:bat[:oid],r1_432=<tmp_4323>[15]:bat[:oid],r2_432=<tmp_15526>[15]:bat[:lng]) := group.subgroup(X_407=<tmp_4073>[2798]:bat[:lng]);"	]
[ 6,	"X_1189=<tmp_432>[0]:bat[:int] := mat.packIncrement(X_1188=<tmp_432>[0]:bat[:int],X_987=<tmp_2405>[0]:bat[:int]);"	]
[ 5,	"X_1190=<tmp_432>[0]:bat[:int] := mat.packIncrement(X_1189=<tmp_432>[0]:bat[:int],X_988=<tmp_2266>[0]:bat[:int]);"	]
[ 5,	"X_111=<tmp_432>[0]:bat[:int] := mat.packIncrement(X_1190=<tmp_432>[0]:bat[:int],X_989=<tmp_563>[0]:bat[:int]);"	]
[ 4,	"X_392=<tmp_4551>[0]:bat[:int] := bat.append(X_391=<tmp_4551>[0]:bat[:int],X_111=<tmp_432>[0]:bat[:int],true:bit);"	]
[ 5,	"X_393=<tmp_4551>[15]:bat[:int] := bat.append(X_392=<tmp_4551>[15]:bat[:int],X_192=<tmp_1500>[15]:bat[:int],true:bit);"	]
[ 11,	"X_394=<tmp_1500>[15]:bat[:int] := algebra.projection(X_221=<tmp_1165>[15]:bat[:oid],X_393=<tmp_4551>[15]:bat[:int]);"	]
[ 4,	"X_395=<tmp_5112>[15]:bat[:int] := bat.append(X_390=<tmp_5112>[15]:bat[:int],X_394=<tmp_1500>[15]:bat[:int],true:bit);"	]
[ 20,	"X_396=<tmp_5651>[0]:bat[:int] := algebra.projection(X_230=<tmp_2156>[0]:bat[:oid],X_393=<tmp_4551>[15]:bat[:int]);"	]
[ 3,	"language.pass(X_393=<tmp_4551>[15]:bat[:int]);"	]
[ 4,	"X_397=<tmp_5112>[15]:bat[:int] := bat.append(X_395=<tmp_5112>[15]:bat[:int],X_396=<tmp_5651>[0]:bat[:int],true:bit);"	]
[ 14,	"X_398=<tmp_5651>[2796]:bat[:int] := algebra.projection(X_298=<tmp_3053>[2796]:bat[:oid],X_397=<tmp_5112>[15]:bat[:int]);"	]
[ 16,	"X_400=<tmp_723>[2]:bat[:int] := algebra.projection(X_309=<tmp_6070>[2]:bat[:oid],X_397=<tmp_5112>[15]:bat[:int]);"	]
[ 10,	"X_399=<tmp_5216>[2796]:bat[:int] := bat.append(X_388=<tmp_5216>[2796]:bat[:int],X_398=<tmp_5651>[2796]:bat[:int],true:bit);"	]
[ 3,	"language.pass(X_397=<tmp_5112>[15]:bat[:int]);"	]
[ 7,	"X_401=<tmp_5216>[2798]:bat[:int] := bat.append(X_399=<tmp_5216>[2798]:bat[:int],X_400=<tmp_723>[2]:bat[:int],true:bit);"	]
[ 89,	"(X_411=<tmp_723>[2798]:bat[:oid],r1_435=<tmp_5651>[15]:bat[:oid],r2_435=<tmp_1046>[15]:bat[:lng]) := group.subgroup(X_401=<tmp_5216>[2798]:bat[:int],X_408=<tmp_1616>[2798]:bat[:oid]);"	]
[ 14,	"X_369=<tmp_564>[15]:bat[:bit] := batcalc.isnil(X_368=<tmp_2041>[15]:bat[:str]);"	]
[ 11,	"X_370=<tmp_2272>[15]:bat[:bit] := batcalc.not(X_369=<tmp_564>[15]:bat[:bit]);"	]
[ 13,	"X_371=<tmp_564>[15]:bat[:bit] := batcalc.isnil(X_370=<tmp_2272>[15]:bat[:bit]);"	]
[ 27,	"X_375=<tmp_3552>[15]:bat[:bit] := batcalc.ifthenelse(X_371=<tmp_564>[15]:bat[:bit],false:bit,X_370=<tmp_2272>[15]:bat[:bit]);"	]
[ 4,	"language.pass(X_370=<tmp_2272>[15]:bat[:bit]);"	]
[ 48,	"X_377=<tmp_4031>[15]:bat[:str] := batcalc.ifthenelse(X_375=<tmp_3552>[15]:bat[:bit],X_368=<tmp_2041>[15]:bat[:str],A8=\"transitie\":str);"	]
[ 3,	"language.pass(X_368=<tmp_2041>[15]:bat[:str]);"	]
[ 12,	"X_378=<tmp_5330>[15]:bat[:str] := bat.append(X_363=<tmp_5330>[15]:bat[:str],X_377=<tmp_4031>[15]:bat[:str],true:bit);"	]
[ 23,	"X_380=<tmp_4031>[15]:bat[:str] := algebra.projection(X_221=<tmp_1165>[15]:bat[:oid],X_378=<tmp_5330>[15]:bat[:str]);"	]
[ 4,	"language.pass(X_221=<tmp_1165>[15]:bat[:oid]);"	]
[ 31,	"X_382=<tmp_15526>[0]:bat[:str] := algebra.projection(X_230=<tmp_2156>[0]:bat[:oid],X_378=<tmp_5330>[15]:bat[:str]);"	]
[ 22,	"X_381=<tmp_2504>[15]:bat[:str] := bat.append(X_341=<tmp_2504>[15]:bat[:str],X_380=<tmp_4031>[15]:bat[:str],true:bit);"	]
[ 17,	"language.pass(X_230=<tmp_2156>[0]:bat[:oid]);"	]
[ 5,	"language.pass(X_378=<tmp_5330>[15]:bat[:str]);"	]
[ 4,	"X_383=<tmp_2504>[15]:bat[:str] := bat.append(X_381=<tmp_2504>[15]:bat[:str],X_382=<tmp_15526>[0]:bat[:str],true:bit);"	]
[ 73,	"X_384=<tmp_15526>[2796]:bat[:str] := algebra.projection(X_298=<tmp_3053>[2796]:bat[:oid],X_383=<tmp_2504>[15]:bat[:str]);"	]
[ 28,	"X_386=<tmp_5112>[2]:bat[:str] := algebra.projection(X_309=<tmp_6070>[2]:bat[:oid],X_383=<tmp_2504>[15]:bat[:str]);"	]
[ 3,	"language.pass(X_298=<tmp_3053>[2796]:bat[:oid]);"	]
[ 5,	"language.pass(X_309=<tmp_6070>[2]:bat[:oid]);"	]
[ 174,	"X_385=<tmp_567>[2796]:bat[:str] := bat.append(X_340=<tmp_567>[2796]:bat[:str],X_384=<tmp_15526>[2796]:bat[:str],true:bit);"	]
[ 7,	"X_387=<tmp_567>[2798]:bat[:str] := bat.append(X_385=<tmp_567>[2798]:bat[:str],X_386=<tmp_5112>[2]:bat[:str],true:bit);"	]
[ 123,	"(X_414=<tmp_5112>[2798]:bat[:oid],r1_438=<tmp_15526>[15]:bat[:oid],r2_438=<tmp_1616>[15]:bat[:lng]) := group.subgroup(X_387=<tmp_567>[2798]:bat[:str],X_411=<tmp_723>[2798]:bat[:oid]);"	]
[ 27,	"(X_417=<tmp_723>[2798]:bat[:oid],r1_441=<tmp_567>[15]:bat[:oid],r2_441=<tmp_1616>[15]:bat[:lng]) := group.subgroup(X_339=<tmp_5557>[2798]:bat[:str],X_414=<tmp_5112>[2798]:bat[:oid]);"	]
[ 1464,	"(X_420=<tmp_5112>[2798]:bat[:oid],r1_444=<tmp_5557>[15]:bat[:oid],r2_444=<tmp_1616>[15]:bat[:lng]) := group.subgroupdone(X_312=<tmp_2737>[2798]:bat[:wkb],X_417=<tmp_723>[2798]:bat[:oid]);"	]
[ 16,	"X_423=<tmp_723>[15]:bat[:wkb] := algebra.projection(r1_444=<tmp_5557>[15]:bat[:oid],X_312=<tmp_2737>[2798]:bat[:wkb]);"	]
[ 3,	"language.pass(X_312=<tmp_2737>[2798]:bat[:wkb]);"	]
[ 17,	"X_427=<tmp_2272>[15]:bat[:lng] := algebra.projection(r1_444=<tmp_5557>[15]:bat[:oid],X_407=<tmp_4073>[2798]:bat[:lng]);"	]
[ 3,	"language.pass(r1_444=<tmp_5557>[15]:bat[:oid]);"	]
[ 5,	"language.pass(X_407=<tmp_4073>[2798]:bat[:lng]);"	]
[ 34,	"X_428=<tmp_1165>[15]:bat[:int] := batcalc.int(X_427=<tmp_2272>[15]:bat[:lng]);"	]
[ 408,	"X_424=<tmp_2041>[15]:bat[:wkb] := mal.manifold(\"geom\":str,\"ExteriorRing\":str,X_423=<tmp_723>[15]:bat[:wkb]);"	]
[ 1520,	"(X_429=<tmp_2630>[330]:bat[:int],X_431=<tmp_723>[330]:bat[:str],X_432=<tmp_3552>[330]:bat[:wkb]) := batgeom.DumpPointsP(X_424=<tmp_2041>[15]:bat[:wkb],X_428=<tmp_1165>[15]:bat[:int]);"	]
[ 38,	"X_461=<tmp_5330>[330]:bat[:int] := batcalc.int(X_431=<tmp_723>[330]:bat[:str]);"	]
[ 1410,	"X_434=<tmp_1165>[330]:bat[:wkb] := batgeom.setSRID(X_432=<tmp_3552>[330]:bat[:wkb],A10=28992:int);"	]
[ 4765321,	"(X_444=<tmp_3552>[720907]:bat[:oid],r1_468=<tmp_2041>[720907]:bat[:oid]) := geom.DWithinsubjoin(X_434=<tmp_1165>[330]:bat[:wkb],X_292=<tmp_1405>[46296]:bat[:dbl],X_294=<tmp_735>[46296]:bat[:dbl],X_296=<tmp_2510>[46296]:bat[:dbl],A12=28992:int,A13=10:dbl,nil:BAT,nil:BAT,true:bit,nil:lng);"	]
[ 7230,	"X_455=<tmp_2272>[720907]:bat[:int] := algebra.projection(r1_468=<tmp_2041>[720907]:bat[:oid],X_295=<tmp_4000>[46296]:bat[:int]);"	]
[ 7216,	"X_453=<tmp_6070>[720907]:bat[:int] := algebra.projection(r1_468=<tmp_2041>[720907]:bat[:oid],X_293=<tmp_2740>[46296]:bat[:int]);"	]
[ 7223,	"X_451=<tmp_5557>[720907]:bat[:int] := algebra.projection(r1_468=<tmp_2041>[720907]:bat[:oid],X_291=<tmp_2040>[46296]:bat[:int]);"	]
[ 19,	"language.pass(r1_468=<tmp_2041>[720907]:bat[:oid]);"	]
[ 10909,	"X_463=<tmp_4073>[720907]:bat[:int] := algebra.projection(X_444=<tmp_3552>[720907]:bat[:oid],X_429=<tmp_2630>[330]:bat[:int]);"	]
[ 10909,	"X_462=<tmp_3053>[720907]:bat[:int] := algebra.projection(X_444=<tmp_3552>[720907]:bat[:oid],X_461=<tmp_5330>[330]:bat[:int]);"	]
[ 16273,	"X_456=<tmp_4000>[720907]:bat[:dbl] := batcalc.dbl(3:int,X_455=<tmp_2272>[720907]:bat[:int]);"	]
[ 16347,	"X_454=<tmp_2740>[720907]:bat[:dbl] := batcalc.dbl(3:int,X_453=<tmp_6070>[720907]:bat[:int]);"	]
[ 15309,	"X_452=<tmp_2737>[720907]:bat[:dbl] := batcalc.dbl(3:int,X_451=<tmp_5557>[720907]:bat[:int]);"	]
[ 42713,	"(X_464=<tmp_2630>[720907]:bat[:int],r1_488=<tmp_2156>[720907]:bat[:oid],r2_488=<tmp_4323>[720907]:bat[:oid]) := algebra.subsort(X_463=<tmp_4073>[720907]:bat[:int],true:bit,false:bit);"	]
[ 57263,	"X_450=<tmp_2510>[720907]:bat[:wkb] := algebra.projection(X_444=<tmp_3552>[720907]:bat[:oid],X_434=<tmp_1165>[330]:bat[:wkb]);"	]
[ 19,	"language.pass(X_444=<tmp_3552>[720907]:bat[:oid]);"	]
[ 4,	"language.pass(X_434=<tmp_1165>[330]:bat[:wkb]);"	]
[ 51014,	"(X_468=<tmp_723>[720907]:bat[:int],r1_492=<tmp_4551>[720907]:bat[:oid],r2_492=<tmp_2624>[720907]:bat[:oid]) := algebra.subsort(X_462=<tmp_3053>[720907]:bat[:int],r1_488=<tmp_2156>[720907]:bat[:oid],r2_488=<tmp_4323>[720907]:bat[:oid],true:bit,false:bit);"	]
[ 34062,	"(X_471=<tmp_1167>[720907]:bat[:int],r1_495=<tmp_4454>[720907]:bat[:oid],r2_495=<tmp_642>[720907]:bat[:oid]) := algebra.subsort(X_463=<tmp_4073>[720907]:bat[:int],r1_492=<tmp_4551>[720907]:bat[:oid],r2_492=<tmp_2624>[720907]:bat[:oid],false:bit,false:bit);"	]
[ 29054,	"(X_474=<tmp_6070>[720907]:bat[:int],r1_498=<tmp_4230>[720907]:bat[:oid],r2_498=<tmp_4775>[720907]:bat[:oid]) := algebra.subsort(X_462=<tmp_3053>[720907]:bat[:int],r1_495=<tmp_4454>[720907]:bat[:oid],r2_495=<tmp_642>[720907]:bat[:oid],false:bit,false:bit);"	]
[ 745126,	"x=<tmp_5330>[720907]:bat[:dbl] := batgeom.DistanceXYZ_bat(a=<tmp_2510>[720907]:bat[:wkb],x=<tmp_5330>[720907]:bat[:dbl],0:dbl,y=<tmp_2740>[720907]:bat[:dbl],0:dbl,z=<tmp_4000>[720907]:bat[:dbl],0:dbl,srid=28992:int);"	]
[ 745337,	"function batgeom.Distance(a:bat[:wkb],x:bat[:dbl],y:bat[:dbl],z:bat[:dbl],srid:int):bat[:dbl];"	]
[ 745435,	"X_458=<tmp_5330>[720907]:bat[:dbl] := batgeom.Distance(X_450=<tmp_2510>[720907]:bat[:wkb],X_452=<tmp_2737>[720907]:bat[:dbl],X_454=<tmp_2740>[720907]:bat[:dbl],X_456=<tmp_4000>[720907]:bat[:dbl],A11=28992:int);"	]
[ 110103,	"(X_477=<tmp_4000>[720907]:bat[:dbl],r1_501=<tmp_2740>[720907]:bat[:oid],r2_501=<tmp_2737>[720907]:bat[:oid]) := algebra.subsort(X_458=<tmp_5330>[720907]:bat[:dbl],r1_498=<tmp_4230>[720907]:bat[:oid],r2_498=<tmp_4775>[720907]:bat[:oid],false:bit,false:bit);"	]
[ 6161,	"X_480=<tmp_4775>[720907]:bat[:int] := algebra.projection(r1_501=<tmp_2740>[720907]:bat[:oid],X_463=<tmp_4073>[720907]:bat[:int]);"	]
[ 24,	"language.pass(X_463=<tmp_4073>[720907]:bat[:int]);"	]
[ 7041,	"X_484=<tmp_5557>[720907]:bat[:int] := algebra.projection(r1_501=<tmp_2740>[720907]:bat[:oid],X_462=<tmp_3053>[720907]:bat[:int]);"	]
[ 7,	"language.pass(X_462=<tmp_3053>[720907]:bat[:int]);"	]
[ 17613,	"X_488=<tmp_2630>[720907]:bat[:dbl] := algebra.projection(r1_501=<tmp_2740>[720907]:bat[:oid],X_458=<tmp_5330>[720907]:bat[:dbl]);"	]
[ 12,	"language.pass(X_458=<tmp_5330>[720907]:bat[:dbl]);"	]
[ 11767,	"X_481=<tmp_1165>[720907]:bat[:bit] := batsql.diff(X_480=<tmp_4775>[720907]:bat[:int]);"	]
[ 8823,	"X_485=<tmp_2041>[720907]:bat[:bit] := batsql.diff(X_481=<tmp_1165>[720907]:bat[:bit],X_484=<tmp_5557>[720907]:bat[:int]);"	]
[ 10953,	"X_489=<tmp_5557>[720907]:bat[:bit] := batsql.diff(X_485=<tmp_2041>[720907]:bat[:bit],X_488=<tmp_2630>[720907]:bat[:dbl]);"	]
[ 5808,	"X_490=<tmp_2630>[720907]:bat[:int] := batsql.rank(X_480=<tmp_4775>[720907]:bat[:int],X_485=<tmp_2041>[720907]:bat[:bit],X_489=<tmp_5557>[720907]:bat[:bit]);"	]
[ 7,	"language.pass(X_485=<tmp_2041>[720907]:bat[:bit]);"	]
[ 2355,	"C_493=<tmp_5557>[330]:bat[:oid] := algebra.subselect(X_490=<tmp_2630>[720907]:bat[:int],A14=1:int,A14=1:int,true:bit,false:bit,false:bit);"	]
[ 55,	"X_510=<tmp_4323>[330]:bat[:int] := algebra.projection(C_493=<tmp_5557>[330]:bat[:oid],X_480=<tmp_4775>[720907]:bat[:int]);"	]
[ 7,	"language.pass(X_480=<tmp_4775>[720907]:bat[:int]);"	]
[ 535,	"(X_511=<tmp_642>[330]:bat[:oid],r1_535=<tmp_4454>[15]:bat[:oid],r2_535=<tmp_6070>[15]:bat[:lng]) := group.subgroupdone(X_510=<tmp_4323>[330]:bat[:int]);"	]
[ 924,	"X_503=<tmp_2624>[330]:bat[:int] := algebra.projectionpath(C_493=<tmp_5557>[330]:bat[:oid],r1_501=<tmp_2740>[720907]:bat[:oid],X_455=<tmp_2272>[720907]:bat[:int]);"	]
[ 17,	"X_523=<tmp_6070>[15]:bat[:int] := algebra.projection(r1_535=<tmp_4454>[15]:bat[:oid],X_510=<tmp_4323>[330]:bat[:int]);"	]
[ 6,	"language.pass(X_455=<tmp_2272>[720907]:bat[:int]);"	]
[ 1222,	"X_496=<tmp_2630>[330]:bat[:wkb] := algebra.projectionpath(C_493=<tmp_5557>[330]:bat[:oid],r1_501=<tmp_2740>[720907]:bat[:oid],X_450=<tmp_2510>[720907]:bat[:wkb]);"	]
[ 164,	"X_504=<tmp_4073>[330]:bat[:dbl] := batcalc.dbl(3:int,X_503=<tmp_2624>[330]:bat[:int]);"	]
[ 111,	"language.pass(X_510=<tmp_4323>[330]:bat[:int]);"	]
[ 12,	"X_524=<tmp_6070>[15]:bat[:int] := bat.setKey(X_523=<tmp_6070>[15]:bat[:int],true:bit);"	]
[ 11,	"language.pass(C_493=<tmp_5557>[330]:bat[:oid]);"	]
[ 32,	"language.pass(X_450=<tmp_2510>[720907]:bat[:wkb]);"	]
[ 4,	"language.pass(r1_501=<tmp_2740>[720907]:bat[:oid]);"	]
[ 2359,	"c=<tmp_2624>[330]:bat[:dbl] := batgeom.GetCoordinate(w=<tmp_2630>[330]:bat[:wkb],0:int);"	]
[ 2607,	"function batgeom.X(w:bat[:wkb]):bat[:dbl];"	]
[ 2795,	"X_497=<tmp_2624>[330]:bat[:dbl] := batgeom.X(X_496=<tmp_2630>[330]:bat[:wkb]);"	]
[ 3104,	"c=<tmp_4323>[330]:bat[:dbl] := batgeom.GetCoordinate(w=<tmp_2630>[330]:bat[:wkb],1:int);"	]
[ 7304,	"function batgeom.Y(w:bat[:wkb]):bat[:dbl];"	]
[ 7481,	"X_500=<tmp_4323>[330]:bat[:dbl] := batgeom.Y(X_496=<tmp_2630>[330]:bat[:wkb]);"	]
[ 9,	"language.pass(X_496=<tmp_2630>[330]:bat[:wkb]);"	]
[ 1194,	"p=<tmp_4775>[330]:bat[:wkb] := batgeom.MakePointXYZM(x=<tmp_2624>[330]:bat[:dbl],y=<tmp_4323>[330]:bat[:dbl],z=<tmp_4073>[330]:bat[:dbl],nil:bat[:dbl],10:int);"	]
[ 1345,	"function batgeom.MakePoint(x:bat[:dbl],y:bat[:dbl],z:bat[:dbl]):bat[:wkb];"	]
[ 1448,	"X_508=<tmp_4775>[330]:bat[:wkb] := batgeom.MakePoint(X_497=<tmp_2624>[330]:bat[:dbl],X_500=<tmp_4323>[330]:bat[:dbl],X_504=<tmp_4073>[330]:bat[:dbl]);"	]
[ 17471,	"X_514=<tmp_4073>[15]:bat[:wkb] := geom.subMakeLine(X_508=<tmp_4775>[330]:bat[:wkb],X_511=<tmp_642>[330]:bat[:oid],r1_535=<tmp_4454>[15]:bat[:oid],true:bit);"	]
[ 4,	"language.pass(r1_535=<tmp_4454>[15]:bat[:oid]);"	]
[ 319,	"res=<tmp_4454>[15]:bat[:oid] := geom.wkbIsValidsubselect(lb=<tmp_4073>[15]:bat[:wkb],sl=nil:bat[:oid],nil_matches=false:bit);"	]
[ 448,	"function geom.IsValidDsubselect(lb:bat[:wkb],sl:bat[:oid],b:wkb,nil_matches:bit):bat[:oid];"	]
[ 523,	"X_519=<tmp_4454>[15]:bat[:oid] := geom.IsValidDsubselect(X_514=<tmp_4073>[15]:bat[:wkb],nil:BAT,X_518=\"\"POINT Z (1 1 1)\"\":wkb,false:bit);"	]
[ 25,	"X_522=<tmp_642>[15]:bat[:wkb] := algebra.projection(X_519=<tmp_4454>[15]:bat[:oid],X_514=<tmp_4073>[15]:bat[:wkb]);"	]
[ 3,	"language.pass(X_514=<tmp_4073>[15]:bat[:wkb]);"	]
[ 20,	"X_525=<tmp_5557>[15]:bat[:int] := algebra.projection(X_519=<tmp_4454>[15]:bat[:oid],X_524=<tmp_6070>[15]:bat[:int]);"	]
[ 16,	"language.pass(X_519=<tmp_4454>[15]:bat[:oid]);"	]
[ 34,	"(X_526=<tmp_2272>[15]:bat[:oid],r1_550=<tmp_4551>[15]:bat[:oid],r2_550=<tmp_1167>[15]:bat[:lng]) := group.subgroupdone(X_525=<tmp_5557>[15]:bat[:int]);"	]
[ 15,	"X_535=<tmp_1167>[15]:bat[:int] := algebra.projection(r1_550=<tmp_4551>[15]:bat[:oid],X_525=<tmp_5557>[15]:bat[:int]);"	]
[ 5,	"language.pass(X_525=<tmp_5557>[15]:bat[:int]);"	]
[ 16,	"X_536=<tmp_1167>[15]:bat[:int] := bat.setKey(X_535=<tmp_1167>[15]:bat[:int],true:bit);"	]
[ 458,	"X_529=<tmp_4230>[15]:bat[:wkb] := geom.subCollect(X_522=<tmp_642>[15]:bat[:wkb],X_526=<tmp_2272>[15]:bat[:oid],r1_550=<tmp_4551>[15]:bat[:oid],true:bit);"	]
[ 4,	"language.pass(r1_550=<tmp_4551>[15]:bat[:oid]);"	]
[ 9926,	"X_532=<tmp_2630>[15]:bat[:wkb] := batgeom.triangulate2DZ(X_529=<tmp_4230>[15]:bat[:wkb],A15=0:int);"	]
[ 5108,	"(X_537=<tmp_3416>[524]:bat[:int],X_539=<tmp_4230>[524]:bat[:str],X_540=<tmp_3170>[524]:bat[:wkb]) := batgeom.DumpP(X_532=<tmp_2630>[15]:bat[:wkb],X_536=<tmp_1167>[15]:bat[:int]);"	]
[ 19,	"X_541=<tmp_1167>[524]:bat[:lng] := batcalc.lng(X_537=<tmp_3416>[524]:bat[:int]);"	]
[ 39,	"(X_542=<tmp_2630>[524]:bat[:oid],r1_566=<tmp_4230>[524]:bat[:oid]) := algebra.subjoin(X_541=<tmp_1167>[524]:bat[:lng],X_307=<tmp_3413>[15]:bat[:lng],nil:BAT,nil:BAT,false:bit,nil:lng);"	]
[ 4,	"language.pass(X_307=<tmp_3413>[15]:bat[:lng]);"	]
[ 3504,	"X_545=<tmp_3413>[524]:bat[:wkb] := algebra.projection(r1_566=<tmp_4230>[524]:bat[:oid],X_232=<tmp_1726>[15]:bat[:wkb]);"	]
[ 5424,	"X_549=<tmp_2510>[524]:bat[:wkb] := mal.manifold(\"geom\":str,\"ExteriorRing\":str,X_540=<tmp_3170>[524]:bat[:wkb]);"	]
[ 4594,	"x=<tmp_3170>[524]:bat[:wkb] := batgeom.Polygon_bat(w=<tmp_2510>[524]:bat[:wkb],0:int);"	]
[ 4769,	"function batgeom.MakePolygon(w:bat[:wkb]):bat[:wkb];"	]
[ 4871,	"X_551=<tmp_3170>[524]:bat[:wkb] := batgeom.MakePolygon(X_549=<tmp_2510>[524]:bat[:wkb]);"	]
[ 68,	"X_553=<tmp_2510>[524]:bat[:wkb] := algebra.projection(X_542=<tmp_2630>[524]:bat[:oid],X_551=<tmp_3170>[524]:bat[:wkb]);"	]
[ 4733,	"X_555=<tmp_5330>[524]:bat[:wkb] := batgeom.setSRID(X_553=<tmp_2510>[524]:bat[:wkb],A20=28992:int);"	]
[ 37296,	"X_547=<tmp_1167>[524]:bat[:wkb] := batgeom.setSRID(X_545=<tmp_3413>[524]:bat[:wkb],A19=28992:int);"	]
[ 73239,	"X_556=<tmp_3413>[524]:bat[:bit] := batgeom.Contains(X_547=<tmp_1167>[524]:bat[:wkb],X_555=<tmp_5330>[524]:bat[:wkb]);"	]
[ 16,	"C_558=<tmp_5330>[285]:bat[:oid] := algebra.subselect(X_556=<tmp_3413>[524]:bat[:bit],true:bit,true:bit,true:bit,true:bit,false:bit);"	]
[ 10,	"X_560=<tmp_3413>[285]:bat[:oid] := algebra.projection(C_558=<tmp_5330>[285]:bat[:oid],X_542=<tmp_2630>[524]:bat[:oid]);"	]
[ 4,	"language.pass(X_542=<tmp_2630>[524]:bat[:oid]);"	]
[ 15,	"X_565=<tmp_4073>[285]:bat[:oid] := algebra.projection(C_558=<tmp_5330>[285]:bat[:oid],r1_566=<tmp_4230>[524]:bat[:oid]);"	]
[ 20,	"X_561=<tmp_4454>[285]:bat[:int] := algebra.projection(X_560=<tmp_3413>[285]:bat[:oid],X_537=<tmp_3416>[524]:bat[:int]);"	]
[ 2,	"language.pass(C_558=<tmp_5330>[285]:bat[:oid]);"	]
[ 4,	"language.pass(X_537=<tmp_3416>[524]:bat[:int]);"	]
[ 7,	"language.pass(r1_566=<tmp_4230>[524]:bat[:oid]);"	]
[ 48,	"(C_563=<tmp_2740>[285]:bat[:oid],C1_587=<tmp_3552>[285]:bat[:oid]) := algebra.crossproduct(X_561=<tmp_4454>[285]:bat[:int],X_30=<tmp_2375>[1]:bat[:wkb]);"	]
[ 1082,	"X_571=<tmp_4551>[285]:bat[:wkb] := algebra.projection(C1_587=<tmp_3552>[285]:bat[:oid],X_30=<tmp_2375>[1]:bat[:wkb]);"	]
[ 14,	"language.pass(X_30=<tmp_2375>[1]:bat[:wkb]);"	]
[ 2215,	"X_567=<tmp_735>[285]:bat[:wkb] := algebra.projectionpath(C_563=<tmp_2740>[285]:bat[:oid],X_565=<tmp_4073>[285]:bat[:oid],X_232=<tmp_1726>[15]:bat[:wkb]);"	]
[ 12,	"language.pass(X_232=<tmp_1726>[15]:bat[:wkb]);"	]
[ 5472,	"X_568=<tmp_3053>[285]:bat[:wkb] := batgeom.Centroid(X_567=<tmp_735>[285]:bat[:wkb]);"	]
[ 5143,	"res=<tmp_735>[285]:bat[:bit] := batgeom.IntersectsWKB(a=<tmp_3053>[285]:bat[:wkb],b=<tmp_4551>[285]:bat[:wkb],nil:wkb);"	]
[ 5300,	"function batgeom.Intersects(a:bat[:wkb],b:bat[:wkb]):bat[:bit];"	]
[ 5418,	"X_572=<tmp_735>[285]:bat[:bit] := batgeom.Intersects(X_568=<tmp_3053>[285]:bat[:wkb],X_571=<tmp_4551>[285]:bat[:wkb]);"	]
[ 21,	"C_574=<tmp_4551>[285]:bat[:oid] := algebra.subselect(X_572=<tmp_735>[285]:bat[:bit],true:bit,true:bit,true:bit,true:bit,false:bit);"	]
[ 12,	"X_577=<tmp_735>[285]:bat[:oid] := algebra.projection(C_574=<tmp_4551>[285]:bat[:oid],C_563=<tmp_2740>[285]:bat[:oid]);"	]
[ 4,	"language.pass(C_563=<tmp_2740>[285]:bat[:oid]);"	]
[ 33,	"X_578=<tmp_5330>[285]:bat[:int] := algebra.projection(X_577=<tmp_735>[285]:bat[:oid],X_561=<tmp_4454>[285]:bat[:int]);"	]
[ 67,	"X_590=<tmp_2510>[285]:bat[:wkb] := algebra.projectionpath(X_577=<tmp_735>[285]:bat[:oid],X_560=<tmp_3413>[285]:bat[:oid],X_551=<tmp_3170>[524]:bat[:wkb]);"	]
[ 51,	"X_580=<tmp_2630>[285]:bat[:str] := algebra.projectionpath(X_577=<tmp_735>[285]:bat[:oid],X_565=<tmp_4073>[285]:bat[:oid],X_383=<tmp_2504>[15]:bat[:str]);"	]
[ 6,	"language.pass(X_561=<tmp_4454>[285]:bat[:int]);"	]
[ 3,	"language.pass(X_560=<tmp_3413>[285]:bat[:oid]);"	]
[ 3,	"language.pass(X_577=<tmp_735>[285]:bat[:oid]);"	]
[ 6,	"language.pass(X_565=<tmp_4073>[285]:bat[:oid]);"	]
[ 6,	"language.pass(X_383=<tmp_2504>[15]:bat[:str]);"	]
[ 29,	"(X_581=<tmp_3416>[285]:bat[:oid],r1_605=<tmp_6070>[3]:bat[:oid],r2_605=<tmp_2040>[3]:bat[:lng]) := group.subgroup(X_580=<tmp_2630>[285]:bat[:str]);"	]
[ 26,	"language.pass(X_551=<tmp_3170>[524]:bat[:wkb]);"	]
[ 53,	"(X_584=<tmp_2040>[285]:bat[:oid],r1_608=<tmp_6070>[15]:bat[:oid],r2_608=<tmp_564>[15]:bat[:lng]) := group.subgroupdone(X_578=<tmp_5330>[285]:bat[:int],X_581=<tmp_3416>[285]:bat[:oid]);"	]
[ 12,	"X_587=<tmp_3416>[15]:bat[:int] := algebra.projection(r1_608=<tmp_6070>[15]:bat[:oid],X_578=<tmp_5330>[285]:bat[:int]);"	]
[ 12,	"language.pass(X_578=<tmp_5330>[285]:bat[:int]);"	]
[ 51,	"X_588=<tmp_2740>[15]:bat[:str] := algebra.projection(r1_608=<tmp_6070>[15]:bat[:oid],X_580=<tmp_2630>[285]:bat[:str]);"	]
[ 5,	"language.pass(X_580=<tmp_2630>[285]:bat[:str]);"	]
[ 102612,	"X_591=<tmp_4454>[15]:bat[:wkb] := geom.subCollect(X_590=<tmp_2510>[285]:bat[:wkb],X_584=<tmp_2040>[285]:bat[:oid],r1_608=<tmp_6070>[15]:bat[:oid],true:bit);"	]
[ 4,	"language.pass(r1_608=<tmp_6070>[15]:bat[:oid]);"	]
[ 9609,	"X_596=<tmp_3413>[15]:bat[:str] := batgeom.asX3D(X_591=<tmp_4454>[15]:bat[:wkb],X_593=4:int,A22=0:int);"	]
[ 6047994,	"barrier X_1322=false:bit := language.dataflow();"	]
[ 2091,	"X_598=0:int := sql.resultSet(X_623=<tmp_3644>[3]:bat[:str],X_625=<tmp_430>[3]:bat[:str],X_627=<tmp_3173>[3]:bat[:str],X_628=<tmp_1633>[3]:bat[:int],X_629=<tmp_1273>[3]:bat[:int],X_587=<tmp_3416>[15]:bat[:int],X_588=<tmp_2740>[15]:bat[:str],X_596=<tmp_3413>[15]:bat[:str]);"	]
[ 13235288,	"function user.s11_1(A0:int,A1:str,A2:str,A3:str,A4:str,A5:bte,A6:int,A7:str,A8:str,A9:int,A10:int,A11:int,A12:int,A13:dbl,A14:int,A15:int,A16:dbl,A17:dbl,A18:dbl,A19:int,A20:int,A21:bte,A22:int):void;"	]
[ 13235640,	"X_0=0@0:void := user.s11_1(28992:int,\"plantcover\":str,\"ST_Polygon\":str,\"bare\":str,\"ST_Polygon\":str,2:bte,28992:int,\"transitie\":str,\"transitie\":str,28992:int,28992:int,28992:int,28992:int,10:dbl,1:int,0:int,1:dbl,1:dbl,1:dbl,28992:int,28992:int,40:bte,0:int);"	]
